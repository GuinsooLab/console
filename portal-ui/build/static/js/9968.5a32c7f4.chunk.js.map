{"version":3,"file":"static/js/9968.5a32c7f4.chunk.js","mappings":"wNA2EA,UA1CqB,SAAC,GAIK,IAHzBA,EAGwB,EAHxBA,2BACAC,EAEwB,EAFxBA,WACAC,EACwB,EADxBA,eAEMC,GAAWC,EAAAA,EAAAA,MAMjB,GAAyCC,EAAAA,EAAAA,IALpB,kBAAML,GAA2B,MACnC,SAACM,GAAD,OACjBH,GAASI,EAAAA,EAAAA,IAAqBD,OAGhC,eAAOE,EAAP,KAAsBC,EAAtB,KAEA,IAAKP,EACH,OAAO,KAST,OACE,SAAC,IAAD,CACEQ,MAAK,gBACLC,YAAa,SACbC,OAAQX,EACRY,WAAW,SAAC,MAAD,IACXC,UAAWN,EACXO,UAboB,WACtBN,EAAgB,SAAD,0BAA8BP,GAAkB,CAC7Dc,KAAMd,KAYNe,QAtBY,kBAAMjB,GAA2B,IAuB7CkB,qBACE,UAAC,IAAD,sDACyC,uBAAIhB,IAD7C,MACkE,kBADlE","sources":["screens/Console/Buckets/ListBuckets/DeleteBucket.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { DialogContentText } from \"@mui/material\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeleteBucketProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedBucket: string;\n}\n\nconst DeleteBucket = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedBucket,\n}: IDeleteBucketProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedBucket) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/buckets/${selectedBucket}`, {\n      name: selectedBucket,\n    });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Bucket`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete bucket <b>{selectedBucket}</b>? <br />\n          A bucket can only be deleted if it's empty.\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeleteBucket;\n"],"names":["closeDeleteModalAndRefresh","deleteOpen","selectedBucket","dispatch","useAppDispatch","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","name","onClose","confirmationContent"],"sourceRoot":""}