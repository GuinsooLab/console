{"version":3,"file":"static/js/2661.04f9b92d.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper.tsx","screens/Console/Buckets/BucketDetails/AddEvent.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInputProps,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (returnedValue: string) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst AutocompleteWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  const [internalValue, setInternalValue] = useState<selectorTypes>(options[0]);\n\n  const executeOnSelect = (_: any, selectedValue: any) => {\n    if (selectedValue) {\n      onChange(selectedValue.value);\n      setInternalValue(selectedValue);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Autocomplete\n            id={id}\n            options={options}\n            getOptionLabel={(option) => option.label}\n            isOptionEqualToValue={(option) => option.value === value}\n            disabled={disabled}\n            renderInput={(params) => <InputField {...params} name={name} />}\n            value={internalValue}\n            onChange={executeOnSelect}\n            autoHighlight\n          />\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(AutocompleteWrapper);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { Button } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../../common/api\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Table from \"@mui/material/Table\";\nimport { ArnList } from \"../types\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AutocompleteWrapper from \"../../Common/FormComponents/AutocompleteWrapper/AutocompleteWrapper\";\nimport { EventSubscriptionIcon } from \"../../../../icons\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    arnField: {\n      \"& div div .MuiOutlinedInput-root\": {\n        padding: 0,\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface IAddEventProps {\n  classes: any;\n  open: boolean;\n  selectedBucket: string;\n  closeModalAndRefresh: () => void;\n}\n\nconst AddEvent = ({\n  classes,\n  open,\n  selectedBucket,\n  closeModalAndRefresh,\n}: IAddEventProps) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [suffix, setSuffix] = useState<string>(\"\");\n  const [arn, setArn] = useState<string>(\"\");\n  const [selectedEvents, setSelectedEvents] = useState<string[]>([]);\n  const [arnList, setArnList] = useState<string[]>([]);\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", `/api/v1/buckets/${selectedBucket}/events`, {\n        configuration: {\n          arn: arn,\n          events: selectedEvents,\n          prefix: prefix,\n          suffix: suffix,\n        },\n        ignoreExisting: true,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  };\n\n  const fetchArnList = useCallback(() => {\n    setAddLoading(true);\n    api\n      .invoke(\"GET\", `/api/v1/admin/arns`)\n      .then((res: ArnList) => {\n        let arns: string[] = [];\n        if (res.arns !== null) {\n          arns = res.arns;\n        }\n        setAddLoading(false);\n        setArnList(arns);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(err));\n      });\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchArnList();\n  }, [fetchArnList]);\n\n  const events = [\n    { label: \"PUT - Object Uploaded\", value: \"put\" },\n    { label: \"GET - Object accessed\", value: \"get\" },\n    { label: \"DELETE - Object Deleted\", value: \"delete\" },\n  ];\n\n  const handleClick = (\n    event: React.MouseEvent<unknown> | ChangeEvent<unknown>,\n    name: string\n  ) => {\n    const selectedIndex = selectedEvents.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedEvents, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedEvents.slice(1));\n    } else if (selectedIndex === selectedEvents.length - 1) {\n      newSelected = newSelected.concat(selectedEvents.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selectedEvents.slice(0, selectedIndex),\n        selectedEvents.slice(selectedIndex + 1)\n      );\n    }\n    setSelectedEvents(newSelected);\n  };\n\n  const arnValues = arnList.map((arnConstant) => ({\n    label: arnConstant,\n    value: arnConstant,\n  }));\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      title=\"Subscribe To Bucket Events\"\n      titleIcon={<EventSubscriptionIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.arnField} ${classes.formFieldRow}`}\n            >\n              <AutocompleteWrapper\n                onChange={(value: string) => {\n                  setArn(value);\n                }}\n                id=\"select-access-policy\"\n                name=\"select-access-policy\"\n                label={\"ARN\"}\n                value={arn}\n                options={arnValues}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"prefix-input\"\n                name=\"prefix-input\"\n                label=\"Prefix\"\n                value={prefix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"suffix-input\"\n                name=\"suffix-input\"\n                label=\"Suffix\"\n                value={suffix}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setSuffix(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <Table size=\"medium\">\n                <TableHead className={classes.minTableHeader}>\n                  <TableRow>\n                    <TableCell>Select</TableCell>\n                    <TableCell>Event</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {events.map((row) => (\n                    <TableRow\n                      key={`group-${row.value}`}\n                      onClick={(event) => handleClick(event, row.value)}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          value={row.value}\n                          color=\"primary\"\n                          inputProps={{\n                            \"aria-label\": \"secondary checkbox\",\n                          }}\n                          onChange={(event) => handleClick(event, row.value)}\n                          checked={selectedEvents.includes(row.value)}\n                        />\n                      </TableCell>\n                      <TableCell className={classes.wrapCell}>\n                        {row.label}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(AddEvent);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["inputStyles","makeStyles","theme","createStyles","inputFieldStyles","InputField","props","classes","TextField","InputProps","withStyles","fieldBasic","tooltipHelper","id","name","onChange","options","label","tooltip","value","disabled","useState","internalValue","setInternalValue","Grid","item","xs","className","fieldContainer","InputLabel","htmlFor","inputLabel","tooltipContainer","Tooltip","title","placement","HelpIcon","FormControl","fullWidth","Autocomplete","getOptionLabel","option","isOptionEqualToValue","renderInput","params","_","selectedValue","autoHighlight","arnField","padding","formFieldStyles","modalStyleUtils","open","selectedBucket","closeModalAndRefresh","dispatch","useAppDispatch","addLoading","setAddLoading","prefix","setPrefix","suffix","setSuffix","arn","setArn","selectedEvents","setSelectedEvents","arnList","setArnList","fetchArnList","useCallback","api","then","res","arns","catch","err","setModalErrorSnackMessage","useEffect","handleClick","event","selectedIndex","indexOf","newSelected","concat","slice","length","arnValues","map","arnConstant","ModalWrapper","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","preventDefault","configuration","events","ignoreExisting","container","formScrollable","formFieldRow","InputBoxWrapper","target","Table","size","TableHead","minTableHeader","TableRow","TableCell","TableBody","row","onClick","Checkbox","color","inputProps","checked","includes","wrapCell","modalButtonBar","Button","type","variant","deleteDialogStyles","content","paddingBottom","customDialogSize","width","maxWidth","snackBarCommon","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","setModalSnackMessage","message","customSize","paper","detailedErrorMsg","scroll","reason","root","titleText","closeContainer","closeButton","disableRipple","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","getTableHeadUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableHeadRoot","styled","overridesResolver","styles","display","tablelvl2","defaultComponent","React","inProps","ref","useThemeProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","Tablelvl2Context","as","clsx","role"],"sourceRoot":""}