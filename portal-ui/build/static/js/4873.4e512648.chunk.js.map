{"version":3,"file":"static/js/4873.4e512648.chunk.js","mappings":"4JAgCA,IApBuB,SAAC,GAOI,IAAD,IANzBA,MAAAA,OAMyB,MANjB,KAMiB,MALzBC,MAAAA,OAKyB,MALjB,IAKiB,MAJzBC,YAAAA,OAIyB,MAJX,SAIW,MAHzBC,SAAAA,OAGyB,MAHd,GAGc,MAFzBC,SAAAA,OAEyB,MAFd,GAEc,MADzBC,SAAAA,OACyB,MADd,GACc,EACzB,OACE,UAAC,KAAD,gBAAOC,UAAW,CAAEC,GAAI,SAAUC,GAAIN,IAAmBC,GAAzD,eACE,kCAAOM,MAAO,CAAEC,YAAa,EAAGC,WAAY,MAAWP,GAAvD,aACGJ,MAEH,kCAAOS,MAAO,CAAEC,YAAa,EAAGC,WAAY,MAAWN,GAAvD,aACGJ,W,+NC6BHW,EAAQ,SAACC,GACb,IAAQC,EAAUD,EAAVC,MACR,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,UAAC,WAAD,YACE,UAAC,IAAD,CAAUC,GAAI,CAAE,QAAS,CAAEC,aAAc,SAAWC,OAAQ,WAA5D,WACE,SAAC,IAAD,CAAWC,UAAU,KAAKC,MAAM,MAAMC,QAAS,kBAAMN,GAASD,IAA9D,SACGF,EAAMU,cAET,SAAC,IAAD,CAAWD,QAAS,kBAAMN,GAASD,IAAnC,SAA2CF,EAAMW,UACjD,SAAC,IAAD,CAAWF,QAAS,kBAAMN,GAASD,IAAnC,SAA2CF,EAAMY,QACjD,SAAC,IAAD,CAAWH,QAAS,kBAAMN,GAASD,IAAnC,SACGF,EAAMa,QAAQC,QAAU,GAAxB,UACMd,EAAMa,QAAQE,MAAM,EAAG,IAD7B,OAEGf,EAAMa,WAEZ,SAAC,IAAD,CAAWJ,QAAS,kBAAMN,GAASD,IAAnC,SACGA,GAAO,SAAC,IAAD,KAA0B,SAAC,IAAD,UAGtC,SAAC,IAAD,WACE,SAAC,IAAD,CAAWP,MAAO,CAAEqB,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,UACE,SAAC,IAAD,CAAUC,GAAIjB,EAAMkB,QAAQ,OAAOC,eAAa,EAAhD,UACE,SAAC,IAAD,CAAKjB,GAAI,CAAEkB,OAAQ,GAAnB,UACE,SAAC,IAAD,CACE3B,MAAO,CACL4B,WAAY,UACZC,OAAQ,oBACRC,QAAS,EACTC,SAAU,GACVC,MAAO,WANX,SASG3B,EAAMa,sBAoCvB,KAAee,EAAAA,EAAAA,IApFA,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACXC,OAAQ,CACN,wBAAyB,CACvBL,SAAU,IAEZ,kBAAmB,CACjB,kBAAmB,CACjBM,QAAS,cA4EnB,EA1BmB,SAAC,GAAmD,EAAjDC,QAAkD,IAAzCF,EAAwC,EAAxCA,OAC7B,OADqE,EAAhCG,SAE5B,SAAC,IAAD,KAGP,SAAC,IAAD,CAAgB3B,UAAW4B,EAAAA,EAA3B,UACE,UAAC,IAAD,CAAO,aAAW,oBAAlB,WACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,oBACA,SAAC,IAAD,sBACA,SAAC,IAAD,mBACA,SAAC,IAAD,uBACA,SAAC,IAAD,UAGJ,SAAC,IAAD,UACGJ,EAAOK,KAAI,SAACpC,GAAD,OACV,SAACF,EAAD,CAAiDE,MAAOA,GAAxD,UAAeA,EAAMU,WAArB,YAAmCV,EAAMY,qB,4SCsIrD,GAAegB,EAAAA,EAAAA,IAxMA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,wBACXO,QAAS,CACPd,WAAY,OACZe,UAAW,IACXC,OAAQ,sBACRC,SAAU,OACVd,SAAU,GACVD,QAAS,cACTD,OAAQ,oBACRiB,aAAc,IAEbC,EAAAA,IACAC,EAAAA,IAZO,IAaVC,aAAY,kBACPA,EAAAA,GAAAA,aADM,IAETnB,QAAS,aAEXoB,aAAc,CACZlB,MAAO,UACPmB,YAAa,IAEfC,YAAa,CACXpB,MAAO,OACPqB,WAAY,QAEdC,UAAW,CACT,SAAU,CACRC,gBAAiB,gBAGlBC,EAAAA,EAAAA,IAAmBtB,EAAMuB,QAAQ,QAyKxC,EAtKgB,SAAC,GAMK,IALpBnB,EAKmB,EALnBA,QACAoB,EAImB,EAJnBA,OACAC,EAGmB,EAHnBA,UACAC,EAEmB,EAFnBA,QACAC,EACmB,EADnBA,YAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KACpB,SAACC,GAAD,OAAqBA,EAAMC,QAAQH,iBAErC,GAAkCI,EAAAA,EAAAA,UAAiB,IAAnD,eAAOd,EAAP,KAAkBe,EAAlB,KACA,GAAgCD,EAAAA,EAAAA,UAAmB,IAAnD,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAA8BH,EAAAA,EAAAA,WAAkB,GAAhD,eAAO7B,EAAP,KAAgBiC,EAAhB,KAEMC,EAAQ,IAAIC,EAAAA,GAAkB,CAClCC,SAAU,EACVC,aAAa,KAGfC,EAAAA,EAAAA,YAAU,WACJhB,GACFW,GAAW,KAEZ,CAACX,KAEJgB,EAAAA,EAAAA,YAAU,WACJb,GACFQ,GAAW,KAEZ,CAACR,IAEJ,IAAMc,EAAY,SAACC,EAAoBC,GACrC,IAAKD,EACH,OAAO,KAMT,IAKIE,GARJF,EAAaA,EAAWG,QAAQ,kBAAmB,KAQ3BA,QALJ,kBAKyB,IAGzCC,EACY,KAAd7B,GACIyB,EAAWK,cAAcC,SAAS/B,EAAU8B,eAIlD,OAAIH,EAAOK,WAAW,QAElB,gBAEEC,UAAS,UAAKJ,EAAkB7C,EAAQgB,UAAY,IAFtD,UAIE,iBAAMiC,UAAWjD,EAAQkD,IAAzB,SAA+BP,KAH1BD,IASP,gBAEEO,UAAS,UAAKJ,EAAkB7C,EAAQgB,UAAY,IAFtD,UAIE,iBAAMiC,UAAWjD,EAAQc,YAAzB,SAAuC6B,KAHlCD,IA2Bb,SAASS,EAAT,GAAwE,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQZ,EAAqB,EAArBA,MAAOhF,EAAc,EAAdA,MACvD,OAEE,SAAC,KAAD,CACEyE,MAAOA,EACPiB,YAAaA,EAEbE,OAAQA,EACRC,SAAUb,EALZ,UAOE,gBACEhF,OAAK,UACAA,GAFP,SAKG8E,EAAUR,EAASU,GAAQA,MATzBW,GAeX,OAvCAd,EAAAA,EAAAA,YAAU,WACJtC,GACFuD,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BnC,EAH1B,oBAG+CD,EAH/C,iBAG8DE,IAE3DmC,MAAK,SAACC,GACLzB,EAAYyB,EAAIC,MAAM,OACtBzB,GAAW,MAEZ0B,OAAM,SAACC,GACNrC,GAASsC,EAAAA,EAAAA,IAAqBD,IAC9B3B,GAAW,QAGhB,CAACjC,EAASqB,EAASD,EAAWD,EAAQI,KAwBvC,UAAC,WAAD,YACE,SAACuC,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,GAAIyF,UAAWjD,EAAQW,YAAtC,UACE,SAACsD,EAAA,EAAD,CACEC,YAAY,iBACZjB,UAAWjD,EAAQU,YACnByD,GAAG,kBACHlH,MAAM,GACNmH,SAAU,SAACC,GACTtC,EAAasC,EAAIC,OAAOpH,QAE1BqH,WAAY,CACVC,kBAAkB,EAClBC,gBACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAACC,EAAA,EAAD,OAINC,QAAQ,gBAGZ,SAACd,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,GAAf,UACE,qBAEF,SAACuG,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,GAAf,UACE,SAAC0C,EAAA,EAAD,WACE,gBAAK+C,UAAWjD,EAAQI,QAAxB,SACG4B,EAASnD,QAAU,IAElB,SAAC,KAAD,UACG,gBAAGiG,EAAH,EAAGA,MAAOxE,EAAV,EAAUA,OAAV,OAEC,SAAC,KAAD,CACEyE,UAAW,SAACf,GAAD,OAAU7B,EAAM4C,UAAUf,IACrCgB,iBAAkB,GAClBC,SAAUjD,EAASnD,OACnBqG,YAAa/B,EACb2B,MAAOA,EACPxE,OAAQA,mB,qBC7H5B,GAAeX,EAAAA,EAAAA,IAtEA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,0CACRc,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACAyE,EAAAA,IAJO,IAKVxE,aAAY,kBACPA,EAAAA,GAAAA,aADM,IAETnB,QAAS,kBA8Df,EA1DkB,SAAC,GAMI,EALrBQ,QAKsB,IAJtBoB,EAIqB,EAJrBA,OACAC,EAGqB,EAHrBA,UACAC,EAEqB,EAFrBA,QACAC,EACqB,EADrBA,YAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KACpB,SAACC,GAAD,OAAqBA,EAAMC,QAAQH,iBAErC,GAA4BI,EAAAA,EAAAA,UAAmB,IAA/C,eAAOhC,EAAP,KAAesF,EAAf,KACA,GAA8BtD,EAAAA,EAAAA,WAAkB,GAAhD,eAAO7B,EAAP,KAAgBiC,EAAhB,KAqCA,OAnCAK,EAAAA,EAAAA,YAAU,WACJhB,GACFW,GAAW,KAEZ,CAACX,KAEJgB,EAAAA,EAAAA,YAAU,WACJb,GACFQ,GAAW,KAEZ,CAACR,KAEJa,EAAAA,EAAAA,YAAU,WACJtC,GACFuD,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BnC,EAH1B,oBAG+CD,EAH/C,iBAG8DE,EAH9D,YAKGmC,MAAK,SAACC,GACL,IAAK,IAAI2B,EAAI,EAAGA,EAAI3B,EAAI7E,OAAQwG,IAAK,CACnC,IAAIC,EAAeC,KAAKC,MAAQ,IAAQ,EAExC9B,EAAI2B,GAAG1G,MAAO8G,EAAAA,EAAAA,KAAUH,EAAc5B,EAAI2B,GAAGK,WAAWC,YAE1DP,EAAU1B,GACVxB,GAAW,MAEZ0B,OAAM,SAACC,GACNrC,GAASsC,EAAAA,EAAAA,IAAqBD,IAC9B3B,GAAW,QAGhB,CAACjC,EAASqB,EAASD,EAAWD,EAAQI,KAGvC,SAAC,WAAD,WACE,SAACuC,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,GAAf,UACE,SAACoI,EAAA,EAAD,CAAY9F,OAAQA,EAAQG,QAASA,W,mGCwEvC4F,EAA4B,CAChC9F,QAAS,OACT+F,oBAAqB,CAAEtI,GAAI,MAAOC,GAAI,WACtCsI,aAAc,CAAEvI,GAAI,QAASC,GAAI,OACjCuI,IAAK,EACLxG,QAAS,QAGLyG,EAAgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MACvB,OACE,SAACC,EAAA,EAAD,CACEhI,GAAI,CACFC,aAAc,oBACdiB,OAAQ,EACR+G,aAAc,QAJlB,UAOE,wBAAKF,OAKLG,EAAqB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAC5B,OACE,UAAC,WAAD,YACE,SAACL,EAAD,CAAeC,MAAO,aACtB,UAACC,EAAA,EAAD,CAAKhI,IAAE,UAAO0H,GAAd,WACE,SAACU,EAAA,EAAD,CAAgBtJ,MAAO,OAAQC,MAAOoJ,EAAaE,QACnD,SAACD,EAAA,EAAD,CAAgBtJ,MAAO,YAAaC,MAAOoJ,EAAajF,aACxD,SAACkF,EAAA,EAAD,CAAgBtJ,MAAO,OAAQC,MAAOoJ,EAAaG,YACnD,SAACF,EAAA,EAAD,CAAgBtJ,MAAO,aAAcC,MAAOoJ,EAAaI,aACzD,SAACH,EAAA,EAAD,CAAgBtJ,MAAO,SAAUC,MAAOoJ,EAAaK,SACrD,SAACJ,EAAA,EAAD,CAAgBtJ,MAAO,YAAaC,MAAOoJ,EAAaM,YACxD,SAACL,EAAA,EAAD,CAAgBtJ,MAAO,KAAMC,MAAOoJ,EAAaO,eAMnDC,EAAyB,SAAC,GAEK,IADnCC,EACkC,EADlCA,YAEA,OACE,UAAC,WAAD,YACE,SAACd,EAAD,CAAeC,MAAO,iBACtB,SAACC,EAAA,EAAD,UACGY,EAAY5G,KAAI,SAAC6G,EAAYtE,GAAb,OACf,SAACuE,EAAA,EAAD,CACEvJ,MAAO,CAAE2B,OAAQ,QACjBpC,MAAK,UAAK+J,EAAW3D,IAAhB,aAAwB2D,EAAW9J,QACnCwF,YAQXwE,EAAoB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAC3B,OACE,UAAC,WAAD,YACE,SAAClB,EAAD,CAAeC,MAAO,YACtB,SAACC,EAAA,EAAD,UACGgB,EAAOhH,KAAI,SAAClD,EAAOyF,GAAR,OACV,SAACuE,EAAA,EAAD,CACEvJ,MAAO,CAAE2B,OAAQ,QACjBpC,MAAK,UAAKA,EAAMoG,IAAX,aAAmBpG,EAAMC,QACzBwF,YAQX0E,EAAwB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAC/B,OACE,SAACC,EAAD,CACEpB,MAAM,aACNqB,QAAS,CAAC,OAAQ,UAClBC,cAAe,CAAC,OAAQ,UACxBC,MAAOJ,KAKPK,EAAyB,SAAC,GAEK,IADnCC,EACkC,EADlCA,YAEA,OACE,SAACL,EAAD,CACEpB,MAAM,cACNqB,QAAS,CAAC,SAAU,MAAO,WAAY,qBACvCC,cAAe,CAAC,SAAU,MAAO,WAAY,yBAC7CC,MAAOE,KAKPC,EAAqB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAC5B,OACE,SAAC,WAAD,UACGA,EAAQ1H,KAAI,SAAC2H,EAAQpF,GAAT,OACX,UAAC,WAAD,YACE,SAACuD,EAAD,CAAeC,MAAK,iBAAY4B,EAAOtB,SACvC,UAACL,EAAA,EAAD,CAAKhI,IAAE,UAAO0H,GAAd,UACGiC,EAAOC,MACN,UAAC,WAAD,YACE,SAACxB,EAAA,EAAD,CACEtJ,MAAO,OACPC,MAAM,6BAER,SAACqJ,EAAA,EAAD,CACEtJ,MAAO,aACPC,MAAO4K,EAAOC,IAAIC,eAKvBF,EAAOG,YACN,SAAC1B,EAAA,EAAD,CAAgBtJ,MAAO,OAAQC,MAAM,mBAjBtBwF,SA0BvB4E,EAAmB,SAAC,GAKK,IAJ7BpB,EAI4B,EAJ5BA,MACAuB,EAG4B,EAH5BA,MACAF,EAE4B,EAF5BA,QACAC,EAC4B,EAD5BA,cAEA,OACE,UAAC,WAAD,YACE,SAACvB,EAAD,CAAeC,MAAOA,KACtB,SAACC,EAAA,EAAD,WACE,SAAC+B,EAAA,EAAD,CAAgB5J,UAAW4B,EAAAA,EAA3B,UACE,UAACiI,EAAA,EAAD,CAAO,aAAW,oBAAlB,WACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,UACGb,EAAcrH,KAAI,SAAClD,EAAOyF,GAAR,OACjB,SAAC4F,EAAA,EAAD,UAAwBrL,GAARyF,WAItB,SAAC6F,EAAA,EAAD,UACGd,EAAMtH,KAAI,SAAC6D,EAAMqB,GAAP,OACT,SAACgD,EAAA,EAAD,UACGd,EAAQpH,KAAI,SAACqI,EAAQC,GAAT,OACX,SAACH,EAAA,EAAD,UAAoBtE,EAAKwE,IAATC,OAFLpD,mBAczBqD,EAAwB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,WAC/B,OACE,SAAC,WAAD,UACGA,EAAWxI,KAAI,SAACyI,EAAWlG,GAAZ,OACd,UAAC,WAAD,YACE,SAACuD,EAAD,CAAeC,MAAK,oBAAe0C,EAAUpC,SAC7C,UAACL,EAAA,EAAD,CACEzI,MAAO,CAAEmL,UAAW,aACpB1K,IAAE,UAAO0H,GAFX,WAIE,SAACU,EAAA,EAAD,CAAgBtJ,MAAO,QAASC,MAAO0L,EAAUE,SACjD,SAACvC,EAAA,EAAD,CAAgBtJ,MAAO,QAASC,MAAK,UAAK0L,EAAUG,UACpD,SAACxC,EAAA,EAAD,CACEtJ,MAAO,QACPC,MAAO0L,EAAUI,MAAMC,KAAK,SAE9B,SAAC1C,EAAA,EAAD,CACEtJ,MAAO,aACPC,MAAO0L,EAAUM,UAAUD,KAAK,SAElC,SAAC1C,EAAA,EAAD,CACEtJ,MAAO,YACPC,MAAO0L,EAAUO,KAAKF,KAAK,SAE7B,SAAC1C,EAAA,EAAD,CAAgBtJ,MAAO,UAAWC,MAAO0L,EAAUhH,MAAMwH,WACzD,SAAC7C,EAAA,EAAD,CAAgBtJ,MAAO,QAASC,MAAO0L,EAAUhH,MAAMA,YAEzD,UAACuE,EAAA,EAAD,CACEzI,MAAO,CAAEmL,UAAW,aACpB1K,IAAE,UAAO0H,GAFX,WAIE,SAACU,EAAA,EAAD,CAAgBtJ,MAAO,WAAYC,MAAO0L,EAAUS,WACpD,SAAC9C,EAAA,EAAD,CACEtJ,MAAO,eACPC,MAAO0L,EAAUU,kBAGrB,SAAChC,EAAD,CACEpB,MAAM,SACNqB,QAAS,CAAC,OAAQ,aAClBC,cAAe,CAAC,OAAQ,cACxBC,MAAOmB,EAAUW,UAEnB,SAACjC,EAAD,CACEpB,MAAM,wBACNqB,QAAS,CAAC,MAAO,SACjBC,cAAe,CAAC,MAAO,SACvBC,MAAOmB,EAAUY,yBA3CA9G,SAmJ7B,GAAe/C,EAAAA,EAAAA,IAvUA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,0CACRc,EAAAA,IACAF,EAAAA,IACAC,EAAAA,IACAyE,EAAAA,IAJO,IAKVxE,aAAY,kBACPA,EAAAA,GAAAA,aADM,IAETnB,QAAS,kBA+Tf,EAhGoB,SAAC,GAME,EALrBQ,QAKsB,IAJtBoB,EAIqB,EAJrBA,OACAC,EAGqB,EAHrBA,UACAC,EAEqB,EAFrBA,QACAC,EACqB,EADrBA,YAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KACpB,SAACC,GAAD,OAAqBA,EAAMC,QAAQH,iBAGrC,GAAwCI,EAAAA,EAAAA,YAAxC,eAAOwE,EAAP,KAAqBmD,EAArB,KACA,GAA8B3H,EAAAA,EAAAA,WAAkB,GAAhD,eAAO7B,EAAP,KAAgBiC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAiB,GAA7C,eAAO4H,EAAP,KAAeC,EAAf,MAEApH,EAAAA,EAAAA,YAAU,WACJhB,GACFW,GAAW,KAEZ,CAACX,KAEJgB,EAAAA,EAAAA,YAAU,WACJb,GACFQ,GAAW,KAEZ,CAACR,KAEJa,EAAAA,EAAAA,YAAU,WACJtC,GACFuD,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BnC,EAH1B,oBAG+CD,EAH/C,iBAG8DE,EAH9D,cAKGmC,MAAK,SAACC,GACL+F,EAAgB/F,GAChBxB,GAAW,MAEZ0B,OAAM,SAACC,GACNrC,GAASsC,EAAAA,EAAAA,IAAqBD,IAC9B3B,GAAW,QAGhB,CAACjC,EAASqB,EAASD,EAAWD,EAAQI,IAsBzC,OACE,SAAC,WAAD,UACG8E,IACC,UAACvC,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,GAAf,WACE,UAACoM,EAAA,EAAD,CACE1M,MAAOwM,EACPtF,SAAU,SAACyF,EAA0BC,GACnCH,EAAUG,IAEZC,eAAe,UACfC,UAAU,UACV,aAAW,eACXnF,QAAQ,aACRoF,cAAc,OAThB,WAWE,SAACC,EAAA,EAAD,CAAK/F,GAAG,uBAAuBlH,MAAM,aACrC,SAACiN,EAAA,EAAD,CAAK/F,GAAG,2BAA2BlH,MAAM,iBACzC,SAACiN,EAAA,EAAD,CAAK/F,GAAG,sBAAsBlH,MAAM,aACpC,SAACiN,EAAA,EAAD,CAAK/F,GAAG,0BAA0BlH,MAAM,gBACxC,SAACiN,EAAA,EAAD,CAAK/F,GAAG,2BAA2BlH,MAAM,iBACzC,SAACiN,EAAA,EAAD,CAAK/F,GAAG,uBAAuBlH,MAAM,aACrC,SAACiN,EAAA,EAAD,CAAK/F,GAAG,0BAA0BlH,MAAM,kBAzCvB,SAACyF,EAAeyH,GACzC,OAAQzH,GACN,KAAK,EACH,OAAO,SAAC2D,EAAD,CAAoBC,aAAc6D,IAC3C,KAAK,EACH,OAAO,SAACrD,EAAD,CAAwBC,YAAaoD,EAAKpD,cACnD,KAAK,EACH,OAAO,SAACG,EAAD,CAAmBC,OAAQgD,EAAKhD,SACzC,KAAK,EACH,OAAO,SAACC,EAAD,CAAuBC,WAAY8C,EAAK9C,aACjD,KAAK,EACH,OAAO,SAACK,EAAD,CAAwBC,YAAawC,EAAKxC,cACnD,KAAK,EACH,OAAO,SAACC,EAAD,CAAoBC,QAASsC,EAAKtC,UAC3C,KAAK,EACH,OAAO,SAACa,EAAD,CAAuBC,WAAYwB,EAAKxB,cA4B5CyB,CAAmBV,EAAQpD,WC5WtC,GAAe3G,EAAAA,EAAAA,IA1FA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,QACXwK,cAAe,CACbC,eAAgB,OAChB5K,MAAO,WAENwB,EAAAA,EAAAA,IAAmBtB,EAAMuB,QAAQ,QAoFxC,EAjFmB,SAAC,GAAmC,IAAjCnB,EAAgC,EAAhCA,QACpB,GAAiDuK,EAAAA,EAAAA,MAAzCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WAAYnJ,EAArC,EAAqCA,QAErC,GAA4BQ,EAAAA,EAAAA,UAAiB,GAA7C,eAAO4H,EAAP,KAAeC,EAAf,KACA,GAA8B7H,EAAAA,EAAAA,WAAkB,GAAhD,eAAO7B,EAAP,KAAgBiC,EAAhB,KAEA,SAASwI,EAAUhI,GACjB,MAAO,CACLyB,GAAG,cAAD,OAAgBzB,GAClB,gBAAgB,mBAAhB,OAAoCA,IAUxC,OANAH,EAAAA,EAAAA,YAAU,WACJtC,GACFiC,GAAW,KAEZ,CAACjC,KAGF,UAAC,EAAA0K,SAAD,YACE,SAAC5G,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,GAAf,UACE,gBAAIyF,UAAWjD,EAAQ4K,aAAvB,WACE,SAAC,KAAD,CACEC,GAAE,sBAAiBL,GAAmB,GAApC,oBACAC,GAAc,GADd,SAGFxH,UAAWjD,EAAQqK,cAJrB,kBAOQ,IARV,KASQ/I,QAGV,UAACyC,EAAA,GAAD,CAAM6E,WAAS,EAAf,WACE,SAAC7E,EAAA,GAAD,CAAMC,MAAI,EAACxG,GAAI,EAAf,UACE,UAACoM,EAAA,EAAD,CACE1M,MAAOwM,EACPtF,SAAU,SAACyF,EAA0BC,GACnCH,EAAUG,IAEZC,eAAe,UACfC,UAAU,UACV,aAAW,eACXnF,QAAQ,aACRoF,cAAc,OAThB,WAWE,SAACC,EAAA,GAAD,QAAKjN,MAAM,UAAayN,EAAU,MAClC,SAACR,EAAA,GAAD,QAAKjN,MAAM,YAAeyN,EAAU,MACpC,SAACR,EAAA,GAAD,QAAKjN,MAAM,QAAWyN,EAAU,UAGxB,IAAXhB,IACC,SAAC,EAAD,CACEtI,OAAQqJ,GAAc,GACtBpJ,UAAWmJ,GAAmB,GAC9BlJ,QAASA,GAAW,GACpBC,YAAatB,IAGL,IAAXyJ,IACC,SAAC,EAAD,CACEtI,OAAQqJ,GAAc,GACtBpJ,UAAWmJ,GAAmB,GAC9BlJ,QAASA,GAAW,GACpBC,YAAatB,IAGL,IAAXyJ,IACC,SAAC,EAAD,CACEtI,OAAQqJ,GAAc,GACtBpJ,UAAWmJ,GAAmB,GAC9BlJ,QAASA,GAAW,GACpBC,YAAatB","sources":["screens/Console/Common/UsageBarWrapper/LabelValuePair.tsx","screens/Console/Tenants/TenantDetails/events/EventsList.tsx","screens/Console/Tenants/TenantDetails/pods/PodLogs.tsx","screens/Console/Tenants/TenantDetails/pods/PodEvents.tsx","screens/Console/Tenants/TenantDetails/pods/PodDescribe.tsx","screens/Console/Tenants/TenantDetails/pods/PodDetails.tsx"],"sourcesContent":["import React from \"react\";\nimport { Stack } from \"@mui/material\";\n\ntype LabelValuePairProps = {\n  label?: any;\n  value?: any;\n  orientation?: any;\n  stkProps?: any;\n  lblProps?: any;\n  valProps?: any;\n};\n\nconst LabelValuePair = ({\n  label = null,\n  value = \"-\",\n  orientation = \"column\",\n  stkProps = {},\n  lblProps = {},\n  valProps = {},\n}: LabelValuePairProps) => {\n  return (\n    <Stack direction={{ xs: \"column\", sm: orientation }} {...stkProps}>\n      <label style={{ marginRight: 5, fontWeight: 600 }} {...lblProps}>\n        {label}\n      </label>\n      <label style={{ marginRight: 5, fontWeight: 500 }} {...valProps}>\n        {value}\n      </label>\n    </Stack>\n  );\n};\n\nexport default LabelValuePair;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport { IEvent } from \"../../ListTenants/types\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Typography from \"@mui/material/Typography\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IEventsListProps {\n  classes: any;\n  events: IEvent[];\n  loading: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    events: {\n      \"& .MuiTypography-root\": {\n        fontSize: 14,\n      },\n      \"& .Mui-expanded\": {\n        \"& .eventMessage\": {\n          display: \"none\",\n        },\n      },\n    },\n  });\n\nconst Event = (props: { event: IEvent }) => {\n  const { event } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" }, cursor: \"pointer\" }}>\n        <TableCell component=\"th\" scope=\"row\" onClick={() => setOpen(!open)}>\n          {event.event_type}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)}>{event.reason}</TableCell>\n        <TableCell onClick={() => setOpen(!open)}>{event.seen}</TableCell>\n        <TableCell onClick={() => setOpen(!open)}>\n          {event.message.length >= 30\n            ? `${event.message.slice(0, 30)}...`\n            : event.message}\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)}>\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography\n                style={{\n                  background: \"#efefef\",\n                  border: \"1px solid #dedede\",\n                  padding: 4,\n                  fontSize: 14,\n                  color: \"#666666\",\n                }}\n              >\n                {event.message}\n              </Typography>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst EventsList = ({ classes, events, loading }: IEventsListProps) => {\n  if (loading) {\n    return <LinearProgress />;\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Type</TableCell>\n            <TableCell>Reason</TableCell>\n            <TableCell>Age</TableCell>\n            <TableCell>Message</TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {events.map((event) => (\n            <Event key={`${event.event_type}-${event.seen}`} event={event} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default withStyles(styles)(EventsList);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n} from \"react-virtualized\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { TextField } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport api from \"../../../../../common/api\";\nimport SearchIcon from \"../../../../../icons/SearchIcon\";\nimport {\n  actionsTray,\n  buttonsStyles,\n  containerForHeader,\n  searchField,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\n\ninterface IPodLogsProps {\n  classes: any;\n  tenant: string;\n  namespace: string;\n  podName: string;\n  propLoading: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    logList: {\n      background: \"#fff\",\n      minHeight: 400,\n      height: \"calc(100vh - 304px)\",\n      overflow: \"auto\",\n      fontSize: 13,\n      padding: \"25px 45px 0\",\n      border: \"1px solid #EAEDEE\",\n      borderRadius: 4,\n    },\n    ...buttonsStyles,\n    ...searchField,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      padding: \"15px 0 0\",\n    },\n    logerror_tab: {\n      color: \"#A52A2A\",\n      paddingLeft: 25,\n    },\n    ansidefault: {\n      color: \"#000\",\n      lineHeight: \"16px\",\n    },\n    highlight: {\n      \"& span\": {\n        backgroundColor: \"#082F5238\",\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PodLogs = ({\n  classes,\n  tenant,\n  namespace,\n  podName,\n  propLoading,\n}: IPodLogsProps) => {\n  const dispatch = useAppDispatch();\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n  const [highlight, setHighlight] = useState<string>(\"\");\n  const [logLines, setLogLines] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const cache = new CellMeasurerCache({\n    minWidth: 5,\n    fixedHeight: false,\n  });\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  const renderLog = (logMessage: string, index: number) => {\n    if (!logMessage) {\n      return null;\n    }\n    // remove any non ascii characters, exclude any control codes\n    logMessage = logMessage.replace(/([^\\x20-\\x7F])/g, \"\");\n\n    // regex for terminal colors like e.g. `[31;4m `\n    const tColorRegex = /((\\[[0-9;]+m))/g;\n\n    // get substring if there was a match for to split what\n    // is going to be colored and what not, here we add color\n    // only to the first match.\n    let substr = logMessage.replace(tColorRegex, \"\");\n\n    // in case highlight is set, we select the line that contains the requested string\n    let highlightedLine =\n      highlight !== \"\"\n        ? logMessage.toLowerCase().includes(highlight.toLowerCase())\n        : false;\n\n    // if starts with multiple spaces add padding\n    if (substr.startsWith(\"   \")) {\n      return (\n        <div\n          key={index}\n          className={`${highlightedLine ? classes.highlight : \"\"}`}\n        >\n          <span className={classes.tab}>{substr}</span>\n        </div>\n      );\n    } else {\n      // for all remaining set default class\n      return (\n        <div\n          key={index}\n          className={`${highlightedLine ? classes.highlight : \"\"}`}\n        >\n          <span className={classes.ansidefault}>{substr}</span>\n        </div>\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${namespace}/tenants/${tenant}/pods/${podName}`\n        )\n        .then((res: string) => {\n          setLogLines(res.split(\"\\n\"));\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  }, [loading, podName, namespace, tenant, dispatch]);\n\n  function cellRenderer({ columnIndex, key, parent, index, style }: any) {\n    return (\n      // @ts-ignore\n      <CellMeasurer\n        cache={cache}\n        columnIndex={columnIndex}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n          }}\n        >\n          {renderLog(logLines[index], index)}\n        </div>\n      </CellMeasurer>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.actionsTray}>\n        <TextField\n          placeholder=\"Highlight Line\"\n          className={classes.searchField}\n          id=\"search-resource\"\n          label=\"\"\n          onChange={(val) => {\n            setHighlight(val.target.value);\n          }}\n          InputProps={{\n            disableUnderline: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"standard\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={12}>\n        <Paper>\n          <div className={classes.logList}>\n            {logLines.length >= 1 && (\n              // @ts-ignore\n              <AutoSizer>\n                {({ width, height }) => (\n                  // @ts-ignore\n                  <List\n                    rowHeight={(item) => cache.rowHeight(item)}\n                    overscanRowCount={15}\n                    rowCount={logLines.length}\n                    rowRenderer={cellRenderer}\n                    width={width}\n                    height={height}\n                  />\n                )}\n              </AutoSizer>\n            )}\n          </div>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(PodLogs);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  buttonsStyles,\n  hrClass,\n  searchField,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport { IEvent } from \"../../ListTenants/types\";\nimport { niceDays } from \"../../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport EventsList from \"../events/EventsList\";\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\n\ninterface IPodEventsProps {\n  classes: any;\n  tenant: string;\n  namespace: string;\n  podName: string;\n  propLoading: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...buttonsStyles,\n    ...searchField,\n    ...hrClass,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      padding: \"15px 0 0\",\n    },\n  });\n\nconst PodEvents = ({\n  classes,\n  tenant,\n  namespace,\n  podName,\n  propLoading,\n}: IPodEventsProps) => {\n  const dispatch = useAppDispatch();\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n  const [events, setEvents] = useState<IEvent[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${namespace}/tenants/${tenant}/pods/${podName}/events`\n        )\n        .then((res: IEvent[]) => {\n          for (let i = 0; i < res.length; i++) {\n            let currentTime = (Date.now() / 1000) | 0;\n\n            res[i].seen = niceDays((currentTime - res[i].last_seen).toString());\n          }\n          setEvents(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  }, [loading, podName, namespace, tenant, dispatch]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <EventsList events={events} loading={loading} />\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(PodEvents);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  actionsTray,\n  buttonsStyles,\n  hrClass,\n  searchField,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { Box } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport Chip from \"@mui/material/Chip\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Paper from \"@mui/material/Paper\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport LabelValuePair from \"../../../Common/UsageBarWrapper/LabelValuePair\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../../systemSlice\";\n\ninterface IPodEventsProps {\n  classes: any;\n  tenant: string;\n  namespace: string;\n  podName: string;\n  propLoading: boolean;\n}\n\ninterface Annotation {\n  key: string;\n  value: string;\n}\n\ninterface Condition {\n  status: string;\n  type: string;\n}\n\ninterface EnvVar {\n  key: string;\n  value: string;\n}\n\ninterface Mount {\n  mountPath: string;\n  name: string;\n}\n\ninterface State {\n  started: string;\n  state: string;\n}\n\ninterface Container {\n  args: string[];\n  containerID: string;\n  environmentVariables: EnvVar[];\n  hostPorts: string[];\n  image: string;\n  imageID: string;\n  lastState: any;\n  mounts: Mount[];\n  name: string;\n  ports: string[];\n  ready: boolean;\n  state: State;\n}\n\ninterface Label {\n  key: string;\n  value: string;\n}\n\ninterface Toleration {\n  effect: string;\n  key: string;\n  operator: string;\n  tolerationSeconds: number;\n}\n\ninterface VolumePVC {\n  claimName: string;\n}\n\ninterface Volume {\n  name: string;\n  pvc?: VolumePVC;\n  projected?: any;\n}\n\ninterface DescribeResponse {\n  annotations: Annotation[];\n  conditions: Condition[];\n  containers: Container[];\n  controllerRef: string;\n  labels: Label[];\n  name: string;\n  namespace: string;\n  nodeName: string;\n  nodeSelector: string[];\n  phase: string;\n  podIP: string;\n  qosClass: string;\n  startTime: string;\n  tolerations: Toleration[];\n  volumes: Volume[];\n}\n\ninterface IPodDescribeSummaryProps {\n  describeInfo: DescribeResponse;\n}\n\ninterface IPodDescribeAnnotationsProps {\n  annotations: Annotation[];\n}\n\ninterface IPodDescribeLabelsProps {\n  labels: Label[];\n}\n\ninterface IPodDescribeConditionsProps {\n  conditions: Condition[];\n}\n\ninterface IPodDescribeTolerationsProps {\n  tolerations: Toleration[];\n}\n\ninterface IPodDescribeVolumesProps {\n  volumes: Volume[];\n}\n\ninterface IPodDescribeContainersProps {\n  containers: Container[];\n}\n\ninterface IPodDescribeTableProps {\n  title: string;\n  columns: string[];\n  columnsLabels: string[];\n  items: any[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...buttonsStyles,\n    ...searchField,\n    ...hrClass,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      padding: \"15px 0 0\",\n    },\n  });\n\nconst twoColCssGridLayoutConfig = {\n  display: \"grid\",\n  gridTemplateColumns: { xs: \"1fr\", sm: \"2fr 1fr\" },\n  gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n  gap: 2,\n  padding: \"15px\",\n};\n\nconst HeaderSection = ({ title }: { title: string }) => {\n  return (\n    <Box\n      sx={{\n        borderBottom: \"1px solid #eaeaea\",\n        margin: 0,\n        marginBottom: \"20px\",\n      }}\n    >\n      <h3>{title}</h3>\n    </Box>\n  );\n};\n\nconst PodDescribeSummary = ({ describeInfo }: IPodDescribeSummaryProps) => {\n  return (\n    <React.Fragment>\n      <HeaderSection title={\"Summary\"} />\n      <Box sx={{ ...twoColCssGridLayoutConfig }}>\n        <LabelValuePair label={\"Name\"} value={describeInfo.name} />\n        <LabelValuePair label={\"Namespace\"} value={describeInfo.namespace} />\n        <LabelValuePair label={\"Node\"} value={describeInfo.nodeName} />\n        <LabelValuePair label={\"Start time\"} value={describeInfo.startTime} />\n        <LabelValuePair label={\"Status\"} value={describeInfo.phase} />\n        <LabelValuePair label={\"QoS Class\"} value={describeInfo.qosClass} />\n        <LabelValuePair label={\"IP\"} value={describeInfo.podIP} />\n      </Box>\n    </React.Fragment>\n  );\n};\n\nconst PodDescribeAnnotations = ({\n  annotations,\n}: IPodDescribeAnnotationsProps) => {\n  return (\n    <React.Fragment>\n      <HeaderSection title={\"Annotations\"} />\n      <Box>\n        {annotations.map((annotation, index) => (\n          <Chip\n            style={{ margin: \"0.5%\" }}\n            label={`${annotation.key}: ${annotation.value}`}\n            key={index}\n          />\n        ))}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nconst PodDescribeLabels = ({ labels }: IPodDescribeLabelsProps) => {\n  return (\n    <React.Fragment>\n      <HeaderSection title={\"Labels\"} />\n      <Box>\n        {labels.map((label, index) => (\n          <Chip\n            style={{ margin: \"0.5%\" }}\n            label={`${label.key}: ${label.value}`}\n            key={index}\n          />\n        ))}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nconst PodDescribeConditions = ({ conditions }: IPodDescribeConditionsProps) => {\n  return (\n    <PodDescribeTable\n      title=\"Conditions\"\n      columns={[\"type\", \"status\"]}\n      columnsLabels={[\"Type\", \"Status\"]}\n      items={conditions}\n    />\n  );\n};\n\nconst PodDescribeTolerations = ({\n  tolerations,\n}: IPodDescribeTolerationsProps) => {\n  return (\n    <PodDescribeTable\n      title=\"Tolerations\"\n      columns={[\"effect\", \"key\", \"operator\", \"tolerationSeconds\"]}\n      columnsLabels={[\"Effect\", \"Key\", \"Operator\", \"Seconds of toleration\"]}\n      items={tolerations}\n    />\n  );\n};\n\nconst PodDescribeVolumes = ({ volumes }: IPodDescribeVolumesProps) => {\n  return (\n    <React.Fragment>\n      {volumes.map((volume, index) => (\n        <React.Fragment key={index}>\n          <HeaderSection title={`Volume ${volume.name}`} />\n          <Box sx={{ ...twoColCssGridLayoutConfig }}>\n            {volume.pvc && (\n              <React.Fragment>\n                <LabelValuePair\n                  label={\"Type\"}\n                  value=\"Persistant Volume Claim\"\n                />\n                <LabelValuePair\n                  label={\"Claim Name\"}\n                  value={volume.pvc.claimName}\n                />\n              </React.Fragment>\n            )}\n            {/* TODO Add component to display projected data (Maybe change API response) */}\n            {volume.projected && (\n              <LabelValuePair label={\"Type\"} value=\"Projected\" />\n            )}\n          </Box>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst PodDescribeTable = ({\n  title,\n  items,\n  columns,\n  columnsLabels,\n}: IPodDescribeTableProps) => {\n  return (\n    <React.Fragment>\n      <HeaderSection title={title} />\n      <Box>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"collapsible table\">\n            <TableHead>\n              <TableRow>\n                {columnsLabels.map((label, index) => (\n                  <TableCell key={index}>{label}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.map((item, i) => (\n                <TableRow key={i}>\n                  {columns.map((column, j) => (\n                    <TableCell key={j}>{item[column]}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nconst PodDescribeContainers = ({ containers }: IPodDescribeContainersProps) => {\n  return (\n    <React.Fragment>\n      {containers.map((container, index) => (\n        <React.Fragment key={index}>\n          <HeaderSection title={`Container ${container.name}`} />\n          <Box\n            style={{ wordBreak: \"break-all\" }}\n            sx={{ ...twoColCssGridLayoutConfig }}\n          >\n            <LabelValuePair label={\"Image\"} value={container.image} />\n            <LabelValuePair label={\"Ready\"} value={`${container.ready}`} />\n            <LabelValuePair\n              label={\"Ports\"}\n              value={container.ports.join(\", \")}\n            />\n            <LabelValuePair\n              label={\"Host Ports\"}\n              value={container.hostPorts.join(\", \")}\n            />\n            <LabelValuePair\n              label={\"Arguments\"}\n              value={container.args.join(\", \")}\n            />\n            <LabelValuePair label={\"Started\"} value={container.state.started} />\n            <LabelValuePair label={\"State\"} value={container.state.state} />\n          </Box>\n          <Box\n            style={{ wordBreak: \"break-all\" }}\n            sx={{ ...twoColCssGridLayoutConfig }}\n          >\n            <LabelValuePair label={\"Image ID\"} value={container.imageID} />\n            <LabelValuePair\n              label={\"Container ID\"}\n              value={container.containerID}\n            />\n          </Box>\n          <PodDescribeTable\n            title=\"Mounts\"\n            columns={[\"name\", \"mountPath\"]}\n            columnsLabels={[\"Name\", \"Mount Path\"]}\n            items={container.mounts}\n          />\n          <PodDescribeTable\n            title=\"Environment Variables\"\n            columns={[\"key\", \"value\"]}\n            columnsLabels={[\"Key\", \"Value\"]}\n            items={container.environmentVariables}\n          />\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst PodDescribe = ({\n  classes,\n  tenant,\n  namespace,\n  podName,\n  propLoading,\n}: IPodEventsProps) => {\n  const dispatch = useAppDispatch();\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n\n  const [describeInfo, setDescribeInfo] = useState<DescribeResponse>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [curTab, setCurTab] = useState<number>(0);\n\n  useEffect(() => {\n    if (propLoading) {\n      setLoading(true);\n    }\n  }, [propLoading]);\n\n  useEffect(() => {\n    if (loadingTenant) {\n      setLoading(true);\n    }\n  }, [loadingTenant]);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${namespace}/tenants/${tenant}/pods/${podName}/describe`\n        )\n        .then((res: DescribeResponse) => {\n          setDescribeInfo(res);\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          dispatch(setErrorSnackMessage(err));\n          setLoading(false);\n        });\n    }\n  }, [loading, podName, namespace, tenant, dispatch]);\n\n  const renderTabComponent = (index: number, info: DescribeResponse) => {\n    switch (index) {\n      case 0:\n        return <PodDescribeSummary describeInfo={info} />;\n      case 1:\n        return <PodDescribeAnnotations annotations={info.annotations} />;\n      case 2:\n        return <PodDescribeLabels labels={info.labels} />;\n      case 3:\n        return <PodDescribeConditions conditions={info.conditions} />;\n      case 4:\n        return <PodDescribeTolerations tolerations={info.tolerations} />;\n      case 5:\n        return <PodDescribeVolumes volumes={info.volumes} />;\n      case 6:\n        return <PodDescribeContainers containers={info.containers} />;\n      default:\n        break;\n    }\n  };\n  return (\n    <React.Fragment>\n      {describeInfo && (\n        <Grid item xs={12}>\n          <Tabs\n            value={curTab}\n            onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n              setCurTab(newValue);\n            }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"cluster-tabs\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab id=\"pod-describe-summary\" label=\"Summary\" />\n            <Tab id=\"pod-describe-annotations\" label=\"Annotations\" />\n            <Tab id=\"pod-describe-labels\" label=\" Labels\" />\n            <Tab id=\"pod-describe-conditions\" label=\"Conditions\" />\n            <Tab id=\"pod-describe-tolerations\" label=\"Tolerations\" />\n            <Tab id=\"pod-describe-volumes\" label=\"Volumes\" />\n            <Tab id=\"pod-describe-containers\" label=\"Containers\" />\n          </Tabs>\n          {renderTabComponent(curTab, describeInfo)}\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(PodDescribe);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Link, useParams } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { containerForHeader } from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nimport PodLogs from \"./PodLogs\";\nimport PodEvents from \"./PodEvents\";\nimport PodDescribe from \"./PodDescribe\";\n\ninterface IPodDetailsProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst PodDetails = ({ classes }: IPodDetailsProps) => {\n  const { tenantNamespace, tenantName, podName } = useParams();\n\n  const [curTab, setCurTab] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  function a11yProps(index: any) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  useEffect(() => {\n    if (loading) {\n      setLoading(false);\n    }\n  }, [loading]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <h1 className={classes.sectionTitle}>\n          <Link\n            to={`/namespaces/${tenantNamespace || \"\"}/tenants/${\n              tenantName || \"\"\n            }/pods`}\n            className={classes.breadcrumLink}\n          >\n            Pods\n          </Link>{\" \"}\n          &gt; {podName}\n        </h1>\n      </Grid>\n      <Grid container>\n        <Grid item xs={9}>\n          <Tabs\n            value={curTab}\n            onChange={(e: React.ChangeEvent<{}>, newValue: number) => {\n              setCurTab(newValue);\n            }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"cluster-tabs\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab label=\"Events\" {...a11yProps(0)} />\n            <Tab label=\"Describe\" {...a11yProps(1)} />\n            <Tab label=\"Logs\" {...a11yProps(2)} />\n          </Tabs>\n        </Grid>\n        {curTab === 0 && (\n          <PodEvents\n            tenant={tenantName || \"\"}\n            namespace={tenantNamespace || \"\"}\n            podName={podName || \"\"}\n            propLoading={loading}\n          />\n        )}\n        {curTab === 1 && (\n          <PodDescribe\n            tenant={tenantName || \"\"}\n            namespace={tenantNamespace || \"\"}\n            podName={podName || \"\"}\n            propLoading={loading}\n          />\n        )}\n        {curTab === 2 && (\n          <PodLogs\n            tenant={tenantName || \"\"}\n            namespace={tenantNamespace || \"\"}\n            podName={podName || \"\"}\n            propLoading={loading}\n          />\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PodDetails);\n"],"names":["label","value","orientation","stkProps","lblProps","valProps","direction","xs","sm","style","marginRight","fontWeight","Event","props","event","React","open","setOpen","sx","borderBottom","cursor","component","scope","onClick","event_type","reason","seen","message","length","slice","paddingBottom","paddingTop","colSpan","in","timeout","unmountOnExit","margin","background","border","padding","fontSize","color","withStyles","theme","createStyles","events","display","classes","loading","Paper","map","logList","minHeight","height","overflow","borderRadius","buttonsStyles","searchField","actionsTray","logerror_tab","paddingLeft","ansidefault","lineHeight","highlight","backgroundColor","containerForHeader","spacing","tenant","namespace","podName","propLoading","dispatch","useAppDispatch","loadingTenant","useSelector","state","tenants","useState","setHighlight","logLines","setLogLines","setLoading","cache","CellMeasurerCache","minWidth","fixedHeight","useEffect","renderLog","logMessage","index","substr","replace","highlightedLine","toLowerCase","includes","startsWith","className","tab","cellRenderer","columnIndex","key","parent","rowIndex","api","then","res","split","catch","err","setErrorSnackMessage","Grid","item","TextField","placeholder","id","onChange","val","target","InputProps","disableUnderline","startAdornment","InputAdornment","position","SearchIcon","variant","width","rowHeight","overscanRowCount","rowCount","rowRenderer","hrClass","setEvents","i","currentTime","Date","now","niceDays","last_seen","toString","EventsList","twoColCssGridLayoutConfig","gridTemplateColumns","gridAutoFlow","gap","HeaderSection","title","Box","marginBottom","PodDescribeSummary","describeInfo","LabelValuePair","name","nodeName","startTime","phase","qosClass","podIP","PodDescribeAnnotations","annotations","annotation","Chip","PodDescribeLabels","labels","PodDescribeConditions","conditions","PodDescribeTable","columns","columnsLabels","items","PodDescribeTolerations","tolerations","PodDescribeVolumes","volumes","volume","pvc","claimName","projected","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","column","j","PodDescribeContainers","containers","container","wordBreak","image","ready","ports","join","hostPorts","args","started","imageID","containerID","mounts","environmentVariables","setDescribeInfo","curTab","setCurTab","Tabs","e","newValue","indicatorColor","textColor","scrollButtons","Tab","info","renderTabComponent","breadcrumLink","textDecoration","useParams","tenantNamespace","tenantName","a11yProps","Fragment","sectionTitle","to"],"sourceRoot":""}