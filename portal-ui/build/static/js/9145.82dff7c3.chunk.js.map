{"version":3,"file":"static/js/9145.82dff7c3.chunk.js","mappings":"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","sources":["screens/Console/Tenants/TenantDetails/SubnetLicenseTenant.tsx","screens/Console/Tenants/TenantDetails/TenantLicense.tsx"],"sourcesContent":["// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { containerForHeader } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Typography } from \"@mui/material\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\nimport Paper from \"@mui/material/Paper\";\nimport { ITenant } from \"../ListTenants/types\";\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { SubnetInfo } from \"../../License/types\";\n\ninterface ISubnetLicenseTenant {\n  classes: any;\n  tenant: ITenant | null;\n  loadingActivateProduct: any;\n  loadingLicenseInfo: boolean;\n  licenseInfo: SubnetInfo | undefined;\n  activateProduct: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paperContainer: {\n      padding: \"15px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    licenseInfoValue: {\n      textTransform: \"none\",\n      fontSize: 14,\n      fontWeight: \"bold\",\n    },\n    licenseContainer: {\n      position: \"relative\",\n      padding: \"20px 52px 0px 28px\",\n      background: \"#032F51\",\n      boxShadow: \"0px 3px 7px #00000014\",\n      \"& h2\": {\n        color: \"#FFF\",\n        marginBottom: 67,\n      },\n      \"& a\": {\n        textDecoration: \"none\",\n      },\n      \"& h3\": {\n        color: \"#FFFFFF\",\n        marginBottom: \"30px\",\n        fontWeight: \"bold\",\n      },\n      \"& h6\": {\n        color: \"#FFFFFF !important\",\n      },\n    },\n    licenseInfo: { color: \"#FFFFFF\", position: \"relative\" },\n    licenseInfoTitle: {\n      textTransform: \"none\",\n      color: \"#BFBFBF\",\n      fontSize: 11,\n    },\n    verifiedIcon: {\n      width: 96,\n      position: \"absolute\",\n      right: 0,\n      bottom: 29,\n    },\n    noUnderLine: {\n      textDecoration: \"none\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst SubnetLicenseTenant = ({\n  classes,\n  tenant,\n  loadingActivateProduct,\n  loadingLicenseInfo,\n  licenseInfo,\n  activateProduct,\n}: ISubnetLicenseTenant) => {\n  return (\n    <Paper\n      className={\n        tenant && tenant.subnet_license ? classes.licenseContainer : \"\"\n      }\n    >\n      {tenant && tenant.subnet_license ? (\n        <React.Fragment>\n          <Grid container className={classes.licenseInfo}>\n            <Grid item xs={6}>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                License\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                Commercial License\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Organization\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.organization}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Registered Capacity\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {niceBytes(\n                  (tenant.subnet_license.storage_capacity * 1099511627776) // 1 Terabyte = 1099511627776 Bytes\n                    .toString(10)\n                )}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Expiry Date\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                <Moment format=\"YYYY-MM-DD\">\n                  {tenant.subnet_license.expires_at}\n                </Moment>\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Subscription Plan\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.plan}\n              </Typography>\n              <Typography\n                variant=\"button\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoTitle}\n              >\n                Requestor\n              </Typography>\n              <Typography\n                variant=\"overline\"\n                display=\"block\"\n                gutterBottom\n                className={classes.licenseInfoValue}\n              >\n                {tenant.subnet_license.email}\n              </Typography>\n            </Grid>\n            <img\n              className={classes.verifiedIcon}\n              src={\"/verified.svg\"}\n              alt=\"verified\"\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        !loadingLicenseInfo && (\n          <Grid className={classes.paperContainer}>\n            {!licenseInfo && (\n              <Link\n                to={\"/license\"}\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n                className={classes.noUnderLine}\n              >\n                <RBIconButton\n                  tooltip={\"Activate Product\"}\n                  text={\"Activate Product\"}\n                  onClick={() => false}\n                  color=\"primary\"\n                  variant={\"contained\"}\n                />\n              </Link>\n            )}\n            {licenseInfo && tenant && (\n              <RBIconButton\n                disabled={loadingActivateProduct}\n                tooltip={\"Attach License\"}\n                text={\"Attach License\"}\n                onClick={() => activateProduct(tenant.namespace, tenant.name)}\n                color=\"primary\"\n                variant={\"contained\"}\n              />\n            )}\n          </Grid>\n        )\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(SubnetLicenseTenant);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SubnetInfo } from \"../../License/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport SubnetLicenseTenant from \"./SubnetLicenseTenant\";\nimport api from \"../../../../common/api\";\nimport Loader from \"../../Common/Loader/Loader\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { setTenantDetailsLoad } from \"../tenantsSlice\";\n\ninterface ITenantLicense {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantLicense = ({ classes }: ITenantLicense) => {\n  const dispatch = useAppDispatch();\n\n  const loadingTenant = useSelector(\n    (state: AppState) => state.tenants.loadingTenant\n  );\n  const tenant = useSelector((state: AppState) => state.tenants.tenantInfo);\n\n  const [licenseInfo, setLicenseInfo] = useState<SubnetInfo>();\n  const [loadingLicenseInfo, setLoadingLicenseInfo] = useState<boolean>(true);\n  const [loadingActivateProduct, setLoadingActivateProduct] =\n    useState<boolean>(false);\n\n  const activateProduct = (namespace: string, tenant: string) => {\n    if (loadingActivateProduct) {\n      return;\n    }\n    setLoadingActivateProduct(true);\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/subscription/namespaces/${namespace}/tenants/${tenant}/activate`,\n        {}\n      )\n      .then(() => {\n        setLoadingActivateProduct(false);\n        dispatch(setTenantDetailsLoad(true));\n        setLoadingLicenseInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoadingActivateProduct(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  useEffect(() => {\n    if (loadingLicenseInfo) {\n      api\n        .invoke(\"GET\", `/api/v1/subscription/info`)\n        .then((res: SubnetInfo) => {\n          setLicenseInfo(res);\n          setLoadingLicenseInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingLicenseInfo(false);\n        });\n    }\n  }, [loadingLicenseInfo]);\n\n  return (\n    <Fragment>\n      <h1 className={classes.sectionTitle}>License</h1>\n      {loadingTenant ? (\n        <div className={classes.loaderAlign}>\n          <Loader />\n        </div>\n      ) : (\n        <Fragment>\n          {tenant && (\n            <Grid container>\n              <Grid item xs={12}>\n                <SubnetLicenseTenant\n                  tenant={tenant}\n                  loadingLicenseInfo={loadingLicenseInfo}\n                  loadingActivateProduct={loadingActivateProduct}\n                  licenseInfo={licenseInfo}\n                  activateProduct={activateProduct}\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TenantLicense);\n"],"names":["withStyles","theme","createStyles","paperContainer","padding","display","alignItems","justifyContent","licenseInfoValue","textTransform","fontSize","fontWeight","licenseContainer","position","background","boxShadow","color","marginBottom","textDecoration","licenseInfo","licenseInfoTitle","verifiedIcon","width","right","bottom","noUnderLine","containerForHeader","spacing","classes","tenant","loadingActivateProduct","loadingLicenseInfo","activateProduct","Paper","className","subnet_license","Grid","container","item","xs","Typography","variant","gutterBottom","organization","niceBytes","storage_capacity","toString","format","expires_at","plan","email","src","alt","to","onClick","e","stopPropagation","RBIconButton","tooltip","text","disabled","namespace","name","tenantDetailsStyles","loaderAlign","textAlign","dispatch","useAppDispatch","loadingTenant","useSelector","state","tenants","tenantInfo","useState","setLicenseInfo","setLoadingLicenseInfo","setLoadingActivateProduct","useEffect","api","then","res","catch","err","Fragment","sectionTitle","Loader","setTenantDetailsLoad","setErrorSnackMessage"],"sourceRoot":""}