{"version":3,"file":"static/js/4335.aee4836f.chunk.js","mappings":"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BAC7B,CAAEV,MAAO,UAAWU,MAAO,mBAC3B,CAAEV,MAAO,SAAUU,MAAO,wBAC1B,CAAEV,MAAO,YAAaU,MAAO,yBCiS/B,EA9SoC,CAClC,CACEV,MAAO,OACPU,MAAO,QAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,YACPU,MAAO,aAET,CACEV,MAAO,oBACPU,MAAO,oBAET,CACEV,MAAO,sBACPU,MAAO,qBAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,sBACPU,MAAO,sBAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,mBACPU,MAAO,mBAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,qBACPU,MAAO,kBAET,CACEV,MAAO,kBACPU,MAAO,iBAET,CACEV,MAAO,YACPU,MAAO,YAET,CACEV,MAAO,oBACPU,MAAO,iBAET,CACEV,MAAO,UACPU,MAAO,UAET,CACEV,MAAO,kBACPU,MAAO,eAET,CACEV,MAAO,YACPU,MAAO,WAET,CACEV,MAAO,oBACPU,MAAO,gBAET,CACEV,MAAO,iBACPU,MAAO,eAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,UACPU,MAAO,WAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,uBACPU,MAAO,sBAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,QACPU,MAAO,SAET,CACEV,MAAO,QACPU,MAAO,SAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,oBACPU,MAAO,mBAET,CACEV,MAAO,iBACPU,MAAO,gBAET,CACEV,MAAO,QACPU,MAAO,SAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,mBACPU,MAAO,kBAET,CACEV,MAAO,2BACPU,MAAO,uBAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,SACPU,MAAO,UAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,eACPU,MAAO,eAET,CACEV,MAAO,qBACPU,MAAO,oBAET,CACEV,MAAO,oBACPU,MAAO,mBAET,CACEV,MAAO,mBACPU,MAAO,kBAET,CACEV,MAAO,2BACPU,MAAO,uBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,yBACPU,MAAO,sBAET,CACEV,MAAO,iBACPU,MAAO,iBAET,CACEV,MAAO,cACPU,MAAO,eAET,CACEV,MAAO,oBACPU,MAAO,oBAET,CACEV,MAAO,mBACPU,MAAO,mBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,YACPU,MAAO,YAET,CACEV,MAAO,WACPU,MAAO,WAET,CACEV,MAAO,UACPU,MAAO,UAET,CACEV,MAAO,uBACPU,MAAO,OAET,CACEV,MAAO,iBACPU,MAAO,MAET,CACEV,MAAO,gBACPU,MAAO,gBAET,CACEV,MAAO,qBACPU,MAAO,oBAET,CACEV,MAAO,kBACPU,MAAO,iBAET,CACEV,MAAO,cACPU,MAAO,cAET,CACEV,MAAO,aACPU,MAAO,aAET,CACEV,MAAO,UACPU,MAAO,UAET,CACEV,MAAO,kBACPU,MAAO,eAET,CACEV,MAAO,YACPU,MAAO,WAET,CACEV,MAAO,oBACPU,MAAO,gBAET,CACEV,MAAO,YACPU,MAAO,Y,WC/JX,EAxHqB,SAAC,GAQf,IAPLmB,EAOI,EAPJA,KACA3B,EAMI,EANJA,SACA4D,EAKI,EALJA,WAMMC,EAvBW,SAAClC,GAClB,MAAa,OAATA,EACKmC,EAEI,QAATnC,EACKoC,EAEI,UAATpC,EACKqC,EAGF,GAYYC,CAAWtC,GAC9B,EAA0BuC,EAAAA,SAAe,I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","sources":["screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Configurations/TiersConfiguration/s3-regions.tsx","screens/Console/Configurations/TiersConfiguration/gcs-regions.ts","screens/Console/Configurations/TiersConfiguration/azure-regions.ts","screens/Console/Configurations/TiersConfiguration/RegionSelect.tsx","screens/Console/Configurations/TiersConfiguration/RegionSelectWrapper.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/shared/ErrorBlock.tsx","../node_modules/@mui/icons-material/AttachFile.js","../node_modules/@mui/icons-material/Cancel.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { RegionEntry } from \"./types\";\n\nconst s3Regions: RegionEntry[] = [\n  { label: \"US East (Ohio)\", value: \"us-east-2\" },\n  { label: \"US East (N. Virginia)\", value: \"us-east-1\" },\n  { label: \"US West (N. California)\", value: \"us-west-1\" },\n  { label: \"US West (Oregon)\", value: \"us-west-2\" },\n  { label: \"Africa (Cape Town)\", value: \"af-south-1\" },\n  { label: \"Asia Pacific (Hong Kong)***\", value: \"ap-east-1\" },\n  { label: \"Asia Pacific (Jakarta)\", value: \"ap-southeast-3\" },\n  { label: \"Asia Pacific (Mumbai)\", value: \"ap-south-1\" },\n  { label: \"Asia Pacific (Osaka)\", value: \"ap-northeast-3\" },\n  { label: \"Asia Pacific (Seoul)\", value: \"ap-northeast-2\" },\n  { label: \"Asia Pacific (Singapore)\", value: \"ap-southeast-1\" },\n  { label: \"Asia Pacific (Sydney)\", value: \"ap-southeast-2\" },\n  { label: \"Asia Pacific (Tokyo)\", value: \"ap-northeast-1\" },\n  { label: \"Canada (Central)\", value: \"ca-central-1\" },\n  { label: \"China (Beijing)\", value: \"cn-north-1\" },\n  { label: \"China (Ningxia)\", value: \"cn-northwest-1\" },\n  { label: \"Europe (Frankfurt)\", value: \"eu-central-1\" },\n  { label: \"Europe (Ireland)\", value: \"eu-west-1\" },\n  { label: \"Europe (London)\", value: \"eu-west-2\" },\n  { label: \"Europe (Milan)\", value: \"eu-south-1\" },\n  { label: \"Europe (Paris)\", value: \"eu-west-3\" },\n  { label: \"Europe (Stockholm)\", value: \"eu-north-1\" },\n  { label: \"South America (São Paulo)\", value: \"sa-east-1\" },\n  { label: \"Middle East (Bahrain)\", value: \"me-south-1\" },\n  { label: \"AWS GovCloud (US-East)\", value: \"us-gov-east-1\" },\n  { label: \"AWS GovCloud (US-West)\", value: \"us-gov-west-1\" },\n];\n\nexport default s3Regions;\n","import { RegionEntry } from \"./types\";\n\nconst gcsRegions: RegionEntry[] = [\n  { label: \"Montréal\", value: \"NORTHAMERICA-NORTHEAST1\" },\n  { label: \"Toronto\", value: \"NORTHAMERICA-NORTHEAST2\" },\n  { label: \"Iowa\", value: \"US-CENTRAL1\" },\n  { label: \"South Carolina\", value: \"US-EAST1\" },\n  { label: \"Northern Virginia\", value: \"US-EAST4\" },\n  { label: \"Oregon\", value: \"US-WEST1\" },\n  { label: \"Los Angeles\", value: \"US-WEST2\" },\n  { label: \"Salt Lake City\", value: \"US-WEST3\" },\n  { label: \"Las Vegas\", value: \"US-WEST4\" },\n  { label: \"São Paulo\", value: \"SOUTHAMERICA-EAST1\" },\n  { label: \"Santiago\", value: \"SOUTHAMERICA-WEST1\" },\n  { label: \"Warsaw\", value: \"EUROPE-CENTRAL2\" },\n  { label: \"Finland\", value: \"EUROPE-NORTH1\" },\n  { label: \"Belgium\", value: \"EUROPE-WEST1\" },\n  { label: \"London\", value: \"EUROPE-WEST2\" },\n  { label: \"Frankfurt\", value: \"EUROPE-WEST3\" },\n  { label: \"Netherlands\", value: \"EUROPE-WEST4\" },\n  { label: \"Zürich\", value: \"EUROPE-WEST6\" },\n  { label: \"Taiwan\", value: \"ASIA-EAST1\" },\n  { label: \"Hong Kong\", value: \"ASIA-EAST2\" },\n  { label: \"Tokyo\", value: \"ASIA-NORTHEAST1\" },\n  { label: \"Osaka\", value: \"ASIA-NORTHEAST2\" },\n  { label: \"Seoul\", value: \"ASIA-NORTHEAST3\" },\n  { label: \"Mumbai\", value: \"ASIA-SOUTH1\" },\n  { label: \"Delhi\", value: \"ASIA-SOUTH2\" },\n  { label: \"Singapore\", value: \"ASIA-SOUTHEAST1\" },\n  { label: \"Jakarta\", value: \"ASIA-SOUTHEAST2\" },\n  { label: \"Sydney\", value: \"AUSTRALIA-SOUTHEAST1\" },\n  { label: \"Melbourne\", value: \"AUSTRALIA-SOUTHEAST2\" },\n];\n\nexport default gcsRegions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { RegionEntry } from \"./types\";\n\nconst azureRegions: RegionEntry[] = [\n  {\n    label: \"Asia\",\n    value: \"asia\",\n  },\n  {\n    label: \"Asia Pacific\",\n    value: \"asiapacific\",\n  },\n  {\n    label: \"Australia\",\n    value: \"australia\",\n  },\n  {\n    label: \"Australia Central\",\n    value: \"australiacentral\",\n  },\n  {\n    label: \"Australia Central 2\",\n    value: \"australiacentral2\",\n  },\n  {\n    label: \"Australia East\",\n    value: \"australiaeast\",\n  },\n  {\n    label: \"Australia Southeast\",\n    value: \"australiasoutheast\",\n  },\n  {\n    label: \"Brazil\",\n    value: \"brazil\",\n  },\n  {\n    label: \"Brazil South\",\n    value: \"brazilsouth\",\n  },\n  {\n    label: \"Brazil Southeast\",\n    value: \"brazilsoutheast\",\n  },\n  {\n    label: \"Canada\",\n    value: \"canada\",\n  },\n  {\n    label: \"Canada Central\",\n    value: \"canadacentral\",\n  },\n  {\n    label: \"Canada East\",\n    value: \"canadaeast\",\n  },\n  {\n    label: \"Central India\",\n    value: \"centralindia\",\n  },\n  {\n    label: \"Central US\",\n    value: \"centralus\",\n  },\n  {\n    label: \"Central US (Stage)\",\n    value: \"centralusstage\",\n  },\n  {\n    label: \"Central US EUAP\",\n    value: \"centraluseuap\",\n  },\n  {\n    label: \"East Asia\",\n    value: \"eastasia\",\n  },\n  {\n    label: \"East Asia (Stage)\",\n    value: \"eastasiastage\",\n  },\n  {\n    label: \"East US\",\n    value: \"eastus\",\n  },\n  {\n    label: \"East US (Stage)\",\n    value: \"eastusstage\",\n  },\n  {\n    label: \"East US 2\",\n    value: \"eastus2\",\n  },\n  {\n    label: \"East US 2 (Stage)\",\n    value: \"eastus2stage\",\n  },\n  {\n    label: \"East US 2 EUAP\",\n    value: \"eastus2euap\",\n  },\n  {\n    label: \"Europe\",\n    value: \"europe\",\n  },\n  {\n    label: \"France\",\n    value: \"france\",\n  },\n  {\n    label: \"France Central\",\n    value: \"francecentral\",\n  },\n  {\n    label: \"France South\",\n    value: \"francesouth\",\n  },\n  {\n    label: \"Germany\",\n    value: \"germany\",\n  },\n  {\n    label: \"Germany North\",\n    value: \"germanynorth\",\n  },\n  {\n    label: \"Germany West Central\",\n    value: \"germanywestcentral\",\n  },\n  {\n    label: \"Global\",\n    value: \"global\",\n  },\n  {\n    label: \"India\",\n    value: \"india\",\n  },\n  {\n    label: \"Japan\",\n    value: \"japan\",\n  },\n  {\n    label: \"Japan East\",\n    value: \"japaneast\",\n  },\n  {\n    label: \"Japan West\",\n    value: \"japanwest\",\n  },\n  {\n    label: \"Jio India Central\",\n    value: \"jioindiacentral\",\n  },\n  {\n    label: \"Jio India West\",\n    value: \"jioindiawest\",\n  },\n  {\n    label: \"Korea\",\n    value: \"korea\",\n  },\n  {\n    label: \"Korea Central\",\n    value: \"koreacentral\",\n  },\n  {\n    label: \"Korea South\",\n    value: \"koreasouth\",\n  },\n  {\n    label: \"North Central US\",\n    value: \"northcentralus\",\n  },\n  {\n    label: \"North Central US (Stage)\",\n    value: \"northcentralusstage\",\n  },\n  {\n    label: \"North Europe\",\n    value: \"northeurope\",\n  },\n  {\n    label: \"Norway\",\n    value: \"norway\",\n  },\n  {\n    label: \"Norway East\",\n    value: \"norwayeast\",\n  },\n  {\n    label: \"Norway West\",\n    value: \"norwaywest\",\n  },\n  {\n    label: \"South Africa\",\n    value: \"southafrica\",\n  },\n  {\n    label: \"South Africa North\",\n    value: \"southafricanorth\",\n  },\n  {\n    label: \"South Africa West\",\n    value: \"southafricawest\",\n  },\n  {\n    label: \"South Central US\",\n    value: \"southcentralus\",\n  },\n  {\n    label: \"South Central US (Stage)\",\n    value: \"southcentralusstage\",\n  },\n  {\n    label: \"South India\",\n    value: \"southindia\",\n  },\n  {\n    label: \"Southeast Asia\",\n    value: \"southeastasia\",\n  },\n  {\n    label: \"Southeast Asia (Stage)\",\n    value: \"southeastasiastage\",\n  },\n  {\n    label: \"Sweden Central\",\n    value: \"swedencentral\",\n  },\n  {\n    label: \"Switzerland\",\n    value: \"switzerland\",\n  },\n  {\n    label: \"Switzerland North\",\n    value: \"switzerlandnorth\",\n  },\n  {\n    label: \"Switzerland West\",\n    value: \"switzerlandwest\",\n  },\n  {\n    label: \"UAE Central\",\n    value: \"uaecentral\",\n  },\n  {\n    label: \"UAE North\",\n    value: \"uaenorth\",\n  },\n  {\n    label: \"UK South\",\n    value: \"uksouth\",\n  },\n  {\n    label: \"UK West\",\n    value: \"ukwest\",\n  },\n  {\n    label: \"United Arab Emirates\",\n    value: \"uae\",\n  },\n  {\n    label: \"United Kingdom\",\n    value: \"uk\",\n  },\n  {\n    label: \"United States\",\n    value: \"unitedstates\",\n  },\n  {\n    label: \"United States EUAP\",\n    value: \"unitedstateseuap\",\n  },\n  {\n    label: \"West Central US\",\n    value: \"westcentralus\",\n  },\n  {\n    label: \"West Europe\",\n    value: \"westeurope\",\n  },\n  {\n    label: \"West India\",\n    value: \"westindia\",\n  },\n  {\n    label: \"West US\",\n    value: \"westus\",\n  },\n  {\n    label: \"West US (Stage)\",\n    value: \"westusstage\",\n  },\n  {\n    label: \"West US 2\",\n    value: \"westus2\",\n  },\n  {\n    label: \"West US 2 (Stage)\",\n    value: \"westus2stage\",\n  },\n  {\n    label: \"West US 3\",\n    value: \"westus3\",\n  },\n];\nexport default azureRegions;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\nimport { Autocomplete, Box, TextField } from \"@mui/material\";\n\nimport s3Regions from \"./s3-regions\";\nimport gcsRegions from \"./gcs-regions\";\nimport azRegions from \"./azure-regions\";\n\nconst getRegions = (type: string): any => {\n  if (type === \"s3\") {\n    return s3Regions;\n  }\n  if (type === \"gcs\") {\n    return gcsRegions;\n  }\n  if (type === \"azure\") {\n    return azRegions;\n  }\n\n  return [];\n};\n\nconst RegionSelect = ({\n  type,\n  onChange,\n  inputProps,\n}: {\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\" | \"unsupported\";\n  onChange: (obj: any) => void;\n  inputProps?: any;\n}) => {\n  const regionList = getRegions(type);\n  const [value, setValue] = React.useState(\"\");\n\n  return (\n    <Autocomplete\n      sx={{\n        \"& .MuiOutlinedInput-root\": {\n          padding: 0,\n          paddingLeft: \"10px\",\n          fontSize: 13,\n          fontWeight: 600,\n        },\n        \"& .MuiAutocomplete-inputRoot\": {\n          \"& .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#e5e5e5\",\n            borderWidth: 1,\n          },\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#07193E\",\n            borderWidth: 1,\n          },\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#07193E\",\n            borderWidth: 1,\n          },\n        },\n      }}\n      freeSolo\n      selectOnFocus\n      handleHomeEndKeys\n      onChange={(event, newValue) => {\n        let newVal: any = newValue;\n\n        if (typeof newValue === \"string\") {\n          newVal = {\n            label: newValue,\n          };\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          newVal = {\n            label: newValue.inputValue,\n          };\n        } else {\n          newVal = newValue;\n        }\n        setValue(newVal);\n        onChange(newVal?.value);\n      }}\n      value={value}\n      onInputChange={(e: any) => {\n        const { target: { value = \"\" } = {} } = e || {};\n        onChange(value);\n      }}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.value;\n      }}\n      options={regionList}\n      filterOptions={(opts: any[], state: any) => {\n        const filterText = state.inputValue.toLowerCase();\n\n        return opts.filter((opt) =>\n          `${opt.label.toLowerCase()}${opt.value.toLowerCase()}`.includes(\n            filterText\n          )\n        );\n      }}\n      renderOption={(props: any, opt: any) => {\n        return (\n          <li {...props}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexFlow: \"column\",\n                alignItems: \"baseline\",\n                padding: \"4px\",\n                borderBottom: \"1px solid #eaeaea\",\n                cursor: \"pointer\",\n                width: \"100%\",\n\n                \"& .label\": {\n                  fontSize: \"13px\",\n                  fontWeight: 500,\n                },\n                \"& .value\": {\n                  fontSize: \"11px\",\n                  fontWeight: 400,\n                },\n              }}\n            >\n              <span className=\"label\">{opt.value}</span>\n              <span className=\"value\">{opt.label}</span>\n            </Box>\n          </li>\n        );\n      }}\n      renderInput={(params) => (\n        <TextField {...params} {...inputProps} fullWidth />\n      )}\n    />\n  );\n};\n\nexport default RegionSelect;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, IconButton, InputLabel, Tooltip } from \"@mui/material\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport HelpIcon from \"../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport RegionSelect from \"./RegionSelect\";\n\ninterface RegionSelectBoxProps {\n  label: string;\n  classes?: any;\n  onChange: (value: string) => void;\n  onKeyPress?: (e: any) => void;\n  value?: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  type: \"minio\" | \"s3\" | \"gcs\" | \"azure\";\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      minWidth: 160,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nconst RegionSelectWrapper = ({\n  label,\n  onChange,\n  id,\n  name,\n  type,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n  className = \"\",\n}: RegionSelectBoxProps) => {\n  const inputClasses = inputStyles();\n\n  let inputProps: any = {\n    \"data-index\": index,\n    ...extraInputProps,\n    name: name,\n    id: id,\n    classes: inputClasses,\n  };\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <RegionSelect\n            type={type}\n            inputProps={inputProps}\n            onChange={onChange}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(RegionSelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Box, Button } from \"@mui/material\";\nimport {\n  fileInputStyles,\n  formFieldStyles,\n  modalBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport {\n  azureServiceName,\n  gcsServiceName,\n  minioServiceName,\n  s3ServiceName,\n  tierTypes,\n} from \"./utils\";\nimport BackLink from \"../../../../common/BackLink\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport { IAM_PAGES } from \"../../../../common/SecureComponent/permissions\";\n\nimport RegionSelectWrapper from \"./RegionSelectWrapper\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    ...formFieldStyles,\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    fileInputFieldCss: {\n      margin: \"0\",\n    },\n    fileTextBoxContainer: {\n      maxWidth: \" 100%\",\n      flex: 1,\n    },\n    fileReselectCss: {\n      maxWidth: \" 100%\",\n      flex: 1,\n    },\n    ...fileInputStyles,\n  });\n\ninterface IAddNotificationEndpointProps {\n  classes: any;\n}\n\nconst AddTierConfiguration = ({ classes }: IAddNotificationEndpointProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  //Local States\n  const [saving, setSaving] = useState<boolean>(false);\n\n  // Form Items\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState<string>(\"\");\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\n\n  const type = get(params, \"service\", \"s3\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\n\n  // Extra validation functions\n\n  const validName = useCallback(() => {\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\n    if (patternAgainst.test(name)) {\n      setNameInputError(\"\");\n      return true;\n    }\n\n    setNameInputError(\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\"\n    );\n    return false;\n  }, [name]);\n\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      let request = {};\n      let fields = {\n        name,\n        endpoint,\n        bucket,\n        prefix,\n        region,\n      };\n\n      let tierType = type;\n\n      if (type === \"minio\") {\n        tierType = \"s3\";\n      }\n\n      switch (type) {\n        case \"minio\":\n        case \"s3\":\n          request = {\n            s3: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n              storageclass: storageClass,\n            },\n          };\n          break;\n        case \"gcs\":\n          request = {\n            gcs: {\n              ...fields,\n              creds: encodedCreds,\n            },\n          };\n          break;\n        case \"azure\":\n          request = {\n            azure: {\n              ...fields,\n              accountname: accountName,\n              accountkey: accountKey,\n            },\n          };\n      }\n\n      let payload = {\n        type: tierType,\n        ...request,\n      };\n\n      api\n        .invoke(\"POST\", `/api/v1/admin/tiers`, payload)\n        .then(() => {\n          setSaving(false);\n\n          navigate(IAM_PAGES.TIERS);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    }\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    name,\n    prefix,\n    region,\n    saving,\n    secretKey,\n    dispatch,\n    storageClass,\n    type,\n    navigate,\n  ]);\n\n  useEffect(() => {\n    let valid = true;\n    if (type === \"\") {\n      valid = false;\n    }\n    if (name === \"\" || !validName()) {\n      valid = false;\n    }\n    if (endpoint === \"\") {\n      valid = false;\n    }\n    if (bucket === \"\") {\n      valid = false;\n    }\n    if (prefix === \"\") {\n      valid = false;\n    }\n    if (region === \"\" && type !== \"minio\") {\n      valid = false;\n    }\n\n    if (type === \"s3\" || type === \"minio\") {\n      if (accessKey === \"\") {\n        valid = false;\n      }\n      if (secretKey === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"azure\") {\n      if (accountName === \"\") {\n        valid = false;\n      }\n      if (accountKey === \"\") {\n        valid = false;\n      }\n    }\n\n    setIsFormValid(valid);\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    isFormValid,\n    name,\n    prefix,\n    region,\n    secretKey,\n    storageClass,\n    type,\n    validName,\n  ]);\n\n  useEffect(() => {\n    switch (type) {\n      case \"gcs\":\n        setEndpoint(\"https://storage.googleapis.com/\");\n        setTitleSelection(\"Google Cloud\");\n        break;\n      case \"s3\":\n        setEndpoint(\"https://s3.amazonaws.com\");\n        setTitleSelection(\"Amazon S3\");\n        break;\n      case \"azure\":\n        setEndpoint(\"http://blob.core.windows.net\");\n        setTitleSelection(\"Azure\");\n        break;\n      case \"minio\":\n        setEndpoint(\"\");\n        setTitleSelection(\"MinIO\");\n    }\n  }, [type]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  // Input actions\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value.toUpperCase());\n  };\n\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\n\n  return (\n    <Fragment>\n      <PageHeader\n        label={\n          <Fragment>\n            <BackLink to={IAM_PAGES.TIERS_ADD} label={\"Add Tier\"} />\n          </Fragment>\n        }\n        actions={<React.Fragment />}\n      />\n\n      <PageLayout>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            border: \"1px solid #eaeaea\",\n            padding: \"25px\",\n          }}\n        >\n          <form noValidate onSubmit={submitForm}>\n            {type !== \"\" && targetElement ? (\n              <Grid\n                item\n                xs={12}\n                key={`icon-${targetElement.targetTitle}`}\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"start\",\n                  marginBottom: \"20px\",\n                }}\n              >\n                {targetElement.logo ? (\n                  <Box\n                    sx={{\n                      \"& .min-icon\": {\n                        height: \"60px\",\n                        width: \"60px\",\n                      },\n                    }}\n                  >\n                    {targetElement.logo}\n                  </Box>\n                ) : null}\n\n                <div className={classes.lambdaNotifTitle}>\n                  <b>\n                    {titleSelection ? titleSelection : \"\"} - Add Tier\n                    Configuration\n                  </b>\n                </div>\n              </Grid>\n            ) : null}\n\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"grid\",\n                gridTemplateColumns: { xs: \"1fr\", sm: \"1fr 1fr\" },\n                gridAutoFlow: { xs: \"dense\", sm: \"row\" },\n                gridRowGap: 25,\n                gridColumnGap: 50,\n              }}\n            >\n              {type !== \"\" && (\n                <Fragment>\n                  <InputBoxWrapper\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\n                    value={name}\n                    onChange={updateTierName}\n                    error={nameInputError}\n                    required\n                  />\n                  <InputBoxWrapper\n                    id=\"endpoint\"\n                    name=\"endpoint\"\n                    label=\"Endpoint\"\n                    placeholder=\"Enter Endpoint\"\n                    value={endpoint}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setEndpoint(e.target.value);\n                    }}\n                    required\n                  />\n                  {(type === s3ServiceName || type === minioServiceName) && (\n                    <Fragment>\n                      <InputBoxWrapper\n                        id=\"accessKey\"\n                        name=\"accessKey\"\n                        label=\"Access Key\"\n                        placeholder=\"Enter Access Key\"\n                        value={accessKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccessKey(e.target.value);\n                        }}\n                        required\n                      />\n                      <InputBoxWrapper\n                        id=\"secretKey\"\n                        name=\"secretKey\"\n                        label=\"Secret Key\"\n                        placeholder=\"Enter Secret Key\"\n                        value={secretKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setSecretKey(e.target.value);\n                        }}\n                        required\n                      />\n                    </Fragment>\n                  )}\n                  {type === gcsServiceName && (\n                    <FileSelector\n                      accept=\".json\"\n                      classes={{\n                        fileInputField: classes.fileInputFieldCss,\n                        textBoxContainer: classes.fileTextBoxContainer,\n                        fileReselect: classes.fileReselectCss,\n                      }}\n                      id=\"creds\"\n                      label=\"Credentials\"\n                      name=\"creds\"\n                      onChange={(encodedValue, fileName) => {\n                        setEncodedCreds(encodedValue);\n                        setCreds(fileName);\n                      }}\n                      value={creds}\n                      required\n                    />\n                  )}\n                  {type === azureServiceName && (\n                    <Fragment>\n                      <InputBoxWrapper\n                        id=\"accountName\"\n                        name=\"accountName\"\n                        label=\"Account Name\"\n                        placeholder=\"Enter Account Name\"\n                        value={accountName}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountName(e.target.value);\n                        }}\n                        required\n                      />\n                      <InputBoxWrapper\n                        id=\"accountKey\"\n                        name=\"accountKey\"\n                        label=\"Account Key\"\n                        placeholder=\"Enter Account Key\"\n                        value={accountKey}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setAccountKey(e.target.value);\n                        }}\n                        required\n                      />\n                    </Fragment>\n                  )}\n                  <InputBoxWrapper\n                    id=\"bucket\"\n                    name=\"bucket\"\n                    label=\"Bucket\"\n                    placeholder=\"Enter Bucket\"\n                    value={bucket}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setBucket(e.target.value);\n                    }}\n                    required\n                  />\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    label=\"Prefix\"\n                    placeholder=\"Enter Prefix\"\n                    value={prefix}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    required\n                  />\n                  <RegionSelectWrapper\n                    onChange={(value) => {\n                      setRegion(value);\n                    }}\n                    required={type !== \"minio\"}\n                    label={\"Region\"}\n                    id=\"region\"\n                    name=\"region\"\n                    type={type as \"azure\" | \"s3\" | \"minio\" | \"gcs\"}\n                  />\n                  {type === s3ServiceName ||\n                    (type === minioServiceName && (\n                      <InputBoxWrapper\n                        id=\"storageClass\"\n                        name=\"storageClass\"\n                        label=\"Storage Class\"\n                        placeholder=\"Enter Storage Class\"\n                        value={storageClass}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setStorageClass(e.target.value);\n                        }}\n                      />\n                    ))}\n                </Fragment>\n              )}\n            </Grid>\n            <Grid item xs={12} className={classes.settingsButtonContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={saving || !isFormValid}\n              >\n                Save Tier Configuration\n              </Button>\n            </Grid>\n          </form>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(AddTierConfiguration);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {\n  AzureTierIcon,\n  AzureTierIconXs,\n  GoogleTierIcon,\n  GoogleTierIconXs,\n  MinIOTierIcon,\n  MinIOTierIconXs,\n  S3TierIcon,\n  S3TierIconXs,\n} from \"../../../../icons\";\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: <MinIOTierIcon />,\n    logoXs: <MinIOTierIconXs />,\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: <GoogleTierIcon />,\n    logoXs: <GoogleTierIconXs />,\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: <S3TierIcon />,\n    logoXs: <S3TierIconXs />,\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: <AzureTierIcon />,\n    logoXs: <AzureTierIconXs />,\n  },\n];\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","marginTop","fileInputField","margin","flexFlow","fileInputStyles","inputLabel","fontWeight","textBoxContainer","border","paddingLeft","label","classes","onChange","id","name","disabled","tooltip","required","error","accept","value","useState","showFileSelector","setShowSelector","Grid","item","xs","className","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","title","placement","HelpIcon","type","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","color","component","onClick","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","inputProps","regionList","s3Regions","gcsRegions","azRegions","getRegions","React","setValue","Autocomplete","sx","padding","fontSize","borderColor","borderWidth","freeSolo","selectOnFocus","handleHomeEndKeys","event","newValue","newVal","inputValue","onInputChange","getOptionLabel","option","options","filterOptions","opts","state","filterText","toLowerCase","filter","opt","includes","renderOption","props","Box","display","alignItems","borderBottom","cursor","width","renderInput","params","TextField","fullWidth","inputStyles","makeStyles","inputFieldStyles","flexGrow","position","minWidth","overlayAction","right","top","maxHeight","index","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputClasses","container","clsx","inputBoxContainer","noMinWidthLabel","disableTouchRipple","modalBasic","settingsCommon","formFieldStyles","lambdaNotifTitle","fontFamily","fileInputFieldCss","fileTextBoxContainer","flex","fileReselectCss","dispatch","useAppDispatch","navigate","useNavigate","useParams","saving","setSaving","setName","endpoint","setEndpoint","bucket","setBucket","prefix","setPrefix","region","setRegion","storageClass","setStorageClass","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","titleSelection","setTitleSelection","isFormValid","setIsFormValid","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","s3","accesskey","secretkey","storageclass","gcs","azure","accountname","accountkey","payload","api","then","IAM_PAGES","catch","err","setErrorSnackMessage","valid","targetElement","tierTypes","serviceName","Fragment","PageHeader","BackLink","to","actions","PageLayout","noValidate","onSubmit","preventDefault","justifyContent","marginBottom","logo","height","targetTitle","gridTemplateColumns","sm","gridAutoFlow","gridRowGap","gridColumnGap","InputBoxWrapper","placeholder","toUpperCase","s3ServiceName","minioServiceName","gcsServiceName","FileSelector","encodedValue","azureServiceName","settingsButtonContainer","Button","variant","logoXs","errorBlock","palette","main","withBreak","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}