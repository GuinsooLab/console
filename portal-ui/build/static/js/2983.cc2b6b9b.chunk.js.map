{"version":3,"file":"static/js/2983.cc2b6b9b.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/TableWrapper/TableActionIcons/common.ts","screens/Console/Common/TableWrapper/TableActionIcons/CloudIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/ConsoleIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/DisableIcon.tsx","screens/Console/Common/TableWrapper/TableActionIcons/FormatDriveIcon.tsx","screens/Console/Common/TableWrapper/TableActionButton.tsx","screens/Console/Common/TableWrapper/TableWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  overrideLabelClasses?: string;\n  overrideCheckboxStyles?: React.CSSProperties;\n  index?: number;\n  noTopMargin?: boolean;\n  checked: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n      flexWrap: \"nowrap\",\n    },\n    noTopMargin: {\n      marginTop: 0,\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  noTopMargin = false,\n  tooltip = \"\",\n  overrideLabelClasses = \"\",\n  overrideCheckboxStyles,\n  classes,\n  className,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          noTopMargin ? classes.noTopMargin : \"\"\n        } ${className ? className : \"\"}`}\n      >\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n            disableRipple\n            disableFocusRipple\n            focusRipple={false}\n            centerRipple={false}\n            disableTouchRipple\n            style={overrideCheckboxStyles || {}}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\n          >\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","export interface IIcon {\n  active: boolean;\n}\n\nexport const unSelected = \"#081C42\";\nexport const selected = \"#081C42\";\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst CloudIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z\"\n      />\n    </svg>\n  );\n};\n\nexport default CloudIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst ConsoleIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z\"\n      />\n    </svg>\n  );\n};\n\nexport default ConsoleIcon;\n","import React from \"react\";\nimport { IIcon, selected, unSelected } from \"./common\";\n\nconst DescriptionIcon = ({ active = false }: IIcon) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        fill={active ? selected : unSelected}\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default DescriptionIcon;\n","import React, { SVGProps } from \"react\";\n\nconst FormatDriveIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={`min-icon`}\n    fill={\"currentcolor\"}\n    {...props}\n  >\n    <path d=\"M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"></path>\n  </svg>\n);\n\nexport default FormatDriveIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport isString from \"lodash/isString\";\nimport { Link } from \"react-router-dom\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport CloudIcon from \"./TableActionIcons/CloudIcon\";\nimport ConsoleIcon from \"./TableActionIcons/ConsoleIcon\";\nimport DisableIcon from \"./TableActionIcons/DisableIcon\";\nimport FormatDriveIcon from \"./TableActionIcons/FormatDriveIcon\";\nimport EditIcon from \"../../../../icons/EditIcon\";\nimport TrashIcon from \"../../../../icons/TrashIcon\";\nimport { IAMPoliciesIcon, PreviewIcon, ShareIcon } from \"../../../../icons\";\nimport DownloadIcon from \"../../../../icons/DownloadIcon\";\n\nconst styles = () =>\n  createStyles({\n    spacing: {\n      margin: \"0 8px\",\n    },\n    buttonDisabled: {\n      \"&.MuiButtonBase-root.Mui-disabled\": {\n        cursor: \"not-allowed\",\n        filter: \"grayscale(100%)\",\n        opacity: \"30%\",\n      },\n    },\n  });\n\ninterface IActionButton {\n  label?: string;\n  type: string | React.ReactNode;\n  onClick?: (id: string) => any;\n  to?: string;\n  valueToSend: any;\n  selected: boolean;\n  sendOnlyId?: boolean;\n  idField: string;\n  disabled: boolean;\n  classes: any;\n}\n\nconst defineIcon = (type: string, selected: boolean) => {\n  switch (type) {\n    case \"view\":\n      return <PreviewIcon />;\n    case \"edit\":\n      return <EditIcon />;\n    case \"delete\":\n      return <TrashIcon />;\n    case \"description\":\n      return <IAMPoliciesIcon />;\n    case \"share\":\n      return <ShareIcon />;\n    case \"cloud\":\n      return <CloudIcon active={selected} />;\n    case \"console\":\n      return <ConsoleIcon active={selected} />;\n    case \"download\":\n      return <DownloadIcon />;\n    case \"disable\":\n      return <DisableIcon active={selected} />;\n    case \"format\":\n      return <FormatDriveIcon />;\n    case \"preview\":\n      return <PreviewIcon />;\n  }\n\n  return null;\n};\n\nconst TableActionButton = ({\n  type,\n  onClick,\n  valueToSend,\n  idField,\n  selected,\n  to,\n  sendOnlyId = false,\n  disabled = false,\n  classes,\n  label,\n}: IActionButton) => {\n  const valueClick = sendOnlyId ? valueToSend[idField] : valueToSend;\n\n  const icon = typeof type === \"string\" ? defineIcon(type, selected) : type;\n  let buttonElement = (\n    <IconButton\n      aria-label={typeof type === \"string\" ? type : \"\"}\n      size={\"small\"}\n      className={`${classes.spacing} ${disabled ? classes.buttonDisabled : \"\"}`}\n      disabled={disabled}\n      onClick={\n        onClick\n          ? (e) => {\n              e.stopPropagation();\n              if (!disabled) {\n                onClick(valueClick);\n              } else {\n                e.preventDefault();\n              }\n            }\n          : () => null\n      }\n    >\n      {icon}\n    </IconButton>\n  );\n\n  if (label && label !== \"\") {\n    buttonElement = <Tooltip title={label}>{buttonElement}</Tooltip>;\n  }\n\n  if (onClick) {\n    return buttonElement;\n  }\n\n  if (isString(to)) {\n    if (!disabled) {\n      return (\n        <Link\n          to={`${to}/${valueClick}`}\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {buttonElement}\n        </Link>\n      );\n    }\n\n    return buttonElement;\n  }\n\n  return null;\n};\n\nexport default withStyles(styles)(TableActionButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport {\n  Checkbox,\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Popover,\n  Typography,\n} from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AutoSizer, Column, InfiniteLoader, Table } from \"react-virtualized\";\nimport get from \"lodash/get\";\nimport isString from \"lodash/isString\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport TableActionButton from \"./TableActionButton\";\nimport CheckboxWrapper from \"../FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport {\n  checkboxIcons,\n  radioIcons,\n  TableRowPredefStyles,\n} from \"../FormComponents/common/styleLibrary\";\nimport Loader from \"../Loader/Loader\";\n\n//Interfaces for table Items\n\nexport interface ItemActions {\n  label?: string;\n  type: string | any;\n  to?: string;\n  sendOnlyId?: boolean;\n  disableButtonFunction?: (itemValue: any) => boolean;\n  showLoaderFunction?: (itemValue: any) => boolean;\n\n  onClick?(valueToSend: any): any;\n}\n\ninterface IColumns {\n  label: string;\n  elementKey?: string;\n  renderFunction?: (input: any) => any;\n  renderFullObject?: boolean;\n  globalClass?: any;\n  rowClass?: any;\n  width?: number;\n  headerTextAlign?: string;\n  contentTextAlign?: string;\n  enableSort?: boolean;\n}\n\ninterface IInfiniteScrollConfig {\n  loadMoreRecords: (indexElements: {\n    startIndex: number;\n    stopIndex: number;\n  }) => Promise<any>;\n  recordsCount: number;\n}\n\ninterface ISortConfig {\n  triggerSort: (val: any) => any;\n  currentSort: string;\n  currentDirection: \"ASC\" | \"DESC\" | undefined;\n}\n\ninterface TableWrapperProps {\n  itemActions?: ItemActions[] | null;\n  columns: IColumns[];\n  onSelect?: (e: React.ChangeEvent<HTMLInputElement>) => any;\n  idField: string;\n  isLoading: boolean;\n  loadingMessage?: React.ReactNode;\n  records: any[];\n  classes: any;\n  entityName: string;\n  selectedItems?: string[];\n  radioSelection?: boolean;\n  customEmptyMessage?: string;\n  customPaperHeight?: string;\n  noBackground?: boolean;\n  columnsSelector?: boolean;\n  textSelectable?: boolean;\n  columnsShown?: string[];\n  onColumnChange?: (column: string, state: boolean) => any;\n  autoScrollToBottom?: boolean;\n  infiniteScrollConfig?: IInfiniteScrollConfig;\n  sortConfig?: ISortConfig;\n  disabled?: boolean;\n  onSelectAll?: () => void;\n  rowStyle?: ({\n    index,\n  }: {\n    index: number;\n  }) => \"deleted\" | \"\" | React.CSSProperties;\n  parentClassName?: string;\n}\n\nconst borderColor = \"#9c9c9c80\";\n\nconst styles = () =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      padding: \"0 16px 8px\",\n      boxShadow: \"none\",\n      border: \"#EAEDEE 1px solid\",\n      borderRadius: 3,\n      minHeight: 200,\n      overflowY: \"scroll\",\n      position: \"relative\",\n      \"&::-webkit-scrollbar\": {\n        width: 0,\n        height: 3,\n      },\n    },\n    noBackground: {\n      backgroundColor: \"transparent\",\n      border: 0,\n    },\n    disabled: {\n      backgroundColor: \"#fbfafa\",\n      color: \"#cccccc\",\n    },\n    defaultPaperHeight: {\n      height: \"calc(100vh - 205px)\",\n    },\n    loadingBox: {\n      paddingTop: \"100px\",\n      paddingBottom: \"100px\",\n    },\n    overlayColumnSelection: {\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n    },\n    popoverContent: {\n      maxHeight: 250,\n      overflowY: \"auto\",\n      padding: \"0 10px 10px\",\n    },\n    shownColumnsLabel: {\n      color: \"#9c9c9c\",\n      fontSize: 12,\n      padding: 10,\n      borderBottom: \"#eaeaea 1px solid\",\n      width: \"100%\",\n    },\n    checkAllWrapper: {\n      marginTop: -16,\n    },\n    \"@global\": {\n      \".rowLine\": {\n        borderBottom: `1px solid ${borderColor}`,\n        height: 40,\n        color: \"#393939\",\n        fontSize: 14,\n        transitionDuration: 0.3,\n        \"&:focus\": {\n          outline: \"initial\",\n        },\n        \"&:hover:not(.ReactVirtualized__Table__headerRow)\": {\n          userSelect: \"none\",\n          backgroundColor: \"#ececec\",\n          fontWeight: 600,\n          \"&.canClick\": {\n            cursor: \"pointer\",\n          },\n          \"&.canSelectText\": {\n            userSelect: \"text\",\n          },\n        },\n        \"& .selected\": {\n          color: \"#081C42\",\n          fontWeight: 600,\n        },\n      },\n      \".headerItem\": {\n        userSelect: \"none\",\n        fontWeight: 700,\n        fontSize: 14,\n        fontStyle: \"initial\",\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"none\",\n      },\n      \".ReactVirtualized__Table__headerRow\": {\n        fontWeight: 700,\n        fontSize: 14,\n        borderColor: \"#39393980\",\n        textTransform: \"initial\",\n      },\n      \".optionsAlignment\": {\n        textAlign: \"center\",\n        \"& .min-icon\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \".text-center\": {\n        textAlign: \"center\",\n      },\n      \".text-right\": {\n        textAlign: \"right\",\n      },\n      \".progress-enabled\": {\n        paddingTop: 3,\n        display: \"inline-block\",\n        margin: \"0 10px\",\n        position: \"relative\",\n        width: 18,\n        height: 18,\n      },\n      \".progress-enabled > .MuiCircularProgress-root\": {\n        position: \"absolute\",\n        left: 0,\n        top: 3,\n      },\n    },\n    ...checkboxIcons,\n    ...radioIcons,\n  });\n\nconst selectWidth = 45;\n\n// Function to render elements in table\nconst subRenderFunction = (\n  rowData: any,\n  column: IColumns,\n  isSelected: boolean\n) => {\n  const itemElement = isString(rowData)\n    ? rowData\n    : get(rowData, column.elementKey!, null); // If the element is just a string, we render it as it is\n  const renderConst = column.renderFullObject ? rowData : itemElement;\n\n  const renderElement = column.renderFunction\n    ? column.renderFunction(renderConst)\n    : renderConst; // If render function is set, we send the value to the function.\n\n  return (\n    <Fragment>\n      <span className={isSelected ? \"selected\" : \"\"}>{renderElement}</span>\n    </Fragment>\n  );\n};\n\n// Function to calculate common column width for elements with no with size\nconst calculateColumnRest = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  columnsSelector: boolean,\n  columnsShown: string[]\n) => {\n  let colsItems = [...columns];\n\n  if (columnsSelector) {\n    colsItems = columns.filter((column) =>\n      columnsShown.includes(column.elementKey!)\n    );\n  }\n\n  let initialValue = containerWidth;\n\n  if (hasSelect) {\n    initialValue -= selectWidth;\n  }\n\n  if (hasActions) {\n    initialValue -= actionsWidth;\n  }\n\n  let freeSpacing = colsItems.reduce((total, currValue) => {\n    return currValue.width ? total - currValue.width : total;\n  }, initialValue);\n\n  return freeSpacing / colsItems.filter((el) => !el.width).length;\n};\n\n// Function that renders Columns in table\nconst generateColumnsMap = (\n  columns: IColumns[],\n  containerWidth: number,\n  actionsWidth: number,\n  hasSelect: boolean,\n  hasActions: boolean,\n  selectedItems: string[],\n  idField: string,\n  columnsSelector: boolean,\n  columnsShown: string[],\n  sortColumn: string,\n  sortDirection: \"ASC\" | \"DESC\" | undefined\n) => {\n  const commonRestWidth = calculateColumnRest(\n    columns,\n    containerWidth,\n    actionsWidth,\n    hasSelect,\n    hasActions,\n    columnsSelector,\n    columnsShown\n  );\n  return columns.map((column: IColumns, index: number) => {\n    if (columnsSelector && !columnsShown.includes(column.elementKey!)) {\n      return null;\n    }\n\n    const disableSort = column.enableSort ? !column.enableSort : true;\n\n    return (\n      // @ts-ignore\n      <Column\n        key={`col-tb-${index.toString()}`}\n        dataKey={column.elementKey!}\n        headerClassName={`titleHeader ${\n          column.headerTextAlign ? `text-${column.headerTextAlign}` : \"\"\n        }`}\n        headerRenderer={() => (\n          <Fragment>\n            {sortColumn === column.elementKey && (\n              <Fragment>\n                {sortDirection === \"ASC\" ? (\n                  <ArrowDropUpIcon />\n                ) : (\n                  <ArrowDropDownIcon />\n                )}\n              </Fragment>\n            )}\n            {column.label}\n          </Fragment>\n        )}\n        className={\n          column.contentTextAlign ? `text-${column.contentTextAlign}` : \"\"\n        }\n        cellRenderer={({ rowData }) => {\n          const isSelected = selectedItems\n            ? selectedItems.includes(\n                isString(rowData) ? rowData : rowData[idField]\n              )\n            : false;\n          return subRenderFunction(rowData, column, isSelected);\n        }}\n        width={column.width || commonRestWidth}\n        disableSort={disableSort}\n        defaultSortDirection={\"ASC\"}\n      />\n    );\n  });\n};\n\n// Function to render the action buttons\nconst elementActions = (\n  actions: ItemActions[],\n  valueToSend: any,\n  selected: boolean,\n  idField: string\n) => {\n  return actions.map((action: ItemActions, index: number) => {\n    if (action.type === \"view\") {\n      return null;\n    }\n\n    const vlSend =\n      typeof valueToSend === \"string\" ? valueToSend : valueToSend[idField];\n\n    let disabled = false;\n\n    if (action.disableButtonFunction) {\n      if (action.disableButtonFunction(vlSend)) {\n        disabled = true;\n      }\n    }\n\n    if (action.showLoaderFunction) {\n      if (action.showLoaderFunction(vlSend)) {\n        return (\n          <div className={\"progress-enabled\"}>\n            <Loader\n              style={{ width: 18, height: 18 }}\n              key={`actions-loader-${action.type}-${index.toString()}`}\n            />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <TableActionButton\n        label={action.label}\n        type={action.type}\n        onClick={action.onClick}\n        to={action.to}\n        valueToSend={valueToSend}\n        selected={selected}\n        key={`actions-${action.type}-${index.toString()}`}\n        idField={idField}\n        sendOnlyId={!!action.sendOnlyId}\n        disabled={disabled}\n      />\n    );\n  });\n};\n\n// Function to calculate the options column width according elements inside\nconst calculateOptionsSize = (containerWidth: number, totalOptions: number) => {\n  const minContainerSize = 80;\n  const sizeOptions = totalOptions * 45 + 15;\n\n  if (sizeOptions < minContainerSize) {\n    return minContainerSize;\n  }\n\n  if (sizeOptions > containerWidth) {\n    return containerWidth;\n  }\n\n  return sizeOptions;\n};\n\n// Main function to render the Table Wrapper\nconst TableWrapper = ({\n  itemActions,\n  columns,\n  onSelect,\n  records,\n  isLoading,\n  loadingMessage = <Typography component=\"h3\">Loading...</Typography>,\n  entityName,\n  selectedItems,\n  idField,\n  classes,\n  radioSelection = false,\n  customEmptyMessage = \"\",\n  customPaperHeight = \"\",\n  noBackground = false,\n  columnsSelector = false,\n  textSelectable = false,\n  columnsShown = [],\n  onColumnChange = (column: string, state: boolean) => {},\n  infiniteScrollConfig,\n  sortConfig,\n  autoScrollToBottom = false,\n  disabled = false,\n  onSelectAll,\n  rowStyle,\n  parentClassName = \"\",\n}: TableWrapperProps) => {\n  const navigate = useNavigate();\n\n  const [columnSelectorOpen, setColumnSelectorOpen] = useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<any>(null);\n\n  const findView = itemActions\n    ? itemActions.find((el) => el.type === \"view\")\n    : null;\n\n  const clickAction = (rowItem: any) => {\n    if (findView) {\n      const valueClick = findView.sendOnlyId ? rowItem[idField] : rowItem;\n\n      let disabled = false;\n\n      if (findView.disableButtonFunction) {\n        if (findView.disableButtonFunction(valueClick)) {\n          disabled = true;\n        }\n      }\n\n      if (findView.to && !disabled) {\n        navigate(`${findView.to}/${valueClick}`);\n        return;\n      }\n\n      if (findView.onClick && !disabled) {\n        findView.onClick(valueClick);\n      }\n    }\n  };\n\n  const openColumnsSelector = (event: { currentTarget: any }) => {\n    setColumnSelectorOpen(!columnSelectorOpen);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeColumnSelector = () => {\n    setColumnSelectorOpen(false);\n    setAnchorEl(null);\n  };\n\n  const columnsSelection = (columns: IColumns[]) => {\n    return (\n      <Fragment>\n        <IconButton\n          aria-describedby={\"columnsSelector\"}\n          color=\"primary\"\n          onClick={openColumnsSelector}\n          size=\"large\"\n        >\n          <ViewColumnIcon fontSize=\"inherit\" />\n        </IconButton>\n        <Popover\n          anchorEl={anchorEl}\n          id={\"columnsSelector\"}\n          open={columnSelectorOpen}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n          onClose={closeColumnSelector}\n        >\n          <div className={classes.shownColumnsLabel}>Shown Columns</div>\n          <div className={classes.popoverContent}>\n            {columns.map((column: IColumns) => {\n              return (\n                <CheckboxWrapper\n                  key={`tableColumns-${column.label}`}\n                  label={column.label}\n                  checked={columnsShown.includes(column.elementKey!)}\n                  onChange={(e) => {\n                    onColumnChange(column.elementKey!, e.target.checked);\n                  }}\n                  id={`chbox-${column.label}`}\n                  name={`chbox-${column.label}`}\n                  value={column.label}\n                />\n              );\n            })}\n          </div>\n        </Popover>\n      </Fragment>\n    );\n  };\n\n  return (\n    <Grid item xs={12} className={parentClassName}>\n      <Paper\n        className={`${classes.paper} ${noBackground ? classes.noBackground : \"\"}\n        ${disabled ? classes.disabled : \"\"} \n        ${\n          customPaperHeight !== \"\"\n            ? customPaperHeight\n            : classes.defaultPaperHeight\n        }`}\n      >\n        {isLoading && (\n          <Grid container className={classes.loadingBox}>\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n              {loadingMessage}\n            </Grid>\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          </Grid>\n        )}\n        {columnsSelector && !isLoading && records.length > 0 && (\n          <div className={classes.overlayColumnSelection}>\n            {columnsSelection(columns)}\n          </div>\n        )}\n        {records && !isLoading && records.length > 0 ? (\n          // @ts-ignore\n          <InfiniteLoader\n            isRowLoaded={({ index }) => !!records[index]}\n            loadMoreRows={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.loadMoreRecords\n                : () => new Promise(() => true)\n            }\n            rowCount={\n              infiniteScrollConfig\n                ? infiniteScrollConfig.recordsCount\n                : records.length\n            }\n          >\n            {({ onRowsRendered, registerChild }) => (\n              // @ts-ignore\n              <AutoSizer>\n                {({ width, height }: any) => {\n                  const optionsWidth = calculateOptionsSize(\n                    width,\n                    itemActions\n                      ? itemActions.filter((el) => el.type !== \"view\").length\n                      : 0\n                  );\n                  const hasSelect: boolean = !!(onSelect && selectedItems);\n                  const hasOptions: boolean = !!(\n                    (itemActions && itemActions.length > 1) ||\n                    (itemActions &&\n                      itemActions.length === 1 &&\n                      itemActions[0].type !== \"view\")\n                  );\n                  return (\n                    // @ts-ignore\n                    <Table\n                      ref={registerChild}\n                      disableHeader={false}\n                      headerClassName={\"headerItem\"}\n                      headerHeight={40}\n                      height={height}\n                      noRowsRenderer={() => (\n                        <Fragment>\n                          {customEmptyMessage !== \"\"\n                            ? customEmptyMessage\n                            : `There are no ${entityName} yet.`}\n                        </Fragment>\n                      )}\n                      overscanRowCount={10}\n                      rowHeight={40}\n                      width={width}\n                      rowCount={records.length}\n                      rowGetter={({ index }) => records[index]}\n                      onRowClick={({ rowData }) => {\n                        clickAction(rowData);\n                      }}\n                      rowClassName={`rowLine ${findView ? \"canClick\" : \"\"} ${\n                        !findView && textSelectable ? \"canSelectText\" : \"\"\n                      }`}\n                      onRowsRendered={onRowsRendered}\n                      sort={sortConfig ? sortConfig.triggerSort : undefined}\n                      sortBy={sortConfig ? sortConfig.currentSort : undefined}\n                      sortDirection={\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      }\n                      scrollToIndex={\n                        autoScrollToBottom ? records.length - 1 : -1\n                      }\n                      rowStyle={(r) => {\n                        if (rowStyle) {\n                          const returnElement = rowStyle(r);\n\n                          if (typeof returnElement === \"string\") {\n                            return get(TableRowPredefStyles, returnElement, {});\n                          }\n\n                          return returnElement;\n                        }\n\n                        return {};\n                      }}\n                    >\n                      {hasSelect && (\n                        // @ts-ignore\n                        <Column\n                          headerRenderer={() => (\n                            <Fragment>\n                              {onSelectAll ? (\n                                <div className={classes.checkAllWrapper}>\n                                  <CheckboxWrapper\n                                    label={\"\"}\n                                    onChange={onSelectAll}\n                                    value=\"all\"\n                                    id={\"selectAll\"}\n                                    name={\"selectAll\"}\n                                    checked={\n                                      selectedItems?.length === records.length\n                                    }\n                                  />\n                                </div>\n                              ) : (\n                                <Fragment>Select</Fragment>\n                              )}\n                            </Fragment>\n                          )}\n                          dataKey={`select-${idField}`}\n                          width={selectWidth}\n                          disableSort\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n\n                            return (\n                              <Checkbox\n                                value={\n                                  isString(rowData) ? rowData : rowData[idField]\n                                }\n                                color=\"primary\"\n                                inputProps={{\n                                  \"aria-label\": \"secondary checkbox\",\n                                }}\n                                className=\"TableCheckbox\"\n                                checked={isSelected}\n                                onChange={onSelect}\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                }}\n                                checkedIcon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioSelectedIcon\n                                        : classes.checkedIcon\n                                    }\n                                  />\n                                }\n                                icon={\n                                  <span\n                                    className={\n                                      radioSelection\n                                        ? classes.radioUnselectedIcon\n                                        : classes.unCheckedIcon\n                                    }\n                                  />\n                                }\n                              />\n                            );\n                          }}\n                        />\n                      )}\n                      {generateColumnsMap(\n                        columns,\n                        width,\n                        optionsWidth,\n                        hasSelect,\n                        hasOptions,\n                        selectedItems || [],\n                        idField,\n                        columnsSelector,\n                        columnsShown,\n                        sortConfig ? sortConfig.currentSort : \"\",\n                        sortConfig ? sortConfig.currentDirection : undefined\n                      )}\n                      {hasOptions && (\n                        // @ts-ignore\n                        <Column\n                          dataKey={idField}\n                          width={optionsWidth}\n                          headerClassName=\"optionsAlignment\"\n                          className=\"optionsAlignment\"\n                          cellRenderer={({ rowData }) => {\n                            const isSelected = selectedItems\n                              ? selectedItems.includes(\n                                  isString(rowData) ? rowData : rowData[idField]\n                                )\n                              : false;\n                            return elementActions(\n                              itemActions || [],\n                              rowData,\n                              isSelected,\n                              idField\n                            );\n                          }}\n                        />\n                      )}\n                    </Table>\n                  );\n                }}\n              </AutoSizer>\n            )}\n          </InfiniteLoader>\n        ) : (\n          <Fragment>\n            {!isLoading && (\n              <div>\n                {customEmptyMessage !== \"\"\n                  ? customEmptyMessage\n                  : `There are no ${entityName} yet.`}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TableWrapper);\n"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","display","justifyContent","alignItems","margin","marginBottom","flexBasis","flexWrap","noTopMargin","marginTop","label","onChange","value","id","name","checked","disabled","tooltip","overrideLabelClasses","overrideCheckboxStyles","classes","className","item","xs","color","inputProps","checkedIcon","icon","unCheckedIcon","disableRipple","disableFocusRipple","focusRipple","centerRipple","disableTouchRipple","style","htmlFor","noMinWidthLabel","tooltipContainer","title","placement","unSelected","selected","active","xmlns","width","height","viewBox","fill","d","props","spacing","buttonDisabled","cursor","filter","opacity","type","onClick","valueToSend","idField","to","sendOnlyId","valueClick","EditIcon","TrashIcon","DownloadIcon","DisableIcon","defineIcon","buttonElement","IconButton","size","e","stopPropagation","preventDefault","Tooltip","isString","generateColumnsMap","columns","containerWidth","actionsWidth","hasSelect","hasActions","selectedItems","columnsSelector","columnsShown","sortColumn","sortDirection","commonRestWidth","colsItems","column","includes","elementKey","initialValue","reduce","total","currValue","el","length","calculateColumnRest","map","index","disableSort","enableSort","dataKey","headerClassName","headerTextAlign","headerRenderer","Fragment","ArrowDropUp","ArrowDropDown","contentTextAlign","cellRenderer","rowData","isSelected","itemElement","get","renderConst","renderFullObject","renderElement","renderFunction","subRenderFunction","defaultSortDirection","toString","paper","overflow","flexDirection","padding","boxShadow","border","borderRadius","minHeight","overflowY","position","noBackground","backgroundColor","defaultPaperHeight","loadingBox","paddingTop","paddingBottom","overlayColumnSelection","right","top","popoverContent","maxHeight","shownColumnsLabel","fontSize","borderBottom","checkAllWrapper","transitionDuration","outline","userSelect","fontWeight","fontStyle","borderColor","textTransform","textAlign","left","radioIcons","itemActions","onSelect","records","isLoading","loadingMessage","Typography","component","entityName","radioSelection","customEmptyMessage","customPaperHeight","textSelectable","onColumnChange","state","infiniteScrollConfig","sortConfig","autoScrollToBottom","onSelectAll","rowStyle","parentClassName","navigate","useNavigate","useState","columnSelectorOpen","setColumnSelectorOpen","React","anchorEl","setAnchorEl","findView","find","openColumnsSelector","event","currentTarget","closeColumnSelector","Grid","Paper","container","LinearProgress","ViewColumn","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","onClose","CheckboxWrapper","target","columnsSelection","isRowLoaded","loadMoreRows","loadMoreRecords","Promise","rowCount","recordsCount","onRowsRendered","registerChild","optionsWidth","totalOptions","sizeOptions","calculateOptionsSize","hasOptions","ref","disableHeader","headerHeight","noRowsRenderer","overscanRowCount","rowHeight","rowGetter","onRowClick","rowItem","disableButtonFunction","clickAction","rowClassName","sort","triggerSort","undefined","sortBy","currentSort","currentDirection","scrollToIndex","r","returnElement","TableRowPredefStyles","Checkbox","radioSelectedIcon","radioUnselectedIcon","actions","action","vlSend","showLoaderFunction","Loader","elementActions"],"sourceRoot":""}