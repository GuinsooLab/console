{"version":3,"file":"static/js/483.96dc1806.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Support/Profile.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  overrideLabelClasses?: string;\n  overrideCheckboxStyles?: React.CSSProperties;\n  index?: number;\n  noTopMargin?: boolean;\n  checked: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n      flexWrap: \"nowrap\",\n    },\n    noTopMargin: {\n      marginTop: 0,\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  noTopMargin = false,\n  tooltip = \"\",\n  overrideLabelClasses = \"\",\n  overrideCheckboxStyles,\n  classes,\n  className,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          noTopMargin ? classes.noTopMargin : \"\"\n        } ${className ? className : \"\"}`}\n      >\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n            disableRipple\n            disableFocusRipple\n            focusRipple={false}\n            centerRipple={false}\n            disableTouchRipple\n            style={overrideCheckboxStyles || {}}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\n          >\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","import React, { Fragment, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, Grid } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport CheckboxWrapper from \"../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport {\n  actionsTray,\n  containerForHeader,\n  inlineCheckboxes,\n} from \"../Common/FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      marginTop: 24,\n      textAlign: \"right\",\n      \"& .MuiButton-root\": {\n        marginLeft: 8,\n      },\n    },\n    dropdown: {\n      marginBottom: 24,\n    },\n    checkboxLabel: {\n      marginTop: 12,\n      marginRight: 4,\n      fontSize: 16,\n      fontWeight: 500,\n    },\n    checkboxDisabled: {\n      opacity: 0.5,\n    },\n    inlineCheckboxes: {\n      ...inlineCheckboxes.inlineCheckboxes,\n      alignItems: \"center\",\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n      },\n    },\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IProfileProps {\n  classes: any;\n}\n\nconst Profile = ({ classes }: IProfileProps) => {\n  const [profilingStarted, setProfilingStarted] = useState<boolean>(false);\n  const [types, setTypes] = useState<string[]>([\n    \"cpu\",\n    \"mem\",\n    \"block\",\n    \"mutex\",\n    \"trace\",\n    \"threads\",\n    \"goroutines\",\n  ]);\n\n  const typesList = [\n    { label: \"cpu\", value: \"cpu\" },\n    { label: \"mem\", value: \"mem\" },\n    { label: \"block\", value: \"block\" },\n    { label: \"mutex\", value: \"mutex\" },\n    { label: \"trace\", value: \"trace\" },\n    { label: \"threads\", value: \"threads\" },\n    { label: \"goroutines\", value: \"goroutines\" },\n  ];\n\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let newArr: string[] = [];\n    if (types.indexOf(e.target.value) > -1) {\n      newArr = types.filter((type) => type !== e.target.value);\n    } else {\n      newArr = [...types, e.target.value];\n    }\n    setTypes(newArr);\n  };\n\n  const startProfiling = () => {\n    if (!profilingStarted) {\n      const typeString = types.join(\",\");\n      setProfilingStarted(true);\n      api\n        .invoke(\"POST\", `/api/v1/profiling/start`, {\n          type: typeString,\n        })\n        .then(() => {})\n        .catch((err: ErrorResponseHandler) => {\n          console.log(err);\n          setProfilingStarted(false);\n        });\n    }\n  };\n\n  const stopProfiling = () => {\n    if (profilingStarted) {\n      const anchor = document.createElement(\"a\");\n      document.body.appendChild(anchor);\n      let path = \"/api/v1/profiling/stop\";\n      var req = new XMLHttpRequest();\n      req.open(\"POST\", path, true);\n      req.responseType = \"blob\";\n      req.onreadystatechange = () => {\n        if (req.readyState === 4 && req.status === 200) {\n          let filename = \"profile.zip\";\n          setProfilingStarted(false);\n          var link = document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(req.response);\n          link.download = filename;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }\n      };\n      req.send();\n    }\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Profile\" />\n      <PageLayout>\n        <Grid item xs={12} className={classes.boxy}>\n          <Grid item xs={12} className={classes.dropdown}>\n            <Grid\n              item\n              xs={12}\n              className={`${classes.inlineCheckboxes} ${\n                profilingStarted && classes.checkboxDisabled\n              }`}\n            >\n              <div className={classes.checkboxLabel}>Types to profile:</div>\n              {typesList.map((t) => (\n                <CheckboxWrapper\n                  checked={types.indexOf(t.value) > -1}\n                  disabled={profilingStarted}\n                  key={`checkbox-${t.label}`}\n                  id={`checkbox-${t.label}`}\n                  label={t.label}\n                  name={`checkbox-${t.label}`}\n                  onChange={onCheckboxClick}\n                  value={t.value}\n                />\n              ))}\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={profilingStarted || types.length < 1}\n              onClick={() => {\n                startProfiling();\n              }}\n            >\n              Start Profiling\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!profilingStarted}\n              onClick={() => {\n                stopProfiling();\n              }}\n            >\n              Stop Profiling\n            </Button>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(Profile);\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["withStyles","theme","createStyles","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","display","justifyContent","alignItems","margin","marginBottom","flexBasis","flexWrap","noTopMargin","marginTop","label","onChange","value","id","name","checked","disabled","tooltip","overrideLabelClasses","overrideCheckboxStyles","classes","className","item","xs","color","inputProps","checkedIcon","icon","unCheckedIcon","disableRipple","disableFocusRipple","focusRipple","centerRipple","disableTouchRipple","style","htmlFor","noMinWidthLabel","tooltipContainer","title","placement","buttonContainer","textAlign","marginLeft","dropdown","checkboxLabel","marginRight","fontSize","fontWeight","checkboxDisabled","opacity","inlineCheckboxes","flexFlow","actionsTray","containerForHeader","spacing","useState","profilingStarted","setProfilingStarted","types","setTypes","onCheckboxClick","e","newArr","indexOf","target","filter","type","Fragment","boxy","map","t","variant","length","onClick","typeString","join","api","then","catch","err","console","log","startProfiling","anchor","document","createElement","body","appendChild","req","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","link","href","window","URL","createObjectURL","response","download","click","removeChild","send","stopProfiling","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","_extends","palette","text","secondary","backgroundColor","alpha","action","active","main","hoverOpacity","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","size","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses"],"sourceRoot":""}