{"version":3,"file":"static/js/402.89c71117.chunk.js","mappings":"wNAgGA,UA9D8B,SAAC,GAKD,IAJ5BA,EAI2B,EAJ3BA,+BACAC,EAG2B,EAH3BA,UACAC,EAE2B,EAF3BA,eACAC,EAC2B,EAD3BA,uBAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkDC,EAAAA,EAAAA,WAAkB,GAApE,eAAOC,EAAP,KAA0BC,EAA1B,KAsBA,OACE,SAAC,IAAD,CACEC,MAAK,uBACLC,YAAaP,EAAyB,UAAY,SAClDQ,OAAQV,EACRW,UAAWL,EACXM,WAAW,SAAC,MAAD,IACXC,UA3BqB,WACnBP,IAGJC,GAAqB,GAErBO,EAAAA,EAAAA,OACU,MADV,0BACoCb,EADpC,eACiE,CAC7Dc,YAAab,IAEdc,MAAK,WACJT,GAAqB,GACrBR,GAA+B,MAEhCkB,OAAM,SAACC,GACNX,GAAqB,GACrBJ,GAASgB,EAAAA,EAAAA,IAAqBD,SAYhCE,mBAAoB,CAClBC,MAAO,UACPC,QAAS,aAEXC,QAAS,WACPxB,GAA+B,IAEjCyB,qBACE,UAAC,IAAD,CAAmBC,GAAG,2BAAtB,qCAC2B,KACzB,4BAASvB,EAAyB,UAAY,WAAmB,IAFnE,8BAIGA,IACC,UAAC,EAAAwB,SAAD,YACE,mBACA,mBACA","sources":["screens/Console/Buckets/BucketDetails/EnableVersioningModal.tsx"],"sourcesContent":["// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport api from \"../../../../common/api\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../icons\";\n\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IVersioningEventProps {\n  closeVersioningModalAndRefresh: (refresh: boolean) => void;\n  modalOpen: boolean;\n  selectedBucket: string;\n  versioningCurrentState: boolean;\n}\n\nconst EnableVersioningModal = ({\n  closeVersioningModalAndRefresh,\n  modalOpen,\n  selectedBucket,\n  versioningCurrentState,\n}: IVersioningEventProps) => {\n  const dispatch = useAppDispatch();\n  const [versioningLoading, setVersioningLoading] = useState<boolean>(false);\n\n  const enableVersioning = () => {\n    if (versioningLoading) {\n      return;\n    }\n    setVersioningLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/versioning`, {\n        versioning: !versioningCurrentState,\n      })\n      .then(() => {\n        setVersioningLoading(false);\n        closeVersioningModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setVersioningLoading(false);\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Versioning on Bucket`}\n      confirmText={versioningCurrentState ? \"Disable\" : \"Enable\"}\n      isOpen={modalOpen}\n      isLoading={versioningLoading}\n      titleIcon={<ConfirmModalIcon />}\n      onConfirm={enableVersioning}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      onClose={() => {\n        closeVersioningModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to{\" \"}\n          <strong>{versioningCurrentState ? \"disable\" : \"enable\"}</strong>{\" \"}\n          versioning for this bucket?\n          {versioningCurrentState && (\n            <Fragment>\n              <br />\n              <br />\n              <strong>File versions won't be automatically deleted.</strong>\n            </Fragment>\n          )}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default EnableVersioningModal;\n"],"names":["closeVersioningModalAndRefresh","modalOpen","selectedBucket","versioningCurrentState","dispatch","useAppDispatch","useState","versioningLoading","setVersioningLoading","title","confirmText","isOpen","isLoading","titleIcon","onConfirm","api","versioning","then","catch","err","setErrorSnackMessage","confirmButtonProps","color","variant","onClose","confirmationContent","id","Fragment"],"sourceRoot":""}