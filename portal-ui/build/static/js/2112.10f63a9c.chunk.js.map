{"version":3,"file":"static/js/2112.10f63a9c.chunk.js","mappings":"8OAkGA,UA/DkB,SAAC,GAIA,IAHjBA,EAGgB,EAHhBA,WACAC,EAEgB,EAFhBA,YACAC,EACgB,EADhBA,2BAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAOA,GAAyCC,EAAAA,EAAAA,IALpB,kBAAMN,GAA2B,MACnC,SAACO,GAAD,OACjBN,GAASO,EAAAA,EAAAA,IAAqBD,OAGhC,eAAOE,EAAP,KAAsBC,EAAtB,KAkBA,OACE,SAAC,IAAD,CACEC,MAAK,aACLC,YAAa,SACbC,OAAQf,EACRgB,WAAW,SAAC,MAAD,IACXC,UAAWN,EACXO,UAvBoB,WAClBZ,IAAcL,EAAYkB,KAS9BP,EACE,SADa,6BAESX,EAAYmB,UAFrB,oBAE0CnB,EAAYoB,OAFtD,gBAEoEpB,EAAYkB,OAV7FhB,GACEO,EAAAA,EAAAA,IAAqB,CACnBY,aAAc,wBACdC,cAAe,OAmBnBC,QA5BY,kBAAMtB,GAA2B,IA6B7CuB,mBAAoB,CAClBC,SAAUpB,IAAcL,EAAYkB,MAAQR,GAE9CgB,qBACE,UAAC,IAAD,uCAC0B,uBAAI1B,EAAYkB,OAD1C,gBAEE,SAAC,KAAD,CAAMS,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,GAAG,aACHX,KAAK,aACLY,SAAU,SAACC,GACTzB,EAAayB,EAAMC,OAAOC,QAE5BC,MAAM,GACND,MAAO5B","sources":["screens/Console/Tenants/TenantDetails/DeletePVC.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { DialogContentText } from \"@mui/material\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport useApi from \"../../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\nimport { IStoragePVCs } from \"../../Storage/types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\n\ninterface IDeletePVC {\n  deleteOpen: boolean;\n  selectedPVC: IStoragePVCs;\n  closeDeleteModalAndRefresh: (refreshList: boolean) => any;\n}\n\nconst DeletePVC = ({\n  deleteOpen,\n  selectedPVC,\n  closeDeleteModalAndRefresh,\n}: IDeletePVC) => {\n  const dispatch = useAppDispatch();\n  const [retypePVC, setRetypePVC] = useState(\"\");\n\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  const onConfirmDelete = () => {\n    if (retypePVC !== selectedPVC.name) {\n      dispatch(\n        setErrorSnackMessage({\n          errorMessage: \"PVC name is incorrect\",\n          detailedError: \"\",\n        })\n      );\n      return;\n    }\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/namespaces/${selectedPVC.namespace}/tenants/${selectedPVC.tenant}/pvc/${selectedPVC.name}`\n    );\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete PVC`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypePVC !== selectedPVC.name || deleteLoading,\n      }}\n      confirmationContent={\n        <DialogContentText>\n          To continue please type <b>{selectedPVC.name}</b> in the box.\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"retype-PVC\"\n              name=\"retype-PVC\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypePVC(event.target.value);\n              }}\n              label=\"\"\n              value={retypePVC}\n            />\n          </Grid>\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nexport default DeletePVC;\n"],"names":["deleteOpen","selectedPVC","closeDeleteModalAndRefresh","dispatch","useAppDispatch","useState","retypePVC","setRetypePVC","useApi","err","setErrorSnackMessage","deleteLoading","invokeDeleteApi","title","confirmText","isOpen","titleIcon","isLoading","onConfirm","name","namespace","tenant","errorMessage","detailedError","onClose","confirmButtonProps","disabled","confirmationContent","item","xs","id","onChange","event","target","value","label"],"sourceRoot":""}