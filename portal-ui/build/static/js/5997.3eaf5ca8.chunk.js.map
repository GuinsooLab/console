{"version":3,"file":"static/js/5997.3eaf5ca8.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPActiveDirectory.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPOpenID.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider/IDPBuiltIn.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Common/SectionH1.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/VaultKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AzureKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GCPKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/GemaltoKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption/AWSKMSAdd.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NamespaceSelector.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/NameTenantMain.tsx","screens/Console/Tenants/AddTenant/Steps/TenantResources/TenantResources.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigLogSearch.tsx","screens/Console/Tenants/AddTenant/Steps/ConfigPrometheus.tsx","screens/Console/Tenants/AddTenant/common.ts","screens/Console/Tenants/AddTenant/CreateTenantButton.tsx","screens/Console/Tenants/AddTenant/NewTenantCredentials.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx","screens/shared/ErrorBlock.tsx"],"sourcesContent":["// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\nimport { fieldBasic } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontSize: \".8rem\",\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon, ServiceAccountCredentialsIcon } from \"../../../../icons\";\n\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n        height: 16,\n        width: 16,\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + text);\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div>New {entity} Created</div>\n        </div>\n      }\n      titleIcon={<ServiceAccountCredentialsIcon />}\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {(consoleCreds === null || consoleCreds === undefined) && (\n            <>\n              <CredentialItem\n                label=\"Access Key\"\n                value={newServiceAccount.accessKey || \"\"}\n              />\n              <CredentialItem\n                label=\"Secret Key\"\n                value={newServiceAccount.secretKey || \"\"}\n              />\n            </>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          {!idp && (\n            <>\n              <RBIconButton\n                id={\"download-button\"}\n                tooltip={\n                  \"Download credentials in a JSON file formatted for import using mc alias import. This will only include the default login credentials.\"\n                }\n                text={\"Download for import\"}\n                className={classes.buttonSpacer}\n                onClick={() => {\n                  let consoleExtras = {};\n\n                  if (consoleCreds) {\n                    if (!Array.isArray(consoleCreds)) {\n                      consoleExtras = {\n                        url: consoleCreds.url,\n                        accessKey: consoleCreds.accessKey,\n                        secretKey: consoleCreds.secretKey,\n                        api: \"s3v4\",\n                        path: \"auto\",\n                      };\n                    } else {\n                      const cCreds = consoleCreds.map((itemMap) => {\n                        return {\n                          url: itemMap.url,\n                          accessKey: itemMap.accessKey,\n                          secretKey: itemMap.secretKey,\n                          api: \"s3v4\",\n                          path: \"auto\",\n                        };\n                      });\n                      consoleExtras = cCreds[0];\n                    }\n                  } else {\n                    consoleExtras = {\n                      url: newServiceAccount.url,\n                      accessKey: newServiceAccount.accessKey,\n                      secretKey: newServiceAccount.secretKey,\n                      api: \"s3v4\",\n                      path: \"auto\",\n                    };\n                  }\n\n                  download(\n                    \"credentials.json\",\n                    JSON.stringify({\n                      ...consoleExtras,\n                    })\n                  );\n                }}\n                icon={<DownloadIcon />}\n                variant=\"contained\"\n                color=\"primary\"\n              />\n\n              {Array.isArray(consoleCreds) && consoleCreds.length > 1 && (\n                <RBIconButton\n                  id={\"download-all-button\"}\n                  tooltip={\n                    \"Download all access credentials to a JSON file. NOTE: This file is not formatted for import using mc alias import. If you plan to import this alias from the file, please use the Download for Import button. \"\n                  }\n                  text={\"Download all access credentials\"}\n                  className={classes.buttonSpacer}\n                  onClick={() => {\n                    let allCredentials = {};\n                    if (consoleCreds) {\n                      const cCreds = consoleCreds.map((itemMap) => {\n                        return {\n                          accessKey: itemMap.accessKey,\n                          secretKey: itemMap.secretKey,\n                        };\n                      });\n                      allCredentials = cCreds;\n                    }\n                    download(\n                      \"all_credentials.json\",\n                      JSON.stringify({\n                        ...allCredentials,\n                      })\n                    );\n                  }}\n                  icon={<DownloadIcon />}\n                  variant=\"contained\"\n                  color=\"primary\"\n                />\n              )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  fileInputStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    ...fileInputStyles,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n    textBoxContainer: {\n      ...fieldBasic.textBoxContainer,\n      maxWidth: \"100%\",\n      border: \"1px solid #eaeaea\",\n      paddingLeft: \"15px\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fileInputField} ${classes.fieldBottom} ${\n          classes.fieldContainer\n        } ${error !== \"\" ? classes.errorInField : \"\"}`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"small\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"small\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  noContentPadding?: boolean;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  noContentPadding,\n  titleIcon = null,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ModalWrapper);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport {\n  addNewMinIODomain,\n  isPageValid,\n  removeMinIODomain,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n      marginBottom: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    tenantCustomizationFields: {\n      marginLeft: 30, // 2nd Level(15+15)\n      width: \"88%\",\n      margin: \"auto\",\n    },\n    containerItem: {\n      marginRight: 15,\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    wrapperContainer: {\n      display: \"flex\",\n      marginBottom: 15,\n    },\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        width: 15,\n        height: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Configure = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const exposeMinIO = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeMinIO\n  );\n  const exposeConsole = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.exposeConsole\n  );\n  const setDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.setDomains\n  );\n  const consoleDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.consoleDomain\n  );\n  const minioDomains = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.minioDomains\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (setDomains) {\n      const minioExtraValidations = minioDomains.map((validation, index) => {\n        return {\n          fieldKey: `minio-domain-${index.toString()}`,\n          required: false,\n          value: validation,\n          pattern:\n            /((http|https):\\/\\/)+[a-zA-Z0-9\\-.]{3,}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?$/,\n          customPatternMessage:\n            \"MinIO domain is not in the form of http|https://subdomain.domain\",\n        };\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        ...minioExtraValidations,\n        {\n          fieldKey: \"console_domain\",\n          required: false,\n          value: consoleDomain,\n          pattern:\n            /((http|https):\\/\\/)+[a-zA-Z0-9\\-.]{3,}\\.[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})?(:[1-9]{1}([0-9]{1,4})?)?(\\/[a-zA-Z0-9]{1,})*?$/,\n          customPatternMessage:\n            \"Console domain is not in the form of http|https://subdomain.domain:port/subpath1/subpath2\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    dispatch,\n    tenantCustom,\n    tenantSecurityContext,\n    setDomains,\n    consoleDomain,\n    minioDomains,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const updateMinIODomain = (value: string, index: number) => {\n    const copyDomains = [...minioDomains];\n    copyDomains[index] = value;\n\n    updateField(\"minioDomains\", copyDomains);\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Services</h3>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP via\n          LoadBalancer service type.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MinIO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"custom_domains\"\n          id=\"custom_domains\"\n          name=\"custom_domains\"\n          checked={setDomains}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"setDomains\", checked);\n          }}\n          label={\"Set Custom Domains\"}\n        />\n      </Grid>\n      {setDomains && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              Custom Domains for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div className={classes.containerItem}>\n                <InputBoxWrapper\n                  id=\"console_domain\"\n                  name=\"console_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"consoleDomain\", e.target.value);\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Console Domain\"\n                  value={consoleDomain}\n                  placeholder={\n                    \"Eg. http://subdomain.domain:port/subpath1/subpath2\"\n                  }\n                  error={validationErrors[\"console_domain\"] || \"\"}\n                />\n              </div>\n              <div>\n                <h4>MinIO Domains</h4>\n                <div className={`${classes.responsiveSectionItem}`}>\n                  {minioDomains.map((domain, index) => {\n                    return (\n                      <div\n                        className={`${classes.containerItem} ${classes.wrapperContainer}`}\n                        key={`minio-domain-key-${index.toString()}`}\n                      >\n                        <InputBoxWrapper\n                          id={`minio-domain-${index.toString()}`}\n                          name={`minio-domain-${index.toString()}`}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            updateMinIODomain(e.target.value, index);\n                          }}\n                          label={`MinIO Domain ${index + 1}`}\n                          value={domain}\n                          placeholder={\"Eg. http://subdomain.domain\"}\n                          error={\n                            validationErrors[\n                              `minio-domain-${index.toString()}`\n                            ] || \"\"\n                          }\n                        />\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(addNewMinIODomain())}\n                            disabled={index !== minioDomains.length - 1}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => dispatch(removeMinIODomain(index))}\n                            disabled={minioDomains.length <= 1}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n\n      <Grid item xs={12} className={classes.configSectionItem}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Security Context\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Grid item xs={12} className={classes.tenantCustomizationFields}>\n          <fieldset className={classes.fieldGroup}>\n            <legend className={classes.descriptionText}>\n              SecurityContext for MinIO\n            </legend>\n            <Grid item xs={12} className={`${classes.configSectionItem}`}>\n              <div\n                className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n              >\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsUser\"\n                    name=\"tenant_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={tenantSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_runAsGroup\"\n                    name=\"tenant_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={tenantSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div className={classes.containerItem}>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"tenant_securityContext_fsGroup\"\n                    name=\"tenant_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"tenantSecurityContext\", {\n                        ...tenantSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"tenant_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={tenantSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12} className={classes.configSectionItem}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"tenantSecurityContextRunAsNonRoot\"\n                  id=\"tenant_securityContext_runAsNonRoot\"\n                  name=\"tenant_securityContext_runAsNonRoot\"\n                  checked={tenantSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </fieldset>\n        </Grid>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Configure);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid, IconButton, Tooltip, Typography } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport FormSwitchWrapper from \"../../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  addIDPADUsrAtIndex,\n  isPageValid,\n  removeIDPADUsrAtIndex,\n  setIDPADUsrAtIndex,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { clearValidationError } from \"../../../utils\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    adUserDnRows: {\n      display: \"flex\",\n    },\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPActiveDirectory = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const ADURL = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADURL\n  );\n  const ADSkipTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADSkipTLS\n  );\n  const ADServerInsecure = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerInsecure\n  );\n  const ADGroupSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchBaseDN\n  );\n  const ADGroupSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADGroupSearchFilter\n  );\n  const ADUserDNs = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.ADUserDNs\n  );\n  const ADLookupBindDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindDN\n  );\n  const ADLookupBindPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADLookupBindPassword\n  );\n  const ADUserDNSearchBaseDN = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchBaseDN\n  );\n  const ADUserDNSearchFilter = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADUserDNSearchFilter\n  );\n  const ADServerStartTLS = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.ADServerStartTLS\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n        {\n          fieldKey: \"ad_lookupBindDN\",\n          required: true,\n          value: ADLookupBindDN,\n        },\n      ];\n      // validate user DNs\n      for (let i = 0; i < ADUserDNs.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `ad-userdn-${i.toString()}`,\n          required: true,\n          value: ADUserDNs[i],\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    ADLookupBindDN,\n    idpSelection,\n    ADURL,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADUserDNs,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"AD_URL\"\n          name=\"AD_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADURL\", e.target.value);\n            cleanValidation(\"AD_URL\");\n          }}\n          label=\"LDAP Server Address\"\n          value={ADURL}\n          placeholder=\"ldap-server:636\"\n          error={validationErrors[\"AD_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_skipTLS\"\n          id=\"ad_skipTLS\"\n          name=\"ad_skipTLS\"\n          checked={ADSkipTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADSkipTLS\", checked);\n          }}\n          label={\"Skip TLS Verification\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverInsecure\"\n          id=\"ad_serverInsecure\"\n          name=\"ad_serverInsecure\"\n          checked={ADServerInsecure}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerInsecure\", checked);\n          }}\n          label={\"Server Insecure\"}\n        />\n      </Grid>\n      {ADServerInsecure ? (\n        <Grid item xs={12}>\n          <Typography\n            className={classes.error}\n            variant=\"caption\"\n            display=\"block\"\n            gutterBottom\n          >\n            Warning: All traffic with Active Directory will be unencrypted\n          </Typography>\n          <br />\n        </Grid>\n      ) : null}\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <FormSwitchWrapper\n          value=\"ad_serverStartTLS\"\n          id=\"ad_serverStartTLS\"\n          name=\"ad_serverStartTLS\"\n          checked={ADServerStartTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n            updateField(\"ADServerStartTLS\", checked);\n          }}\n          label={\"Start TLS connection to AD/LDAP server\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindDN\"\n          name=\"ad_lookupBindDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindDN\", e.target.value);\n            cleanValidation(\"ad_lookupBindDN\");\n          }}\n          label=\"Lookup Bind DN\"\n          value={ADLookupBindDN}\n          placeholder=\"cn=admin,dc=min,dc=io\"\n          error={validationErrors[\"ad_lookupBindDN\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_lookupBindPassword\"\n          name=\"ad_lookupBindPassword\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADLookupBindPassword\", e.target.value);\n          }}\n          label=\"Lookup Bind Password\"\n          value={ADLookupBindPassword}\n          placeholder=\"admin\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchBaseDN\"\n          name=\"ad_userDNSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n          }}\n          label=\"User DN Search Base DN\"\n          value={ADUserDNSearchBaseDN}\n          placeholder=\"dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_userDNSearchFilter\"\n          name=\"ad_userDNSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADUserDNSearchFilter\", e.target.value);\n          }}\n          label=\"User DN Search Filter\"\n          value={ADUserDNSearchFilter}\n          placeholder=\"(sAMAcountName=%s)\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchBaseDN\"\n          name=\"ad_groupSearchBaseDN\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchBaseDN\", e.target.value);\n          }}\n          label=\"Group Search Base DN\"\n          value={ADGroupSearchBaseDN}\n          placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"ad_groupSearchFilter\"\n          name=\"ad_groupSearchFilter\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"ADGroupSearchFilter\", e.target.value);\n          }}\n          label=\"Group Search Filter\"\n          value={ADGroupSearchFilter}\n          placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n        />\n      </Grid>\n      <fieldset className={classes.fieldGroup}>\n        <legend className={classes.descriptionText}>\n          List of user DNs (Distinguished Names) to be Tenant Administrators\n        </legend>\n        <Grid item xs={12}>\n          {ADUserDNs.map((_, index) => {\n            return (\n              <Fragment key={`identityField-${index.toString()}`}>\n                <div className={classes.adUserDnRows}>\n                  <InputBoxWrapper\n                    id={`ad-userdn-${index.toString()}`}\n                    label={\"\"}\n                    placeholder=\"\"\n                    name={`ad-userdn-${index.toString()}`}\n                    value={ADUserDNs[index]}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      dispatch(\n                        setIDPADUsrAtIndex({\n                          index: index,\n                          userDN: e.target.value,\n                        })\n                      );\n                      cleanValidation(`ad-userdn-${index.toString()}`);\n                    }}\n                    index={index}\n                    key={`csv-ad-userdn-${index.toString()}`}\n                    error={\n                      validationErrors[`ad-userdn-${index.toString()}`] || \"\"\n                    }\n                  />\n                  <div className={classes.buttonTray}>\n                    <Tooltip title=\"Add User\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addIDPADUsrAtIndex());\n                        }}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Remove\" aria-label=\"add\">\n                      <IconButton\n                        size={\"small\"}\n                        style={{ marginLeft: 16 }}\n                        onClick={() => {\n                          if (ADUserDNs.length > 1) {\n                            dispatch(removeIDPADUsrAtIndex(index));\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                </div>\n              </Fragment>\n            );\n          })}\n        </Grid>\n      </fieldset>\n    </Fragment>\n  );\n};\n\nexport default IDPActiveDirectory;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Grid } from \"@mui/material\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPOpenID = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const openIDConfigurationURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDConfigurationURL\n  );\n  const openIDClientID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClientID\n  );\n  const openIDSecretID = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDSecretID\n  );\n  const openIDCallbackURL = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDCallbackURL\n  );\n  const openIDClaimName = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.identityProvider.openIDClaimName\n  );\n  const openIDScopes = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.openIDScopes\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"identityProvider\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    openIDClientID,\n    openIDSecretID,\n    openIDConfigurationURL,\n    openIDClaimName,\n    dispatch,\n  ]);\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_CONFIGURATION_URL\"\n          name=\"openID_CONFIGURATION_URL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDConfigurationURL\", e.target.value);\n            cleanValidation(\"openID_CONFIGURATION_URL\");\n          }}\n          label=\"Configuration URL\"\n          value={openIDConfigurationURL}\n          placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n          error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_clientID\"\n          name=\"openID_clientID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClientID\", e.target.value);\n            cleanValidation(\"openID_clientID\");\n          }}\n          label=\"Client ID\"\n          value={openIDClientID}\n          error={validationErrors[\"openID_clientID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_secretID\"\n          name=\"openID_secretID\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDSecretID\", e.target.value);\n            cleanValidation(\"openID_secretID\");\n          }}\n          label=\"Secret ID\"\n          value={openIDSecretID}\n          error={validationErrors[\"openID_secretID\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_callbackURL\"\n          name=\"openID_callbackURL\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDCallbackURL\", e.target.value);\n            cleanValidation(\"openID_callbackURL\");\n          }}\n          label=\"Callback URL\"\n          value={openIDCallbackURL}\n          placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n          error={validationErrors[\"openID_callbackURL\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_claimName\"\n          name=\"openID_claimName\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDClaimName\", e.target.value);\n            cleanValidation(\"openID_claimName\");\n          }}\n          label=\"Claim Name\"\n          value={openIDClaimName}\n          error={validationErrors[\"openID_claimName\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"openID_scopes\"\n          name=\"openID_scopes\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"openIDScopes\", e.target.value);\n            cleanValidation(\"openID_scopes\");\n          }}\n          label=\"Scopes\"\n          value={openIDScopes}\n        />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default IDPOpenID;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  addIDPNewKeyPair,\n  isPageValid,\n  removeIDPKeyPairAtIndex,\n  setIDPPwdAtIndex,\n  setIDPUsrAtIndex,\n} from \"../../createTenantSlice\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"../../../../../../icons/RemoveIcon\";\nimport { clearValidationError, getRandomString } from \"../../../utils\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonTray: {\n      marginLeft: 10,\n      display: \"flex\",\n      height: 38,\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 15,\n      marginBottom: 10,\n      \"& input\": {\n        fontWeight: 400,\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IDPBuiltIn = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n  const accessKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.accessKeys\n  );\n  const secretKeys = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.secretKeys\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"identityProvider\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [idpSelection, accessKeys, secretKeys, dispatch]);\n\n  return (\n    <Fragment>\n      Add additional users\n      {accessKeys.map((_, index) => {\n        return (\n          <Fragment key={`identityField-${index.toString()}`}>\n            <div className={classes.shortened}>\n              <InputBoxWrapper\n                id={`accesskey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Access Key\"}\n                name={`accesskey-${index.toString()}`}\n                value={accessKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPUsrAtIndex({\n                      index,\n                      accessKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`accesskey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-accesskey-${index.toString()}`}\n                error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n              />\n              <InputBoxWrapper\n                id={`secretkey-${index.toString()}`}\n                label={\"\"}\n                placeholder={\"Secret Key\"}\n                name={`secretkey-${index.toString()}`}\n                value={secretKeys[index]}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  dispatch(\n                    setIDPPwdAtIndex({\n                      index,\n                      secretKey: e.target.value,\n                    })\n                  );\n                  cleanValidation(`secretkey-${index.toString()}`);\n                }}\n                index={index}\n                key={`csv-secretkey-${index.toString()}`}\n                error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n              />\n              <div className={classes.buttonTray}>\n                <Tooltip title=\"Add User\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      size={\"small\"}\n                      onClick={() => {\n                        dispatch(addIDPNewKeyPair());\n                      }}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n                <Tooltip title=\"Remove\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      size={\"small\"}\n                      onClick={() => {\n                        dispatch(removeIDPKeyPairAtIndex(index));\n                      }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n                <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                  <div className={classes.overlayAction}>\n                    <IconButton\n                      onClick={() => {\n                        dispatch(\n                          setIDPUsrAtIndex({\n                            index,\n                            accessKey: getRandomString(16),\n                          })\n                        );\n                        dispatch(\n                          setIDPPwdAtIndex({\n                            index,\n                            secretKey: getRandomString(16),\n                          })\n                        );\n                      }}\n                      size={\"small\"}\n                    >\n                      <CasinoIcon />\n                    </IconButton>\n                  </div>\n                </Tooltip>\n              </div>\n            </div>\n          </Fragment>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default IDPBuiltIn;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { setIDP } from \"../createTenantSlice\";\nimport IDPActiveDirectory from \"./IdentityProvider/IDPActiveDirectory\";\nimport IDPOpenID from \"./IdentityProvider/IDPOpenID\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport IDPBuiltIn from \"./IdentityProvider/IDPBuiltIn\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    protocolRadioOptions: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      marginBottom: 10,\n\n      \"& label\": {\n        fontSize: 14,\n      },\n      \"& div\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n      },\n    },\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst IdentityProvider = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const idpSelection = useSelector(\n    (state: AppState) => state.createTenant.fields.identityProvider.idpSelection\n  );\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.protocolRadioOptions}>\n        <label>Protocol</label>\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\" \"\n          onChange={(e) => {\n            dispatch(setIDP(e.target.value));\n          }}\n          selectorOptions={[\n            { label: \"Built-in\", value: \"Built-in\" },\n            { label: \"OpenID\", value: \"OpenID\" },\n            { label: \"Active Directory\", value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && <IDPBuiltIn />}\n      {idpSelection === \"OpenID\" && <IDPOpenID />}\n      {idpSelection === \"AD\" && <IDPActiveDirectory />}\n    </Paper>\n  );\n};\n\nexport default IdentityProvider;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SectionTitle from \"../../../Common/SectionTitle\";\nimport {\n  addCaCertificate,\n  addFileToCaCertificates,\n  addFileToKeyPair,\n  addKeyPair,\n  deleteCaCertificate,\n  deleteKeyPair,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface ISecurityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    minioCertificateRows: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    fileItem: {\n      marginRight: 10,\n      display: \"flex\",\n      \"& div label\": {\n        minWidth: 50,\n      },\n\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    minioCertsContainer: {\n      marginBottom: 15,\n    },\n    minioCACertsRow: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n\n        \"& div label\": {\n          minWidth: 50,\n        },\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      \"@media (max-width: 900px)\": {\n        flex: 1,\n      },\n    },\n    overlayAction: {\n      marginLeft: 10,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n\n    ...createTenantCommon,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({ classes }: ISecurityProps) => {\n  const dispatch = useAppDispatch();\n\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCertificates\n  );\n  const caCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.caCertificates\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"security\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableAutoCert) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    if (enableCustomCerts) {\n      dispatch(isPageValid({ pageName: \"security\", valid: true }));\n      return;\n    }\n    dispatch(isPageValid({ pageName: \"security\", valid: false }));\n  }, [enableTLS, enableAutoCert, enableCustomCerts, dispatch]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <FormSwitchWrapper\n            value=\"enableTLS\"\n            id=\"enableTLS\"\n            name=\"enableTLS\"\n            checked={enableTLS}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableTLS\", checked);\n            }}\n            label={\"TLS\"}\n            description={\n              \"Securing all the traffic using TLS. This is required for Encryption Configuration\"\n            }\n          />\n        </Grid>\n        {enableTLS && (\n          <Fragment>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableAutoCert\"\n                id=\"enableAutoCert\"\n                name=\"enableAutoCert\"\n                checked={enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableAutoCert\", checked);\n                }}\n                label={\"AutoCert\"}\n                description={\n                  \"The internode certificates will be generated and managed by MinIO Operator\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCerts\"\n                id=\"enableCustomCerts\"\n                name=\"enableCustomCerts\"\n                checked={enableCustomCerts}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"enableCustomCerts\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                description={\"Certificates used to terminated TLS at MinIO\"}\n              />\n            </Grid>\n            {enableCustomCerts && (\n              <Fragment>\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <SectionTitle>MinIO Certificates</SectionTitle>\n                  {minioCertificates.map((keyPair: KeyPair) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-certs-${keyPair.id}`}\n                      className={classes.minioCertificateRows}\n                    >\n                      <Grid item xs={10} className={classes.fileItem}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToKeyPair({\n                                id: keyPair.id,\n                                key: \"key\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".key,.pem\"\n                          id=\"tlsKey\"\n                          name=\"tlsKey\"\n                          label=\"Key\"\n                          value={keyPair.key}\n                        />\n                      </Grid>\n\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(addKeyPair());\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              dispatch(deleteKeyPair(keyPair.id));\n                            }}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n\n                <Grid item xs={12} className={classes.minioCertsContainer}>\n                  <SectionTitle>MinIO CA Certificates</SectionTitle>\n\n                  {caCertificates.map((keyPair: KeyPair) => (\n                    <Grid\n                      item\n                      xs={12}\n                      key={`minio-CA-certs-${keyPair.id}`}\n                      className={classes.minioCACertsRow}\n                    >\n                      <Grid item xs={6}>\n                        <FileSelector\n                          onChange={(encodedValue, fileName) => {\n                            dispatch(\n                              addFileToCaCertificates({\n                                id: keyPair.id,\n                                key: \"cert\",\n                                fileName: fileName,\n                                value: encodedValue,\n                              })\n                            );\n                          }}\n                          accept=\".cer,.crt,.cert,.pem\"\n                          id=\"tlsCert\"\n                          name=\"tlsCert\"\n                          label=\"Cert\"\n                          value={keyPair.cert}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <div className={classes.rowActions}>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(addCaCertificate());\n                              }}\n                            >\n                              <AddIcon />\n                            </IconButton>\n                          </div>\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                dispatch(deleteCaCertificate(keyPair.id));\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Security);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\n\ntype Props = {\n  children: string;\n};\n\nconst SectionH1: React.FC<Props> = ({ children }) => {\n  return (\n    <h1 style={{ margin: 0, marginBottom: \".8rem\", fontSize: \"1.3rem\" }}>\n      {children}\n    </h1>\n  );\n};\n\nexport default SectionH1;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  addFileVaultCa,\n  addFileVaultCert,\n  isPageValid,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst VaultKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const vaultEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEndpoint\n  );\n  const vaultEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultEngine\n  );\n  const vaultNamespace = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultNamespace\n  );\n  const vaultPrefix = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPrefix\n  );\n  const vaultAppRoleEngine = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultAppRoleEngine\n  );\n  const vaultId = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultId\n  );\n  const vaultSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultSecret\n  );\n  const vaultRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultRetry\n  );\n  const vaultPing = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.vaultPing\n  );\n  const vaultCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.vaultCertificate\n  );\n  const vaultCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.vaultCA\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"vault_endpoint\",\n        required: true,\n        value: vaultEndpoint,\n      },\n      {\n        fieldKey: \"vault_id\",\n        required: true,\n        value: vaultId,\n      },\n      {\n        fieldKey: \"vault_secret\",\n        required: true,\n        value: vaultSecret,\n      },\n      {\n        fieldKey: \"vault_ping\",\n        required: false,\n        value: vaultPing,\n        customValidation: parseInt(vaultPing) < 0,\n        customValidationMessage: \"Value needs to be 0 or greater\",\n      },\n      {\n        fieldKey: \"vault_retry\",\n        required: false,\n        value: vaultRetry,\n        customValidation: parseInt(vaultRetry) < 0,\n        customValidationMessage: \"Value needs to be 0 or greater\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_endpoint\"\n          name=\"vault_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEndpoint\", e.target.value);\n            cleanValidation(\"vault_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={vaultEndpoint}\n          error={validationErrors[\"vault_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_engine\"\n          name=\"vault_engine\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultEngine\", e.target.value);\n            cleanValidation(\"vault_engine\");\n          }}\n          label=\"Engine\"\n          value={vaultEngine}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_namespace\"\n          name=\"vault_namespace\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultNamespace\", e.target.value);\n          }}\n          label=\"Namespace\"\n          value={vaultNamespace}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"vault_prefix\"\n          name=\"vault_prefix\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"vaultPrefix\", e.target.value);\n          }}\n          label=\"Prefix\"\n          value={vaultPrefix}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>App Role</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_approle_engine\"\n              name=\"vault_approle_engine\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultAppRoleEngine\", e.target.value);\n              }}\n              label=\"Engine\"\n              value={vaultAppRoleEngine}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_id\"\n              name=\"vault_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultId\", e.target.value);\n                cleanValidation(\"vault_id\");\n              }}\n              label=\"AppRole ID\"\n              value={vaultId}\n              error={validationErrors[\"vault_id\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"vault_secret\"\n              name=\"vault_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultSecret\", e.target.value);\n                cleanValidation(\"vault_secret\");\n              }}\n              label=\"AppRole Secret\"\n              value={vaultSecret}\n              error={validationErrors[\"vault_secret\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"vault_retry\"\n              name=\"vault_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"vaultRetry\", e.target.value);\n                cleanValidation(\"vault_retry\");\n              }}\n              label=\"Retry (Seconds)\"\n              value={vaultRetry}\n              error={validationErrors[\"vault_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n\n      <Grid container className={classes.mutualTlsConfig}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>\n            Mutual TLS authentication (optional)\n          </legend>\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCert({\n                  key: \"key\",\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_key\");\n            }}\n            accept=\".key,.pem\"\n            id=\"vault_key\"\n            name=\"vault_key\"\n            label=\"Key\"\n            value={vaultCertificate.key}\n          />\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCert({\n                  key: \"cert\",\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_cert\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"vault_cert\"\n            name=\"vault_cert\"\n            label=\"Cert\"\n            value={vaultCertificate.cert}\n          />\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileVaultCa({\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"vault_ca\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"vault_ca\"\n            name=\"vault_ca\"\n            label=\"CA\"\n            value={vaultCA.cert}\n          />\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        className={classes.formFieldRow}\n        style={{ marginTop: 15 }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Status</legend>\n          <InputBoxWrapper\n            type=\"number\"\n            min=\"0\"\n            id=\"vault_ping\"\n            name=\"vault_ping\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"vaultPing\", e.target.value);\n              cleanValidation(\"vault_ping\");\n            }}\n            label=\"Ping (Seconds)\"\n            value={vaultPing}\n            error={validationErrors[\"vault_ping\"] || \"\"}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default VaultKMSAdd;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AzureKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const azureEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureEndpoint\n  );\n  const azureTenantID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureTenantID\n  );\n  const azureClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientID\n  );\n  const azureClientSecret = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.azureClientSecret\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"azure_endpoint\",\n        required: true,\n        value: azureEndpoint,\n      },\n      {\n        fieldKey: \"azure_tenant_id\",\n        required: true,\n        value: azureTenantID,\n      },\n      {\n        fieldKey: \"azure_client_id\",\n        required: true,\n        value: azureClientID,\n      },\n      {\n        fieldKey: \"azure_client_secret\",\n        required: true,\n        value: azureClientSecret,\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    dispatch,\n  ]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"azure_endpoint\"\n          name=\"azure_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"azureEndpoint\", e.target.value);\n            cleanValidation(\"azure_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={azureEndpoint}\n          error={validationErrors[\"azure_endpoint\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_tenant_id\"\n              name=\"azure_tenant_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureTenantID\", e.target.value);\n                cleanValidation(\"azure_tenant_id\");\n              }}\n              label=\"Tenant ID\"\n              value={azureTenantID}\n              error={validationErrors[\"azure_tenant_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_id\"\n              name=\"azure_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientID\", e.target.value);\n                cleanValidation(\"azure_client_id\");\n              }}\n              label=\"Client ID\"\n              value={azureClientID}\n              error={validationErrors[\"azure_client_id\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"azure_client_secret\"\n              name=\"azure_client_secret\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"azureClientSecret\", e.target.value);\n                cleanValidation(\"azure_client_secret\");\n              }}\n              label=\"Client Secret\"\n              value={azureClientSecret}\n              error={validationErrors[\"azure_client_secret\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AzureKMSAdd;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { updateAddField } from \"../../createTenantSlice\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GCPKMSAdd = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_project_id\"\n          name=\"gcp_project_id\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpProjectID\", e.target.value);\n          }}\n          label=\"Project ID\"\n          value={gcpProjectID}\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gcp_endpoint\"\n          name=\"gcp_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gcpEndpoint\", e.target.value);\n          }}\n          label=\"Endpoint\"\n          value={gcpEndpoint}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_email\"\n              name=\"gcp_client_email\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientEmail\", e.target.value);\n              }}\n              label=\"Client Email\"\n              value={gcpClientEmail}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_client_id\"\n              name=\"gcp_client_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpClientID\", e.target.value);\n              }}\n              label=\"Client ID\"\n              value={gcpClientID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key_id\"\n              name=\"gcp_private_key_id\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKeyID\", e.target.value);\n              }}\n              label=\"Private Key ID\"\n              value={gcpPrivateKeyID}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gcp_private_key\"\n              name=\"gcp_private_key\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gcpPrivateKey\", e.target.value);\n              }}\n              label=\"Private Key\"\n              value={gcpPrivateKey}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GCPKMSAdd;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport FileSelector from \"../../../../Common/FormComponents/FileSelector/FileSelector\";\nimport {\n  addFileGemaltoCa,\n  isPageValid,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst GemaltoKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const gemaltoCA = useSelector(\n    (state: AppState) => state.createTenant.certificates.gemaltoCA\n  );\n  const gemaltoEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoEndpoint\n  );\n  const gemaltoToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoToken\n  );\n  const gemaltoDomain = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoDomain\n  );\n  const gemaltoRetry = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gemaltoRetry\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"gemalto_endpoint\",\n        required: true,\n        value: gemaltoEndpoint,\n      },\n      {\n        fieldKey: \"gemalto_token\",\n        required: true,\n        value: gemaltoToken,\n      },\n      {\n        fieldKey: \"gemalto_domain\",\n        required: true,\n        value: gemaltoDomain,\n      },\n      {\n        fieldKey: \"gemalto_retry\",\n        required: false,\n        value: gemaltoRetry,\n        customValidation: parseInt(gemaltoRetry) < 0,\n        customValidationMessage: \"Value needs to be 0 or greater\",\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [gemaltoEndpoint, gemaltoToken, gemaltoDomain, gemaltoRetry, dispatch]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"gemalto_endpoint\"\n          name=\"gemalto_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"gemaltoEndpoint\", e.target.value);\n            cleanValidation(\"gemalto_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={gemaltoEndpoint}\n          error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_token\"\n              name=\"gemalto_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoToken\", e.target.value);\n                cleanValidation(\"gemalto_token\");\n              }}\n              label=\"Token\"\n              value={gemaltoToken}\n              error={validationErrors[\"gemalto_token\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"gemalto_domain\"\n              name=\"gemalto_domain\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoDomain\", e.target.value);\n                cleanValidation(\"gemalto_domain\");\n              }}\n              label=\"Domain\"\n              value={gemaltoDomain}\n              error={validationErrors[\"gemalto_domain\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              type=\"number\"\n              min=\"0\"\n              id=\"gemalto_retry\"\n              name=\"gemalto_retry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"gemaltoRetry\", e.target.value);\n                cleanValidation(\"gemalto_retry\");\n              }}\n              label=\"Retry (seconds)\"\n              value={gemaltoRetry}\n              error={validationErrors[\"gemalto_retry\"] || \"\"}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        style={{\n          marginBottom: 15,\n        }}\n      >\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>\n            Custom CA Root certificate verification\n          </legend>\n\n          <FileSelector\n            onChange={(encodedValue, fileName) => {\n              dispatch(\n                addFileGemaltoCa({\n                  fileName: fileName,\n                  value: encodedValue,\n                })\n              );\n              cleanValidation(\"gemalto_ca\");\n            }}\n            accept=\".cer,.crt,.cert,.pem\"\n            id=\"gemalto_ca\"\n            name=\"gemalto_ca\"\n            label=\"CA\"\n            value={gemaltoCA.cert}\n          />\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default GemaltoKMSAdd;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../../utils/validationFunctions\";\nimport { isPageValid, updateAddField } from \"../../createTenantSlice\";\nimport { clearValidationError } from \"../../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  })\n);\n\nconst AWSKMSAdd = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const awsEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsEndpoint\n  );\n  const awsRegion = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsRegion\n  );\n  const awsKMSKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsKMSKey\n  );\n  const awsAccessKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsAccessKey\n  );\n  const awsSecretKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsSecretKey\n  );\n  const awsToken = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.awsToken\n  );\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    encryptionValidation = [\n      ...encryptionValidation,\n      {\n        fieldKey: \"aws_endpoint\",\n        required: true,\n        value: awsEndpoint,\n      },\n      {\n        fieldKey: \"aws_region\",\n        required: true,\n        value: awsRegion,\n      },\n      {\n        fieldKey: \"aws_accessKey\",\n        required: true,\n        value: awsAccessKey,\n      },\n      {\n        fieldKey: \"aws_secretKey\",\n        required: true,\n        value: awsSecretKey,\n      },\n    ];\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [awsEndpoint, awsRegion, awsSecretKey, awsAccessKey, dispatch]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Fragment>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_endpoint\"\n          name=\"aws_endpoint\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsEndpoint\", e.target.value);\n            cleanValidation(\"aws_endpoint\");\n          }}\n          label=\"Endpoint\"\n          value={awsEndpoint}\n          error={validationErrors[\"aws_endpoint\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_region\"\n          name=\"aws_region\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsRegion\", e.target.value);\n            cleanValidation(\"aws_region\");\n          }}\n          label=\"Region\"\n          value={awsRegion}\n          error={validationErrors[\"aws_region\"] || \"\"}\n          required\n        />\n      </Grid>\n      <Grid item xs={12} className={classes.formFieldRow}>\n        <InputBoxWrapper\n          id=\"aws_kmsKey\"\n          name=\"aws_kmsKey\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"awsKMSKey\", e.target.value);\n          }}\n          label=\"KMS Key\"\n          value={awsKMSKey}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <fieldset className={classes.fieldGroup}>\n          <legend className={classes.descriptionText}>Credentials</legend>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_accessKey\"\n              name=\"aws_accessKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsAccessKey\", e.target.value);\n                cleanValidation(\"aws_accessKey\");\n              }}\n              label=\"Access Key\"\n              value={awsAccessKey}\n              error={validationErrors[\"aws_accessKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_secretKey\"\n              name=\"aws_secretKey\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsSecretKey\", e.target.value);\n                cleanValidation(\"aws_secretKey\");\n              }}\n              label=\"Secret Key\"\n              value={awsSecretKey}\n              error={validationErrors[\"aws_secretKey\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"aws_token\"\n              name=\"aws_token\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"awsToken\", e.target.value);\n              }}\n              label=\"Token\"\n              value={awsToken}\n            />\n          </Grid>\n        </fieldset>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AWSKMSAdd;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\n\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport {\n  addFileClientCert,\n  addFileServerCert,\n  isPageValid,\n  updateAddField,\n} from \"../createTenantSlice\";\nimport VaultKMSAdd from \"./Encryption/VaultKMSAdd\";\nimport AzureKMSAdd from \"./Encryption/AzureKMSAdd\";\nimport GCPKMSAdd from \"./Encryption/GCPKMSAdd\";\nimport GemaltoKMSAdd from \"./Encryption/GemaltoKMSAdd\";\nimport AWSKMSAdd from \"./Encryption/AWSKMSAdd\";\n\ninterface IEncryptionProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    encryptionTypeOptions: {\n      marginBottom: 15,\n    },\n    mutualTlsConfig: {\n      marginTop: 15,\n      \"& fieldset\": {\n        flex: 1,\n      },\n    },\n    rightSpacer: {\n      marginRight: 15,\n    },\n    responsiveContainer: {\n      \"@media (max-width: 900px)\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n      },\n    },\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({ classes }: IEncryptionProps) => {\n  const dispatch = useAppDispatch();\n\n  const replicas = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.replicas\n  );\n  const enableEncryption = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.enableEncryption\n  );\n  const encryptionType = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.encryptionType\n  );\n\n  const gcpProjectID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpProjectID\n  );\n  const gcpEndpoint = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpEndpoint\n  );\n  const gcpClientEmail = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientEmail\n  );\n  const gcpClientID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpClientID\n  );\n  const gcpPrivateKeyID = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKeyID\n  );\n  const gcpPrivateKey = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.gcpPrivateKey\n  );\n  const enableCustomCertsForKES = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.encryption.enableCustomCertsForKES\n  );\n  const enableAutoCert = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableAutoCert\n  );\n  const enableTLS = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableTLS\n  );\n  const minioCertificates = useSelector(\n    (state: AppState) => state.createTenant.certificates.minioCertificates\n  );\n  const serverCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.serverCertificate\n  );\n  const clientCertificate = useSelector(\n    (state: AppState) => state.createTenant.certificates.clientCertificate\n  );\n\n  const enableCustomCerts = useSelector(\n    (state: AppState) => state.createTenant.fields.security.enableCustomCerts\n  );\n  const kesSecurityContext = useSelector(\n    (state: AppState) => state.createTenant.fields.encryption.kesSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioCertificates &&\n        minioCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"encryption\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_cert,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"encryption\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    enableEncryption,\n    encryptionType,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    dispatch,\n    enableAutoCert,\n    enableCustomCerts,\n    serverCertificate.encoded_key,\n    serverCertificate.encoded_cert,\n    clientCertificate.encoded_key,\n    clientCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Encryption</SectionH1>\n        </Grid>\n        <Grid item xs={4} justifyContent={\"end\"} textAlign={\"right\"}>\n          <FormSwitchWrapper\n            label={\"\"}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enableEncryption}\n            value={\"tenant_encryption\"}\n            id=\"tenant-encryption\"\n            name=\"tenant-encryption\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"enableEncryption\", checked);\n            }}\n            description=\"\"\n            disabled={!encryptionAvailable}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            MinIO Server-Side Encryption (SSE) protects objects as part of write\n            operations, allowing clients to take advantage of server processing\n            power to secure objects at the storage layer (encryption-at-rest).\n            SSE also provides key functionality to regulatory and compliance\n            requirements around secure locking and erasure.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n\n        {enableEncryption && (\n          <Fragment>\n            <Grid item xs={12} className={classes.encryptionTypeOptions}>\n              <RadioGroupSelector\n                currentSelection={encryptionType}\n                id=\"encryptionType\"\n                name=\"encryptionType\"\n                label=\"Encryption Options\"\n                onChange={(e) => {\n                  updateField(\"encryptionType\", e.target.value);\n                }}\n                selectorOptions={[\n                  { label: \"Vault\", value: \"vault\" },\n                  { label: \"AWS\", value: \"aws\" },\n                  { label: \"Gemalto\", value: \"gemalto\" },\n                  { label: \"GCP\", value: \"gcp\" },\n                  { label: \"Azure\", value: \"azure\" },\n                ]}\n              />\n            </Grid>\n            {encryptionType === \"vault\" && <VaultKMSAdd />}\n            {encryptionType === \"azure\" && <AzureKMSAdd />}\n            {encryptionType === \"gcp\" && <GCPKMSAdd />}\n            {encryptionType === \"aws\" && <AWSKMSAdd />}\n            {encryptionType === \"gemalto\" && <GemaltoKMSAdd />}\n            <div className={classes.headerElement}>\n              <h4 className={classes.h3Section}>Additional Configurations</h4>\n            </div>\n            <Grid item xs={12}>\n              <FormSwitchWrapper\n                value=\"enableCustomCertsForKES\"\n                id=\"enableCustomCertsForKES\"\n                name=\"enableCustomCertsForKES\"\n                checked={enableCustomCertsForKES || !enableAutoCert}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n\n                  updateField(\"enableCustomCertsForKES\", checked);\n                }}\n                label={\"Custom Certificates\"}\n                disabled={!enableAutoCert}\n              />\n            </Grid>\n            {(enableCustomCertsForKES || !enableAutoCert) && (\n              <Fragment>\n                <Grid container>\n                  <Grid item xs={12} style={{ marginBottom: 15 }}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Encryption Service Certificates\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileServerCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={serverCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileServerCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={serverCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n                <Grid container style={{ marginBottom: 15 }}>\n                  <Grid item xs={12}>\n                    <fieldset className={classes.fieldGroup}>\n                      <legend className={classes.descriptionText}>\n                        Mutual TLS authentication with MinIO\n                      </legend>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileClientCert({\n                              key: \"key\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={clientCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          dispatch(\n                            addFileClientCert({\n                              key: \"cert\",\n                              fileName: fileName,\n                              value: encodedValue,\n                            })\n                          );\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={clientCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </fieldset>\n                  </Grid>\n                </Grid>\n              </Fragment>\n            )}\n            <Grid item xs={12}>\n              <Grid item xs={12} classes={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n\n              <fieldset\n                className={classes.fieldGroup}\n                style={{ marginTop: 15 }}\n              >\n                <legend className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </legend>\n                <Grid item xs={12} className={classes.kesSecurityContext}>\n                  <div\n                    className={`${classes.multiContainer} ${classes.responsiveContainer}`}\n                  >\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsUser\"\n                        name=\"kes_securityContext_runAsUser\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsUser: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsUser\");\n                        }}\n                        label=\"Run As User\"\n                        value={kesSecurityContext.runAsUser}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsUser\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_runAsGroup\"\n                        name=\"kes_securityContext_runAsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            runAsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_runAsGroup\");\n                        }}\n                        label=\"Run As Group\"\n                        value={kesSecurityContext.runAsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_runAsGroup\"] ||\n                          \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                    <div\n                      className={`${classes.formFieldRow} ${classes.rightSpacer}`}\n                    >\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"kes_securityContext_fsGroup\"\n                        name=\"kes_securityContext_fsGroup\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          updateField(\"kesSecurityContext\", {\n                            ...kesSecurityContext,\n                            fsGroup: e.target.value,\n                          });\n                          cleanValidation(\"kes_securityContext_fsGroup\");\n                        }}\n                        label=\"FsGroup\"\n                        value={kesSecurityContext.fsGroup}\n                        required\n                        error={\n                          validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                        }\n                        min=\"0\"\n                      />\n                    </div>\n                  </div>\n                </Grid>\n                <br />\n                <Grid item xs={12}>\n                  <div className={classes.multiContainer}>\n                    <FormSwitchWrapper\n                      value=\"kesSecurityContextRunAsNonRoot\"\n                      id=\"kes_securityContext_runAsNonRoot\"\n                      name=\"kes_securityContext_runAsNonRoot\"\n                      checked={kesSecurityContext.runAsNonRoot}\n                      onChange={(e) => {\n                        const targetD = e.target;\n                        const checked = targetD.checked;\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsNonRoot: checked,\n                        });\n                      }}\n                      label={\"Do not run as Root\"}\n                    />\n                  </div>\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Encryption);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\n\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport { LabelKeyPair } from \"../../types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport TolerationSelector from \"../../../Common/TolerationSelector/TolerationSelector\";\nimport { setModalErrorSnackMessage } from \"../../../../../systemSlice\";\nimport {\n  addNewToleration,\n  isPageValid,\n  removeToleration,\n  setKeyValuePairs,\n  setTolerationInfo,\n  updateAddField,\n} from \"../createTenantSlice\";\n\ninterface IAffinityProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    overlayAction: {\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    affinityConfigField: {\n      display: \"flex\",\n    },\n    affinityFieldLabel: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      flex: 1,\n    },\n    radioField: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      marginTop: 10,\n      \"& div:first-child\": {\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"baseline\",\n        textAlign: \"left !important\",\n      },\n    },\n    affinityLabelKey: {\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    affinityLabelValue: {\n      marginLeft: 10,\n      \"& div:first-child\": {\n        marginBottom: 0,\n      },\n    },\n    rowActions: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    affinityRow: {\n      marginBottom: 10,\n      display: \"flex\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({ classes }: IAffinityProps) => {\n  const dispatch = useAppDispatch();\n\n  const podAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.podAffinity\n  );\n  const nodeSelectorLabels = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.nodeSelectorLabels\n  );\n  const withPodAntiAffinity = useSelector(\n    (state: AppState) => state.createTenant.fields.affinity.withPodAntiAffinity\n  );\n  const keyValuePairs = useSelector(\n    (state: AppState) => state.createTenant.nodeSelectorPairs\n  );\n  const tolerations = useSelector(\n    (state: AppState) => state.createTenant.tolerations\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({\n          pageName: \"affinity\",\n          field: field,\n          value: value,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          dispatch(setModalErrorSnackMessage(err));\n          setKeyValueMap({});\n        });\n    }\n  }, [dispatch, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"affinity\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [dispatch, podAffinity, nodeSelectorLabels]);\n\n  const updateToleration = (index: number, field: string, value: any) => {\n    const alterToleration = { ...tolerations[index], [field]: value };\n\n    dispatch(\n      setTolerationInfo({\n        index: index,\n        tolerationValue: alterToleration,\n      })\n    );\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <div className={classes.label}>Type</div>\n          <div\n            className={`${classes.descriptionText} ${classes.affinityHelpText}`}\n          >\n            MinIO supports multiple configurations for Pod Affinity\n          </div>\n          <Grid item className={classes.radioField}>\n            <RadioGroupSelector\n              currentSelection={podAffinity}\n              id=\"affinity-options\"\n              name=\"affinity-options\"\n              label={\" \"}\n              onChange={(e) => {\n                updateField(\"podAffinity\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"None\", value: \"none\" },\n                { label: \"Default (Pod Anti-Affinity)\", value: \"default\" },\n                { label: \"Node Selector\", value: \"nodeSelector\" },\n              ]}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <Grid\n                      item\n                      xs={12}\n                      className={classes.affinityRow}\n                      key={`affinity-keyVal-${i.toString()}`}\n                    >\n                      <Grid item xs={5} className={classes.affinityLabelKey}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const newLKP: LabelKeyPair = {\n                                key: newKey,\n                                value: keyValueMap[newKey][0],\n                              };\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = newLKP;\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5} className={classes.affinityLabelValue}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = [...keyValuePairs];\n                              arrCp[i] = {\n                                key: arrCp[i].key,\n                                value: e.target.value as string,\n                              };\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2} className={classes.rowActions}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = [...keyValuePairs];\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              dispatch(setKeyValuePairs(arrCp));\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                dispatch(setKeyValuePairs(arrCp));\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12} className={classes.affinityConfigField}>\n        <Grid item className={classes.affinityFieldLabel}>\n          <h3>Tolerations</h3>\n          <span className={classes.error}>\n            {validationErrors[\"tolerations\"]}\n          </span>\n          <Grid container>\n            {tolerations &&\n              tolerations.map((tol, i) => {\n                return (\n                  <Grid\n                    item\n                    xs={12}\n                    className={classes.affinityRow}\n                    key={`affinity-keyVal-${i.toString()}`}\n                  >\n                    <TolerationSelector\n                      effect={tol.effect}\n                      onEffectChange={(value) => {\n                        updateToleration(i, \"effect\", value);\n                      }}\n                      tolerationKey={tol.key}\n                      onTolerationKeyChange={(value) => {\n                        updateToleration(i, \"key\", value);\n                      }}\n                      operator={tol.operator}\n                      onOperatorChange={(value) => {\n                        updateToleration(i, \"operator\", value);\n                      }}\n                      value={tol.value}\n                      onValueChange={(value) => {\n                        updateToleration(i, \"value\", value);\n                      }}\n                      tolerationSeconds={tol.tolerationSeconds?.seconds || 0}\n                      onSecondsChange={(value) => {\n                        updateToleration(i, \"tolerationSeconds\", {\n                          seconds: value,\n                        });\n                      }}\n                      index={i}\n                    />\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => {\n                          dispatch(addNewToleration());\n                        }}\n                        disabled={i !== tolerations.length - 1}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </div>\n\n                    <div className={classes.overlayAction}>\n                      <IconButton\n                        size={\"small\"}\n                        onClick={() => dispatch(removeToleration(i))}\n                        disabled={tolerations.length <= 1}\n                      >\n                        <RemoveIcon />\n                      </IconButton>\n                    </div>\n                  </Grid>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Affinity);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IImagesProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({ classes }: IImagesProps) => {\n  const dispatch = useAppDispatch();\n\n  const customImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customImage\n  );\n  const imageName = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageName\n  );\n  const customDockerhub = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.customDockerhub\n  );\n  const imageRegistry = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.imageRegistry\n  );\n  const imageRegistryUsername = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryUsername\n  );\n  const imageRegistryPassword = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.imageRegistryPassword\n  );\n\n  const prometheusCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const tenantCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.tenantCustom\n  );\n  const logSearchCustom = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const kesImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.kesImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/operator:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    dispatch,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Specify the container images used by the Tenant and it's features.\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"minio/minio:RELEASE.2022-02-26T02-54-46Z\"\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"minio/kes:v0.17.6\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Log Search</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"API\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"minio/operator:v4.4.22\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"PostgreSQL\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"PostgreSQL Init\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <h4>Monitoring</h4>\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"library/alpine:latest\"\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.formFieldRow}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"library/busybox:1.33.1\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <h4>Custom Container Registry</h4>\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Use a private container registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.formFieldRow}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(Images);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { niceBytes } from \"../../../../../common/utils\";\n\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({ classes }: ISizePreviewProps) => {\n  const nodes = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.nodes\n  );\n  const memoryNode = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesMemoryRequest\n  );\n  const ecParity = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParity\n  );\n\n  const distribution = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.distribution\n  );\n  const ecParityCalc = useSelector(\n    (state: AppState) => state.createTenant.fields.tenantSize.ecParityCalc\n  );\n\n  const cpuToUse = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.resourcesCPURequest\n  );\n  const integrationSelection = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.tenantSize.integrationSelection\n  );\n\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? distribution.disks : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drive Capacity</TableCell>\n                  <TableCell align=\"right\">\n                    {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {integrationSelection.typeSelection === \"\" &&\n            integrationSelection.storageClass === \"\" && (\n              <Fragment>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory per Node</TableCell>\n                  <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    CPU Selection\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {cpuToUse}\n                  </TableCell>\n                </TableRow>\n              </Fragment>\n            )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                  Server Failures Tolerated\n                </TableCell>\n                <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n      {integrationSelection.typeSelection !== \"\" &&\n        integrationSelection.storageClass !== \"\" && (\n          <Fragment>\n            <h4>Single Instance Configuration</h4>\n            <Divider />\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n              size={\"small\"}\n            >\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">CPU</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.CPU !== 0\n                      ? integrationSelection.CPU\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Memory</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.memory !== 0\n                      ? `${integrationSelection.memory} Gi`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">Drives per Server</TableCell>\n                  <TableCell align=\"right\">\n                    {integrationSelection.drivesPerServer !== 0\n                      ? `${integrationSelection.drivesPerServer}`\n                      : \"-\"}\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ borderBottom: 0 }} scope=\"row\">\n                    Drive Size\n                  </TableCell>\n                  <TableCell style={{ borderBottom: 0 }} align=\"right\">\n                    {integrationSelection.driveSize.driveSize}\n                    {integrationSelection.driveSize.sizeUnit}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Fragment>\n        )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SizePreview);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DialogContentText, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalBasic,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport ConfirmDialog from \"../../../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../../../icons\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport { closeAddNSModal } from \"../../createTenantSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n    ...deleteDialogStyles,\n  })\n);\n\nconst AddNamespaceModal = () => {\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n  const addNamespaceLoading = useSelector(\n    (state: AppState) => state.createTenant.addNSLoading\n  );\n  const addNamespaceOpen = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  return (\n    <ConfirmDialog\n      title={`New namespace`}\n      confirmText={\"Create\"}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      isOpen={addNamespaceOpen}\n      titleIcon={<ConfirmModalIcon />}\n      isLoading={addNamespaceLoading}\n      onConfirm={() => {\n        dispatch(createNamespaceAsync());\n      }}\n      onClose={() => {\n        dispatch(closeAddNSModal());\n      }}\n      confirmationContent={\n        <React.Fragment>\n          {addNamespaceLoading && <LinearProgress />}\n          <DialogContentText>\n            Are you sure you want to add a namespace called\n            <br />\n            <b className={classes.wrapText}>{namespace}</b>?\n          </DialogContentText>\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default AddNamespaceModal;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useMemo } from \"react\";\nimport AddIcon from \"../../../../../../icons/AddIcon\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { openAddNSModal, setNamespace } from \"../../createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport AddNamespaceModal from \"../helpers/AddNamespaceModal\";\nimport debounce from \"lodash/debounce\";\nimport { IMkEnvs } from \"./utils\";\nimport { validateNamespaceAsync } from \"../../thunks/namespaceThunks\";\n\nconst NamespaceSelector = ({ formToRender }: { formToRender?: IMkEnvs }) => {\n  const dispatch = useAppDispatch();\n\n  const namespace = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.namespace\n  );\n\n  const showNSCreateButton = useSelector(\n    (state: AppState) => state.createTenant.showNSCreateButton\n  );\n\n  const namespaceError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"namespace\"]\n  );\n  const openAddNSConfirm = useSelector(\n    (state: AppState) => state.createTenant.addNSOpen\n  );\n\n  const debounceNamespace = useMemo(\n    () =>\n      debounce(() => {\n        dispatch(validateNamespaceAsync());\n      }, 500),\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  const addNamespace = () => {\n    dispatch(openAddNSModal());\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && <AddNamespaceModal />}\n      <InputBoxWrapper\n        id=\"namespace\"\n        name=\"namespace\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          dispatch(setNamespace(e.target.value));\n        }}\n        label=\"Namespace\"\n        value={namespace}\n        error={namespaceError || \"\"}\n        overlayId={\"add-namespace\"}\n        overlayIcon={showNSCreateButton ? <AddIcon /> : null}\n        overlayAction={addNamespace}\n        required\n      />\n    </Fragment>\n  );\n};\nexport default NamespaceSelector;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  wizardCommon,\n} from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../../store\";\nimport InputBoxWrapper from \"../../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport SizePreview from \"../SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\nimport { IMkEnvs, mkPanelConfigurations } from \"./utils\";\nimport {\n  isPageValid,\n  setStorageType,\n  setTenantName,\n  updateAddField,\n} from \"../../createTenantSlice\";\nimport { selFeatures } from \"../../../../consoleSlice\";\nimport NamespaceSelector from \"./NamespaceSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    sizePreview: {\n      position: \"fixed\",\n      marginLeft: 10,\n      background: \"#FFFFFF\",\n      border: \"1px solid #EAEAEA\",\n      padding: 2,\n    },\n    ...formFieldStyles,\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst NameTenantField = () => {\n  const dispatch = useAppDispatch();\n  const tenantName = useSelector(\n    (state: AppState) => state.createTenant.fields.nameTenant.tenantName\n  );\n\n  const tenantNameError = useSelector(\n    (state: AppState) => state.createTenant.validationErrors[\"tenant-name\"]\n  );\n\n  return (\n    <InputBoxWrapper\n      id=\"tenant-name\"\n      name=\"tenant-name\"\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch(setTenantName(e.target.value));\n      }}\n      label=\"Name\"\n      value={tenantName}\n      required\n      error={tenantNameError || \"\"}\n    />\n  );\n};\n\ninterface INameTenantMainScreen {\n  classes: any;\n  formToRender?: IMkEnvs;\n}\n\nconst NameTenantMain = ({ classes, formToRender }: INameTenantMainScreen) => {\n  const dispatch = useAppDispatch();\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const selectedStorageType = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageType\n  );\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const features = useSelector(selFeatures);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      dispatch(\n        updateAddField({ pageName: \"nameTenant\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    const isValid =\n      (formToRender === IMkEnvs.default && storageClasses.length > 0) ||\n      (formToRender !== IMkEnvs.default && selectedStorageType !== \"\");\n\n    dispatch(isPageValid({ pageName: \"nameTenant\", valid: isValid }));\n  }, [storageClasses, dispatch, selectedStorageType, formToRender]);\n\n  return (\n    <Fragment>\n      <Grid container>\n        <Grid item xs={8} md={9}>\n          <Paper className={classes.paperWrapper} sx={{ minHeight: 550 }}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <div className={classes.formFieldRow}>\n                  <NameTenantField />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <NamespaceSelector formToRender={formToRender} />\n              </Grid>\n              {formToRender === IMkEnvs.default ? (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_class\"\n                    name=\"storage_class\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      updateField(\n                        \"selectedStorageClass\",\n                        e.target.value as string\n                      );\n                    }}\n                    label=\"Storage Class\"\n                    value={selectedStorageClass}\n                    options={storageClasses}\n                    disabled={storageClasses.length < 1}\n                  />\n                </Grid>\n              ) : (\n                <Grid item xs={12} className={classes.formFieldRow}>\n                  <SelectWrapper\n                    id=\"storage_type\"\n                    name=\"storage_type\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      setStorageType({\n                        storageType: e.target.value as string,\n                        features: features,\n                      });\n                    }}\n                    label={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorLabel`,\n                      \"Storage Type\"\n                    )}\n                    value={selectedStorageType}\n                    options={get(\n                      mkPanelConfigurations,\n                      `${formToRender}.variantSelectorValues`,\n                      []\n                    )}\n                  />\n                </Grid>\n              )}\n              {formToRender === IMkEnvs.default ? (\n                <TenantSize />\n              ) : (\n                get(\n                  mkPanelConfigurations,\n                  `${formToRender}.sizingComponent`,\n                  null\n                )\n              )}\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} md={3}>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(NameTenantMain);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport get from \"lodash/get\";\nimport NameTenantMain from \"./NameTenantMain\";\nimport { IMkEnvs, resourcesConfigurations } from \"./utils\";\nimport { selFeatures } from \"../../../../consoleSlice\";\n\nconst TenantResources = () => {\n  const features = useSelector(selFeatures);\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  if (formRender === null) {\n    return null;\n  }\n\n  return <NameTenantMain formToRender={formRender} />;\n};\n\nexport default TenantResources;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n\n    logSearchEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigLogSearch = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const logSearchEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchEnabled\n  );\n  const logSearchVolumeSize = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchVolumeSize\n  );\n  const logSearchSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSelectedStorageClass\n  );\n  const logSearchImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.logSearchImage\n  );\n  const logSearchPostgresImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresImage\n  );\n  const logSearchPostgresInitImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const logSearchSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchSecurityContext\n  );\n  const logSearchPostgresSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.logSearchPostgresSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (logSearchEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    logSearchImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    dispatch,\n    logSearchEnabled,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Audit Log</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            value=\"enableLogging\"\n            id=\"enableLogging\"\n            name=\"enableLogging\"\n            checked={logSearchEnabled}\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"logSearchEnabled\", checked);\n            }}\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <span className={classes.descriptionText}>\n            Deploys a small PostgreSQL database and stores access logs of all\n            calls into the tenant.\n          </span>\n        </Grid>\n        <Grid xs={12}>\n          <hr className={classes.hrClass} />\n        </Grid>\n        {logSearchEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"log_search_storage_class\"\n                name=\"log_search_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"logSearchSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Log Search Storage Class\"\n                value={logSearchSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext for LogSearch\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsUser\"\n                      name=\"logSearch_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_runAsGroup\"\n                      name=\"logSearch_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"logSearch_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"logSearch_securityContext_fsGroup\"\n                      name=\"logSearch_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchSecurityContext\", {\n                          ...logSearchSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"logSearch_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"logSearchSecurityContextRunAsNonRoot\"\n                    id=\"logSearch_securityContext_runAsNonRoot\"\n                    name=\"logSearch_securityContext_runAsNonRoot\"\n                    checked={logSearchSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n            <fieldset className={classes.fieldGroup}>\n              <legend className={classes.descriptionText}>\n                SecurityContext for PostgreSQL\n              </legend>\n\n              <Grid item xs={12}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsUser\"\n                      name=\"postgres_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={logSearchPostgresSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_runAsGroup\"\n                      name=\"postgres_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={logSearchPostgresSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"postgres_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"postgres_securityContext_fsGroup\"\n                      name=\"postgres_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"logSearchPostgresSecurityContext\", {\n                          ...logSearchPostgresSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"postgres_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={logSearchPostgresSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"postgres_securityContext_fsGroup\"] ||\n                        \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"postgresSecurityContextRunAsNonRoot\"\n                    id=\"postgres_securityContext_runAsNonRoot\"\n                    name=\"postgres_securityContext_runAsNonRoot\"\n                    checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigLogSearch);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  createTenantCommon,\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\n\nimport { AppState, useAppDispatch } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport InputUnitMenu from \"../../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport SectionH1 from \"../../../Common/SectionH1\";\nimport { isPageValid, updateAddField } from \"../createTenantSlice\";\n\ninterface IConfigureProps {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    configSectionItem: {\n      marginRight: 15,\n\n      \"& .multiContainer\": {\n        border: \"1px solid red\",\n      },\n    },\n    fieldGroup: {\n      ...createTenantCommon.fieldGroup,\n      paddingTop: 15,\n      marginBottom: 25,\n    },\n    responsiveSectionItem: {\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n\n        \"& div > div\": {\n          marginBottom: 5,\n          marginRight: 0,\n        },\n      },\n    },\n    fieldSpaceTop: {\n      marginTop: 15,\n    },\n    prometheusEnabledFields: {\n      marginLeft: 20, // 2nd Level(15+15)\n      padding: 10,\n      width: \"90%\",\n      margin: \"auto\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst ConfigPrometheus = ({ classes }: IConfigureProps) => {\n  const dispatch = useAppDispatch();\n\n  const storageClasses = useSelector(\n    (state: AppState) => state.createTenant.storageClasses\n  );\n  const prometheusEnabled = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusEnabled\n  );\n  const prometheusVolumeSize = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusVolumeSize\n  );\n  const prometheusSelectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSelectedStorageClass\n  );\n  const prometheusImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusImage\n  );\n  const prometheusSidecarImage = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSidecarImage\n  );\n  const prometheusInitImage = useSelector(\n    (state: AppState) => state.createTenant.fields.configure.prometheusInitImage\n  );\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n  const tenantSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.tenantSecurityContext\n  );\n  const prometheusSecurityContext = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.configure.prometheusSecurityContext\n  );\n\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const configureSTClasses = [\n    { label: \"Default\", value: \"default\" },\n    ...storageClasses,\n  ];\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      dispatch(\n        updateAddField({ pageName: \"configure\", field: field, value: value })\n      );\n    },\n    [dispatch]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusEnabled) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    dispatch(\n      isPageValid({\n        pageName: \"configure\",\n        valid: Object.keys(commonVal).length === 0,\n      })\n    );\n\n    setValidationErrors(commonVal);\n  }, [\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    dispatch,\n    prometheusEnabled,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    tenantSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values in current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", \"default\");\n      }\n    }\n  }, [\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <SectionH1>Monitoring</SectionH1>\n        </Grid>\n        <Grid item xs={4}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={prometheusEnabled}\n            value={\"monitoring_status\"}\n            id=\"monitoring-status\"\n            name=\"monitoring-status\"\n            onChange={(e) => {\n              const targetD = e.target;\n              const checked = targetD.checked;\n\n              updateField(\"prometheusEnabled\", checked);\n            }}\n            description=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <span className={classes.descriptionText}>\n          A small Prometheus will be deployed to keep metrics about the tenant.\n        </span>\n      </Grid>\n      <Grid xs={12}>\n        <hr className={classes.hrClass} />\n      </Grid>\n      <Grid container spacing={1}>\n        {prometheusEnabled && (\n          <Fragment>\n            <Grid item xs={12}>\n              <SelectWrapper\n                id=\"prometheus_storage_class\"\n                name=\"prometheus_storage_class\"\n                onChange={(e: SelectChangeEvent<string>) => {\n                  updateField(\n                    \"prometheusSelectedStorageClass\",\n                    e.target.value as string\n                  );\n                }}\n                label=\"Storage Class\"\n                value={prometheusSelectedStorageClass}\n                options={configureSTClasses}\n                disabled={configureSTClasses.length < 1}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size\"\n                  overlayObject={\n                    <InputUnitMenu\n                      id={\"size-unit\"}\n                      onUnitChange={() => {}}\n                      unitSelected={\"Gi\"}\n                      unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                      disabled={true}\n                    />\n                  }\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </Grid>\n            <fieldset\n              className={`${classes.fieldGroup} ${classes.fieldSpaceTop}`}\n            >\n              <legend className={classes.descriptionText}>\n                SecurityContext\n              </legend>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.responsiveSectionItem}`}\n                >\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsUser\"\n                      name=\"prometheus_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={prometheusSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsUser\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_runAsGroup\"\n                      name=\"prometheus_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\n                          \"prometheus_securityContext_runAsGroup\"\n                        );\n                      }}\n                      label=\"Run As Group\"\n                      value={prometheusSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_runAsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div className={classes.configSectionItem}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"prometheus_securityContext_fsGroup\"\n                      name=\"prometheus_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"prometheusSecurityContext\", {\n                          ...prometheusSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"prometheus_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={prometheusSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\n                          \"prometheus_securityContext_fsGroup\"\n                        ] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.configSectionItem}>\n                <div\n                  className={`${classes.multiContainer} ${classes.fieldSpaceTop}`}\n                >\n                  <FormSwitchWrapper\n                    value=\"prometheusSecurityContextRunAsNonRoot\"\n                    id=\"prometheus_securityContext_runAsNonRoot\"\n                    name=\"prometheus_securityContext_runAsNonRoot\"\n                    checked={prometheusSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </fieldset>\n          </Fragment>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(ConfigPrometheus);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport const requiredPages = [\n  \"nameTenant\",\n  \"tenantSize\",\n  \"configure\",\n  \"affinity\",\n  \"identityProvider\",\n  \"security\",\n  \"encryption\",\n];\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Button } from \"@mui/material\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { requiredPages } from \"./common\";\nimport { createTenantAsync } from \"./thunks/createTenantThunk\";\n\nconst CreateTenantButton = () => {\n  const dispatch = useAppDispatch();\n\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n\n  const validPages = useSelector(\n    (state: AppState) => state.createTenant.validPages\n  );\n\n  const selectedStorageClass = useSelector(\n    (state: AppState) =>\n      state.createTenant.fields.nameTenant.selectedStorageClass\n  );\n\n  const enabled =\n    !addSending &&\n    selectedStorageClass !== \"\" &&\n    requiredPages.every((v) => validPages.includes(v));\n\n  return (\n    <Button\n      id={\"wizard-button-Create\"}\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={() => {\n        dispatch(createTenantAsync());\n      }}\n      disabled={!enabled}\n      key={`button-AddTenant-Create`}\n    >\n      Create\n    </Button>\n  );\n};\n\nexport default CreateTenantButton;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport { useSelector } from \"react-redux\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewTenantCredentials = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const showNewCredentials = useSelector(\n    (state: AppState) => state.createTenant.showNewCredentials\n  );\n  const createdAccount = useSelector(\n    (state: AppState) => state.createTenant.createdAccount\n  );\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            dispatch(resetAddTenantForm());\n            navigate(\"/tenants\");\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default NewTenantCredentials;\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport {\n  IWizardButton,\n  IWizardElement,\n} from \"../../Common/GenericWizard/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport Images from \"./Steps/Images\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport BackLink from \"../../../../common/BackLink\";\nimport TenantResources from \"./Steps/TenantResources/TenantResources\";\nimport ConfigLogSearch from \"./Steps/ConfigLogSearch\";\nimport ConfigPrometheus from \"./Steps/ConfigPrometheus\";\nimport {\n  IMkEnvs,\n  resourcesConfigurations,\n} from \"./Steps/TenantResources/utils\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport { StorageIcon } from \"../../../../icons\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { resetAddTenantForm } from \"./createTenantSlice\";\nimport CreateTenantButton from \"./CreateTenantButton\";\nimport NewTenantCredentials from \"./NewTenantCredentials\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    pageBox: {\n      border: \"1px solid #EAEAEA\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  })\n);\n\nconst AddTenant = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const features = useSelector(selFeatures);\n\n  // Fields\n  const addSending = useSelector(\n    (state: AppState) => state.createTenant.addingTenant\n  );\n  const [formRender, setFormRender] = useState<IMkEnvs | null>(null);\n\n  useEffect(() => {\n    let setConfiguration = IMkEnvs.default;\n\n    if (features && features.length !== 0) {\n      const possibleVariables = Object.keys(resourcesConfigurations);\n\n      possibleVariables.forEach((element) => {\n        if (features.includes(element)) {\n          setConfiguration = get(\n            resourcesConfigurations,\n            element,\n            IMkEnvs.default\n          );\n        }\n      });\n    }\n\n    setFormRender(setConfiguration);\n  }, [features]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      dispatch(resetAddTenantForm());\n      navigate(\"/tenants\");\n    },\n  };\n\n  const createButton: IWizardButton = {\n    componentRender: <CreateTenantButton key={\"create-tenant\"} />,\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <TenantResources />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Audit Log\",\n      advancedOnly: true,\n      componentRender: <ConfigLogSearch />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Monitoring\",\n      advancedOnly: true,\n      componentRender: <ConfigPrometheus />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  return (\n    <Fragment>\n      <NewTenantCredentials />\n      <PageHeader\n        label={\n          <BackLink\n            to={\"/tenants\"}\n            label={\"Tenants\"}\n            executeOnClick={() => {\n              dispatch(resetAddTenantForm());\n            }}\n          />\n        }\n      />\n\n      <PageLayout>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.pageBox}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n        {formRender === IMkEnvs.aws && (\n          <Grid item xs={12} style={{ marginTop: 16 }}>\n            <HelpBox\n              title={\"EBS Volume Configuration.\"}\n              iconComponent={<StorageIcon />}\n              help={\n                <Fragment>\n                  <b>Performance Optimized</b>: Uses the <i>gp3</i> EBS storage\n                  class class configured at 1,000Mi/s throughput and 16,000\n                  IOPS, however the minimum volume size for this type of EBS\n                  volume is <b>32Gi</b>.\n                  <br />\n                  <br />\n                  <b>Storage Optimized</b>: Uses the <i>sc1</i> EBS storage\n                  class, however the minimum volume size for this type of EBS\n                  volume is &nbsp;\n                  <b>16Ti</b> to unlock their maximum throughput speed of\n                  250Mi/s.\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddTenant;\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","flexFlow","padding","inputWithCopy","background","inputLabel","fieldBasic","label","value","OutlinedInput","readOnly","endAdornment","InputAdornment","position","text","BoxIconButton","tooltip","onClick","onMouseDown","edge","download","filename","element","document","createElement","setAttribute","style","body","appendChild","click","removeChild","warningBlock","color","margin","credentialTitle","buttonContainer","textAlign","marginTop","credentialsPanel","overflowY","maxHeight","promptTitle","buttonSpacer","newServiceAccount","open","closeModal","entity","consoleCreds","get","idp","ModalWrapper","modalOpen","onClose","titleIcon","Grid","formScrollable","Array","isArray","map","credentialsPair","index","accessKey","secretKey","undefined","WarnIcon","RBIconButton","id","consoleExtras","itemMap","url","api","path","JSON","stringify","icon","variant","length","allCredentials","tooltipHelper","valueString","maxWidth","whiteSpace","overflow","textOverflow","fileInputField","fileInputStyles","textBoxContainer","onChange","name","disabled","required","error","accept","useState","showFileSelector","setShowSelector","fieldBottom","fieldContainer","errorInField","InputLabel","htmlFor","fieldLabelError","tooltipContainer","Tooltip","placement","HelpIcon","type","e","fileName","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","IconButton","component","disableRipple","disableFocusRipple","size","Cancel","ErrorBlock","errorMessage","fileReselect","AttachFile","deleteDialogStyles","content","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","dispatch","useAppDispatch","openSnackbar","setOpenSnackbar","modalSnackMessage","useSelector","state","system","modalSnackBar","useEffect","setModalSnackMessage","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","configSectionItem","tenantCustomizationFields","marginLeft","containerItem","fieldGroup","createTenantCommon","responsiveSectionItem","wrapperContainer","overlayAction","modalBasic","wizardCommon","exposeMinIO","createTenant","fields","configure","exposeConsole","setDomains","consoleDomain","minioDomains","tenantCustom","tenantSecurityContext","validationErrors","setValidationErrors","updateField","useCallback","field","updateAddField","pageName","customAccountValidation","fieldKey","runAsUser","customValidation","parseInt","customValidationMessage","runAsGroup","fsGroup","minioExtraValidations","validation","pattern","customPatternMessage","commonVal","commonFormValidation","isPageValid","valid","Object","keys","cleanValidation","fieldName","clearValidationError","Paper","paperWrapper","headerElement","h3Section","descriptionText","FormSwitchWrapper","checked","InputBoxWrapper","placeholder","domain","copyDomains","updateMinIODomain","addNewMinIODomain","Add","removeMinIODomain","RemoveIcon","multiContainer","min","runAsNonRoot","useStyles","makeStyles","adUserDnRows","buttonTray","formFieldStyles","idpSelection","identityProvider","ADURL","ADSkipTLS","ADServerInsecure","ADGroupSearchBaseDN","ADGroupSearchFilter","ADUserDNs","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","customIDPValidation","i","push","Fragment","formFieldRow","Typography","gutterBottom","_","setIDPADUsrAtIndex","userDN","addIDPADUsrAtIndex","removeIDPADUsrAtIndex","Delete","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","shortened","gridTemplateColumns","gridGap","accessKeys","secretKeys","setIDPUsrAtIndex","setIDPPwdAtIndex","addIDPNewKeyPair","removeIDPKeyPairAtIndex","getRandomString","Casino","protocolRadioOptions","RadioGroupSelector","currentSelection","setIDP","selectorOptions","minioCertificateRows","justifyContent","borderBottom","flex","fileItem","minWidth","minioCertsContainer","minioCACertsRow","rowActions","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","caCertificates","spacing","description","SectionTitle","keyPair","FileSelector","encodedValue","addFileToKeyPair","key","cert","addKeyPair","AddIcon","deleteKeyPair","addFileToCaCertificates","addCaCertificate","deleteCaCertificate","vaultEndpoint","encryption","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","vaultCertificate","vaultCA","encryptionValidation","mutualTlsConfig","addFileVaultCert","addFileVaultCa","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","gemaltoCA","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","addFileGemaltoCa","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","encryptionTypeOptions","rightSpacer","responsiveContainer","replicas","enableEncryption","encryptionType","enableCustomCertsForKES","serverCertificate","clientCertificate","kesSecurityContext","encryptionAvailable","filter","encoded_key","encoded_cert","indicatorLabels","hrClass","addFileServerCert","addFileClientCert","affinityConfigField","affinityFieldLabel","radioField","affinityLabelKey","affinityLabelValue","affinityRow","podAffinity","affinity","nodeSelectorLabels","withPodAntiAffinity","keyValuePairs","nodeSelectorPairs","tolerations","loading","setLoading","keyValueMap","setKeyValueMap","keyOptions","setKeyOptions","then","res","k","catch","err","setModalErrorSnackMessage","vl","kvp","kvs","a","indexOf","join","splittedLabels","forEach","splitItem","updateToleration","alterToleration","setTolerationInfo","tolerationValue","affinityHelpText","SelectWrapper","newKey","newLKP","arrCp","setKeyValuePairs","options","v","tol","TolerationSelector","effect","onEffectChange","tolerationKey","onTolerationKeyChange","operator","onOperatorChange","onValueChange","tolerationSeconds","seconds","onSecondsChange","addNewToleration","removeToleration","customImage","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","prometheusCustom","prometheusEnabled","logSearchCustom","logSearchEnabled","logSearchVolumeSize","prometheusVolumeSize","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","table","nodes","tenantSize","memoryNode","resourcesMemoryRequest","ecParity","distribution","ecParityCalc","cpuToUse","resourcesCPURequest","integrationSelection","usableInformation","storageFactors","find","erasureCode","Divider","Table","TableBody","TableRow","TableCell","scope","align","typeSelection","storageClass","disks","niceBytes","pvSize","persistentVolumes","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","CPU","memory","drivesPerServer","driveSize","sizeUnit","wrapText","wordWrap","namespace","nameTenant","addNamespaceLoading","addNSLoading","addNamespaceOpen","addNSOpen","ConfirmDialog","confirmText","confirmButtonProps","isOpen","isLoading","onConfirm","createNamespaceAsync","closeAddNSModal","confirmationContent","LinearProgress","DialogContentText","formToRender","showNSCreateButton","namespaceError","openAddNSConfirm","debounceNamespace","useMemo","debounce","validateNamespaceAsync","cancel","setNamespace","overlayId","overlayIcon","openAddNSModal","NameTenantField","tenantName","tenantNameError","setTenantName","sizePreview","selectedStorageClass","selectedStorageType","storageClasses","features","selFeatures","isValid","IMkEnvs","md","sx","minHeight","setStorageType","storageType","mkPanelConfigurations","TenantSize","formRender","setFormRender","setConfiguration","resourcesConfigurations","includes","logSearchEnabledFields","fieldSpaceTop","logSearchSecurityContext","logSearchPostgresSecurityContext","configureSTClasses","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","prometheusEnabledFields","prometheusSecurityContext","requiredPages","addSending","addingTenant","validPages","enabled","every","Button","createTenantAsync","navigate","useNavigate","showNewCredentials","createdAccount","CredentialsPrompt","resetAddTenantForm","pageBox","settingsCommon","cancelButton","action","createButton","componentRender","filteredWizardSteps","buttons","advancedOnly","PageHeader","BackLink","to","executeOnClick","PageLayout","GenericWizard","wizardSteps","HelpBox","errorBlock","palette","main","withBreak"],"sourceRoot":""}