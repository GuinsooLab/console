{"version":3,"file":"static/js/4394.d1cae66d.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/NotificationEndpoints/ListNotificationEndpoints.tsx","screens/Console/NotificationEndpoints/utils.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport { red } from \"@mui/material/colors\";\nimport Grid from \"@mui/material/Grid\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport {\n  NotificationEndpointItem,\n  NotificationEndpointsList,\n  TransformedEndpointItem,\n} from \"./types\";\nimport { notificationTransform } from \"./utils\";\nimport { AddIcon, LambdaIcon } from \"../../../icons\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\n\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  settingsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport RefreshIcon from \"../../../icons/RefreshIcon\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport AButton from \"../Common/AButton/AButton\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport SearchBox from \"../Common/SearchBox\";\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\n\ninterface IListNotificationEndpoints {\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...settingsCommon,\n    ...containerForHeader(theme.spacing(4)),\n    twHeight: {\n      minHeight: 400,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    rightActionItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& button\": {\n        whiteSpace: \"nowrap\",\n      },\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 380,\n    },\n  });\n\nconst ListNotificationEndpoints = ({ classes }: IListNotificationEndpoints) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  //Local States\n  const [records, setRecords] = useState<TransformedEndpointItem[]>([]);\n  const [filter, setFilter] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  //Effects\n  // load records on mount\n  useEffect(() => {\n    if (isLoading) {\n      const fetchRecords = () => {\n        api\n          .invoke(\"GET\", `/api/v1/admin/notification_endpoints`)\n          .then((res: NotificationEndpointsList) => {\n            let resNotEndList: NotificationEndpointItem[] = [];\n            if (res.notification_endpoints !== null) {\n              resNotEndList = res.notification_endpoints;\n            }\n            setRecords(notificationTransform(resNotEndList));\n            setIsLoading(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            dispatch(setErrorSnackMessage(err));\n            setIsLoading(false);\n          });\n      };\n      fetchRecords();\n    }\n  }, [isLoading, dispatch]);\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  const filteredRecords = records.filter((b: TransformedEndpointItem) => {\n    if (filter === \"\") {\n      return true;\n    }\n    return b.service_name.indexOf(filter) >= 0;\n  });\n\n  const statusDisplay = (status: string) => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <FiberManualRecordIcon\n          style={status === \"Offline\" ? { color: red[500] } : {}}\n        />\n        {status}\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <SearchBox\n            placeholder=\"Search target\"\n            onChange={setFilter}\n            overrideClass={classes.searchField}\n            value={filter}\n          />\n          <div className={classes.rightActionItems}>\n            <RBIconButton\n              tooltip={\"Refresh List\"}\n              text={\"Refresh\"}\n              variant=\"outlined\"\n              color=\"primary\"\n              icon={<RefreshIcon />}\n              onClick={() => {\n                setIsLoading(true);\n              }}\n            />\n\n            <RBIconButton\n              tooltip={\"Add Notification Target\"}\n              text={\" Add Notification Target\"}\n              variant=\"contained\"\n              color=\"primary\"\n              icon={<AddIcon />}\n              onClick={() => {\n                navigate(IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD);\n              }}\n            />\n          </div>\n        </Grid>\n        {isLoading && <LinearProgress />}\n        {!isLoading && (\n          <Fragment>\n            {records.length > 0 && (\n              <Fragment>\n                <Grid item xs={12} className={classes.tableBlock}>\n                  <TableWrapper\n                    itemActions={[]}\n                    columns={[\n                      {\n                        label: \"Status\",\n                        elementKey: \"status\",\n                        renderFunction: statusDisplay,\n                        width: 150,\n                      },\n                      { label: \"Service\", elementKey: \"service_name\" },\n                    ]}\n                    isLoading={isLoading}\n                    records={filteredRecords}\n                    entityName=\"Notification Endpoints\"\n                    idField=\"service_name\"\n                    customPaperHeight={classes.twHeight}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <HelpBox\n                    title={\"Notification Endpoints\"}\n                    iconComponent={<LambdaIcon />}\n                    help={\n                      <Fragment>\n                        MinIO bucket notifications allow administrators to send\n                        notifications to supported external services on certain\n                        object or bucket events. MinIO supports bucket and\n                        object-level S3 events similar to the Amazon S3 Event\n                        Notifications.\n                        <br />\n                        <br />\n                        You can learn more at our{\" \"}\n                        <a\n                          href=\"https://docs.min.io/minio/baremetal/monitoring/bucket-notifications/bucket-notifications.html?ref=con\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          documentation\n                        </a>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Fragment>\n            )}\n            {records.length === 0 && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    title={\"Notification Targets\"}\n                    iconComponent={<LambdaIcon />}\n                    help={\n                      <Fragment>\n                        MinIO bucket notifications allow administrators to send\n                        notifications to supported external services on certain\n                        object or bucket events. MinIO supports bucket and\n                        object-level S3 events similar to the Amazon S3 Event\n                        Notifications.\n                        <br />\n                        <br />\n                        To get started,{\" \"}\n                        <AButton\n                          onClick={() => {\n                            navigate(IAM_PAGES.NOTIFICATIONS_ENDPOINTS_ADD);\n                          }}\n                        >\n                          Add a Notification Target\n                        </AButton>\n                        .\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(ListNotificationEndpoints);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"PostgreSQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: \"Queue Directory\",\n    required: true,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue-limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter custom notes if any\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","padding","margin","textDecoration","cursor","color","palette","info","main","fontFamily","children","rest","searchField","adornment","placeholder","onChange","adornmentPosition","overrideClass","value","inputProps","disableUnderline","position","id","label","InputProps","e","target","variant","actionsTray","settingsCommon","containerForHeader","spacing","twHeight","minHeight","tableBlock","tableStyles","rightActionItems","whiteSpace","maxWidth","dispatch","useAppDispatch","navigate","useNavigate","useState","records","setRecords","filter","setFilter","isLoading","setIsLoading","useEffect","api","then","res","resNotEndList","notification_endpoints","notificationTransform","catch","err","setErrorSnackMessage","filteredRecords","b","service_name","indexOf","Fragment","tooltip","text","icon","onClick","IAM_PAGES","length","itemActions","columns","elementKey","renderFunction","status","style","red","entityName","idField","customPaperHeight","href","rel","justifyContent","alignContent","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationElements","map","element","service","account_id","servicesList","actionTrigger","targetTitle","logo","commonFields","name","required","type","removeEmptyFields","formFields","field","notificationEndpointsFields"],"sourceRoot":""}