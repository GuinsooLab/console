{"version":3,"file":"static/js/5088.ab7422bd.chunk.js","mappings":"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","sources":["common/HelpBox.tsx","screens/Console/HealthInfo/types.ts","screens/Console/Common/TestWrapper/TestWrapper.tsx","screens/Console/HealthInfo/HealthInfo.tsx","utils/wsUtils.ts","../node_modules/@mui/icons-material/ArrowForwardIos.js","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"1px solid #E2E2E2\",\n      borderRadius: 2,\n      backgroundColor: \"#FBFAFA\",\n      paddingLeft: 25,\n      paddingTop: 31,\n      paddingBottom: 21,\n      paddingRight: 30,\n    },\n    leftItems: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 15,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& .min-icon\": {\n        marginRight: 15,\n        height: 28,\n        width: 38,\n      },\n    },\n    helpText: {\n      fontSize: 16,\n      paddingLeft: 5,\n    },\n  });\n\ninterface IHelpBox {\n  classes: any;\n  iconComponent: any;\n  title: string;\n  help: any;\n}\n\nconst HelpBox = ({ classes, iconComponent, title, help }: IHelpBox) => {\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12} className={classes.leftItems}>\n          {iconComponent}\n          {title}\n        </Grid>\n        <Grid item xs={12} className={classes.helpText}>\n          {help}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(HelpBox);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const DiagStatError = \"error\";\nexport const DiagStatSuccess = \"success\";\nexport const DiagStatInProgress = \"inProgress\";\n\nexport interface HealthInfoMessage {\n  timestamp: Date;\n  error: string;\n  perf: perfInfo;\n  minio: minioHealthInfo;\n  sys: sysHealthInfo;\n}\n\nexport interface ReportMessage {\n  encoded: string;\n  serverHealthInfo: HealthInfoMessage;\n}\n\nexport interface perfInfo {\n  drives: serverDrivesInfo[];\n  net: serverNetHealthInfo[];\n  net_parallel: serverNetHealthInfo;\n  error: string;\n}\n\nexport interface serverDrivesInfo {\n  addr: string;\n  serial: drivePerfInfo[];\n  parallel: drivePerfInfo[];\n  error: string;\n}\n\nexport interface drivePerfInfo {\n  endpoint: string;\n  latency: diskLatency;\n  throughput: diskThroughput;\n  error: string;\n}\n\nexport interface diskLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\n\nexport interface diskThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface serverNetHealthInfo {\n  addr: string;\n  net: netPerfInfo[];\n  error: string;\n}\n\nexport interface netPerfInfo {\n  remote: string;\n  latency: netLatency;\n  throughput: netThroughput;\n  error: string;\n}\n\nexport interface netLatency {\n  avg_secs: number;\n  percentile50_secs: number;\n  percentile90_secs: number;\n  percentile99_secs: number;\n  min_secs: number;\n  max_secs: number;\n}\n\nexport interface netThroughput {\n  avg_bytes_per_sec: number;\n  percentile50_bytes_per_sec: number;\n  percentile90_bytes_per_sec: number;\n  percentile99_bytes_per_sec: number;\n  min_bytes_per_sec: number;\n  max_bytes_per_sec: number;\n}\n\nexport interface minioHealthInfo {\n  info: infoMessage;\n  config: any;\n  error: string;\n}\n\nexport interface infoMessage {\n  mode: string;\n  domain: string[];\n  region: string;\n  sqsARN: string[];\n  deploymentID: string;\n  buckets: buckets;\n  objects: objects;\n  usage: usage;\n  services: services;\n  backend: any;\n  servers: serverProperties[];\n}\n\nexport interface buckets {\n  count: number;\n}\n\nexport interface objects {\n  count: number;\n}\n\nexport interface usage {\n  size: number;\n}\n\nexport interface services {\n  vault: vault;\n  ldap: ldap;\n  logger: Map<string, status[]>[];\n  audit: Map<string, status[]>[];\n  notifications: Map<string, Map<string, status[]>[]>;\n}\n\nexport interface vault {\n  status: string;\n  encrypt: string;\n  decrypt: string;\n}\n\nexport interface ldap {\n  status: string;\n}\n\nexport interface status {\n  status: string;\n}\n\nexport interface serverProperties {\n  state: string;\n  endpoint: string;\n  uptime: number;\n  version: string;\n  commitID: string;\n  network: Map<string, string>;\n  drives: disk[];\n}\n\nexport interface disk {\n  endpoint: string;\n  rootDisk: boolean;\n  path: string;\n  healing: boolean;\n  state: string;\n  uuid: string;\n  model: string;\n  totalspace: number;\n  usedspace: number;\n  availspace: number;\n  readthroughput: number;\n  writethroughput: number;\n  readlatency: number;\n  writelatency: number;\n  utilization: number;\n}\n\nexport interface sysHealthInfo {\n  cpus: serverCpuInfo[];\n  drives: serverDiskHwInfo[];\n  osinfos: serverOsInfo[];\n  meminfos: serverMemInfo[];\n  procinfos: serverProcInfo[];\n  error: string;\n}\n\nexport interface serverCpuInfo {\n  addr: string;\n  cpu: cpuInfoStat[];\n  time: cpuTimeStat[];\n  error: string;\n}\n\nexport interface cpuInfoStat {\n  cpu: number;\n  vendorId: string;\n  family: string;\n  model: string;\n  stepping: number;\n  physicalId: string;\n  coreId: string;\n  cores: number;\n  modelName: string;\n  mhz: number;\n  cacheSize: number;\n  flags: string[];\n  microcode: string;\n}\n\nexport interface cpuTimeStat {\n  cpu: string;\n  user: number;\n  system: number;\n  idle: number;\n  nice: number;\n  iowait: number;\n  irq: number;\n  softirq: number;\n  steal: number;\n  guest: number;\n  guestNice: number;\n}\n\nexport interface serverDiskHwInfo {\n  addr: string;\n  usages: diskUsageStat[];\n  partitions: partitionStat[];\n  counters: Map<string, diskIOCountersStat>;\n  error: string;\n}\n\nexport interface diskUsageStat {\n  path: string;\n  fstype: string;\n  total: number;\n  free: number;\n  used: number;\n  usedPercent: number;\n  inodesTotal: number;\n  inodesUsed: number;\n  inodesFree: number;\n  inodesUsedPercent: number;\n}\n\nexport interface partitionStat {\n  device: string;\n  mountpoint: string;\n  fstype: string;\n  opts: string;\n  smartInfo: smartInfo;\n}\n\nexport interface smartInfo {\n  device: string;\n  scsi: scsiInfo;\n  nvme: nvmeInfo;\n  ata: ataInfo;\n  error: string;\n}\n\nexport interface scsiInfo {\n  scsiCapacityBytes: number;\n  scsiModeSenseBuf: string;\n  scsirespLen: number;\n  scsiBdLen: number;\n  scsiOffset: number;\n  sciRpm: number;\n}\n\nexport interface nvmeInfo {\n  serialNum: string;\n  vendorId: string;\n  firmwareVersion: string;\n  modelNum: string;\n  spareAvailable: string;\n  spareThreshold: string;\n  temperature: string;\n  criticalWarning: string;\n  maxDataTransferPages: number;\n  controllerBusyTime: number;\n  powerOnHours: number;\n  powerCycles: number;\n  unsafeShutdowns: number;\n  mediaAndDataIntgerityErrors: number;\n  dataUnitsReadBytes: number;\n  dataUnitsWrittenBytes: number;\n  hostReadCommands: number;\n  hostWriteCommands: number;\n}\n\nexport interface ataInfo {\n  scsiLuWWNDeviceID: string;\n  serialNum: string;\n  modelNum: string;\n  firmwareRevision: string;\n  RotationRate: string;\n  MajorVersion: string;\n  MinorVersion: string;\n  smartSupportAvailable: boolean;\n  smartSupportEnabled: boolean;\n  smartErrorLog: string;\n  transport: string;\n}\n\nexport interface diskIOCountersStat {\n  readCount: number;\n  mergedReadCount: number;\n  DriteCount: number;\n  mergedWriteCount: number;\n  readBytes: number;\n  writeBytes: number;\n  readTime: number;\n  writeTime: number;\n  iopsInProgress: number;\n  ioTime: number;\n  weightedIO: number;\n  name: string;\n  serialNumber: string;\n  label: string;\n}\n\nexport interface serverOsInfo {\n  addr: string;\n  info: infoStat;\n  sensors: temperatureStat[];\n  users: userStat[];\n  error: string;\n}\n\nexport interface infoStat {\n  hostname: string;\n  uptime: number;\n  bootTime: number;\n  procs: number;\n  os: string;\n  platform: string;\n  platformFamily: string;\n  platformVersion: string;\n  kernelVersion: string;\n  kernelArch: string;\n  virtualizationSystem: string;\n  virtualizationRole: string;\n  hostid: string;\n}\n\nexport interface temperatureStat {\n  sensorKey: string;\n  sensorTemperature: number;\n}\n\nexport interface userStat {\n  user: string;\n  terminal: string;\n  host: string;\n  started: number;\n}\n\nexport interface serverMemInfo {\n  addr: string;\n  swap: swapMemoryStat;\n  virtualmem: virtualMemoryStat;\n  error: string;\n}\n\nexport interface swapMemoryStat {\n  total: number;\n  used: number;\n  free: number;\n  usedPercent: number;\n  sin: number;\n  sout: number;\n  pgin: number;\n  pgout: number;\n  pgfault: number;\n  pgmajfault: number;\n}\n\nexport interface virtualMemoryStat {\n  total: number;\n  available: number;\n  used: number;\n  usedPercent: number;\n  free: number;\n  active: number;\n  inactive: number;\n  wired: number;\n  laundry: number;\n  buffers: number;\n  cached: number;\n  writeback: number;\n  dirty: number;\n  writebacktmp: number;\n  shared: number;\n  slab: number;\n  sreclaimable: number;\n  sunreclaim: number;\n  pagetables: number;\n  swapcached: number;\n  commitlimit: number;\n  committedas: number;\n  hightotal: number;\n  highfree: number;\n  lowtotal: number;\n  lowfree: number;\n  swaptotal: number;\n  swapfree: number;\n  mapped: number;\n  vmalloctotal: number;\n  vmallocused: number;\n  vmallocchunk: number;\n  hugepagestotal: number;\n  hugepagesfree: number;\n  hugepagesize: number;\n}\n\nexport interface serverProcInfo {\n  addr: string;\n  processes: sysProcess[];\n  error: string;\n}\n\nexport interface sysProcess {\n  pid: number;\n  background: boolean;\n  cpupercent: number;\n  children: number[];\n  cmd: string;\n  connections: nethwConnectionStat[];\n  createtime: number;\n  cwd: string;\n  exe: string;\n  gids: number[];\n  iocounters: processIOCountersStat;\n  isrunning: boolean;\n  meminfo: memoryInfoStat;\n  memmaps: any[];\n  mempercent: number;\n  name: string;\n  netiocounters: nethwIOCounterStat[];\n  nice: number;\n  numctxswitches: processNmCtxSwitchesStat;\n  numfds: number;\n  numthreads: number;\n  pagefaults: processPageFaultsStat;\n  parent: number;\n  ppid: number;\n  rlimit: processRLimitStat[];\n  status: string;\n  tgid: number;\n  cputimes: cpuTimeStat;\n  uids: number[];\n  username: string;\n}\n\nexport interface nethwConnectionStat {\n  fd: number;\n  family: number;\n  type: number;\n  localaddr: netAddr;\n  remoteaddr: netAddr;\n  status: string;\n  uids: number[];\n  pid: number;\n}\n\nexport interface netAddr {\n  ip: string;\n  port: number;\n}\n\nexport interface processIOCountersStat {\n  readCount: number;\n  writeCount: number;\n  readBytes: number;\n  writeBytes: number;\n}\n\nexport interface memoryInfoStat {\n  rss: number;\n  vms: number;\n  hwm: number;\n  data: number;\n  stack: number;\n  locked: number;\n  swap: number;\n}\n\nexport interface nethwIOCounterStat {\n  name: string;\n  bytesSent: number;\n  bytesRecv: number;\n  packetsSent: number;\n  packetsRecv: number;\n  errin: number;\n  errout: number;\n  dropin: number;\n  dropout: number;\n  fifoin: number;\n  fifoout: number;\n}\n\nexport interface processNmCtxSwitchesStat {\n  voluntary: number;\n  involuntary: number;\n}\n\nexport interface processPageFaultsStat {\n  minorFaults: number;\n  majorFaults: number;\n  childMinorFaults: number;\n  childMajorFaults: number;\n}\n\nexport interface processRLimitStat {\n  resource: number;\n  soft: number;\n  hard: number;\n  used: number;\n}\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { DrivesIcon, VersionIcon } from \"../../../../icons\";\nimport { ServerInfo, Usage } from \"../../Dashboard/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport Loader from \"../Loader/Loader\";\n\ninterface ITestWrapper {\n  title: any;\n  children: any;\n  classes: any;\n  advancedVisible: boolean;\n  advancedContent?: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    titleBar: {\n      borderBottom: \"#E5E5E5 1px solid\",\n      padding: \"30px 25px\",\n      fontSize: 20,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      borderRadius: \"10px 10px 0px 0px\",\n      paddingTop: 0,\n    },\n    divisorContainer: {\n      padding: 25,\n    },\n    serversData: {\n      color: \"#07193E\",\n      fontSize: 18,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg\": {\n        marginRight: 10,\n      },\n    },\n    minioVersionContainer: {\n      fontSize: 12,\n      color: \"#07193E\",\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n    },\n    versionIcon: {\n      color: \"#07193E\",\n      marginRight: 20,\n    },\n    loaderAlign: {\n      textAlign: \"center\",\n    },\n    advancedContainer: {\n      justifyContent: \"flex-end\",\n      display: \"flex\",\n    },\n    optionsContainer: {\n      padding: 0,\n      marginBottom: 25,\n    },\n    advancedConfiguration: {\n      color: \"#2781B0\",\n      fontSize: 10,\n      textDecoration: \"underline\",\n      border: \"none\",\n      backgroundColor: \"transparent\",\n      cursor: \"pointer\",\n      alignItems: \"center\",\n      display: \"flex\",\n\n      \"&:hover\": {\n        color: \"#07193E\",\n      },\n\n      \"& svg\": {\n        width: 10,\n        alignSelf: \"center\",\n        marginLeft: 5,\n      },\n    },\n    advancedOpen: {\n      transform: \"rotateZ(-90deg) translateX(-4px) translateY(2px)\",\n    },\n    advancedClosed: {\n      transform: \"rotateZ(90deg)\",\n    },\n    advancedContent: {\n      backgroundColor: \"#F5F7F9\",\n      maxHeight: 0,\n      transitionDuration: \"0.3s\",\n      overflow: \"hidden\",\n      padding: \"0 15px\",\n      \"&.open\": {\n        maxHeight: 400,\n        padding: 15,\n      },\n    },\n  });\n\nconst TestWrapper = ({\n  title,\n  children,\n  classes,\n  advancedVisible,\n  advancedContent,\n}: ITestWrapper) => {\n  const [version, setVersion] = useState<string>(\"N/A\");\n  const [totalNodes, setTotalNodes] = useState<number>(0);\n  const [totalDrives, setTotalDrives] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [advancedOpen, setAdvancedOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/info?defaultOnly=true`)\n        .then((res: Usage) => {\n          const totalServers = res.servers?.length;\n          setTotalNodes(totalServers);\n\n          if (res.servers.length > 0) {\n            setVersion(res.servers[0].version);\n\n            const totalServers = res.servers.reduce(\n              (prevTotal: number, currentElement: ServerInfo) => {\n                return prevTotal + currentElement.drives.length;\n              },\n              0\n            );\n            setTotalDrives(totalServers);\n          }\n\n          setLoading(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n        });\n    }\n  }, [loading]);\n\n  return (\n    <Grid item xs={12}>\n      <Grid item xs={12} className={classes.titleBar}>\n        {title}\n      </Grid>\n      <Grid item xs={12}>\n        <Grid item xs={12} className={classes.optionsContainer}>\n          <Grid container className={classes.divisorContainer}>\n            {!loading ? (\n              <Fragment>\n                <Grid item xs={12} md={4} className={classes.serversData}>\n                  <DrivesIcon /> <strong>{totalNodes}</strong>\n                  &nbsp;nodes,&nbsp;\n                  <strong>{totalDrives}</strong>&nbsp; drives\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  md={4}\n                  className={classes.minioVersionContainer}\n                >\n                  <span className={classes.versionIcon}>\n                    <VersionIcon />\n                  </span>{\" \"}\n                  MinIO VERSION&nbsp;<strong>{version}</strong>\n                </Grid>\n                <Grid item xs={12} md={4} className={classes.advancedContainer}>\n                  {advancedVisible && (\n                    <button\n                      onClick={() => {\n                        setAdvancedOpen(!advancedOpen);\n                      }}\n                      className={classes.advancedConfiguration}\n                    >\n                      Advanced configurations{\" \"}\n                      <span\n                        className={\n                          advancedOpen\n                            ? classes.advancedOpen\n                            : classes.advancedClosed\n                        }\n                      >\n                        <ArrowForwardIosIcon />\n                      </span>\n                    </button>\n                  )}\n                </Grid>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Grid item xs={12} className={classes.loaderAlign}>\n                  <Loader style={{ width: 25, height: 25 }} />\n                </Grid>\n              </Fragment>\n            )}\n          </Grid>\n          {advancedContent && (\n            <Grid\n              xs={12}\n              className={`${classes.advancedContent} ${\n                advancedOpen ? \"open\" : \"\"\n              }`}\n            >\n              {advancedContent}\n            </Grid>\n          )}\n        </Grid>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(TestWrapper);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  ICloseEvent,\n  IMessageEvent,\n  w3cwebsocket as W3CWebSocket,\n} from \"websocket\";\nimport { AppState, useAppDispatch } from \"../../../store\";\nimport { useSelector } from \"react-redux\";\nimport {\n  DiagStatError,\n  DiagStatInProgress,\n  DiagStatSuccess,\n  HealthInfoMessage,\n  ReportMessage,\n} from \"./types\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  WSCloseAbnormalClosure,\n  WSCloseInternalServerErr,\n  WSClosePolicyViolation,\n  wsProtocol,\n} from \"../../../utils/wsUtils\";\nimport {\n  actionsTray,\n  containerForHeader,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { Button, Grid } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\n\nimport TestWrapper from \"../Common/TestWrapper/TestWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport WarnIcon from \"../../../icons/WarnIcon\";\nimport Loader from \"../Common/Loader/Loader\";\nimport { setServerDiagStat } from \"../../../systemSlice\";\nimport {\n  healthInfoMessageReceived,\n  healthInfoResetMessage,\n} from \"./healthInfoSlice\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    loading: {\n      paddingTop: 8,\n      paddingLeft: 40,\n    },\n    buttons: {\n      justifyContent: \"flex-start\",\n      gap: 20,\n    },\n    localMessage: {\n      fontSize: 24,\n      color: \"#07193E\",\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      marginBottom: 10,\n    },\n    startDiagnostic: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    progressResult: {\n      textAlign: \"center\",\n      marginBottom: 25,\n    },\n    diagNew: {\n      textAlign: \"right\",\n      margin: 25,\n      marginBottom: 0,\n    },\n    ...actionsTray,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IHealthInfo {\n  classes: any;\n  namespace: string;\n  tenant: string;\n}\n\nconst HealthInfo = ({ classes }: IHealthInfo) => {\n  const dispatch = useAppDispatch();\n\n  const message = useSelector((state: AppState) => state.healthInfo.message);\n\n  const serverDiagnosticStatus = useSelector(\n    (state: AppState) => state.system.serverDiagnosticStatus\n  );\n  const [startDiagnostic, setStartDiagnostic] = useState(false);\n  const [diagStarted, setDiagStarted] = useState<boolean>(false);\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\n  const [localMessage, setMessage] = useState<string>(\"\");\n  const [title, setTitle] = useState<string>(\"New Diagnostic\");\n  const [diagFileContent, setDiagFileContent] = useState<string>(\"\");\n\n  const download = () => {\n    let element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      `data:application/gzip;base64,${diagFileContent}`\n    );\n    element.setAttribute(\"download\", \"diagnostic.json.gz\");\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  };\n\n  useEffect(() => {\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      setTitle(\"Diagnostic in progress...\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatSuccess && diagStarted) {\n      setTitle(\"Diagnostic complete\");\n      return;\n    }\n\n    if (serverDiagnosticStatus === DiagStatError) {\n      setTitle(\"Error\");\n      return;\n    }\n  }, [serverDiagnosticStatus, startDiagnostic, diagStarted]);\n\n  useEffect(() => {\n    if (\n      serverDiagnosticStatus === DiagStatSuccess &&\n      message !== ({} as HealthInfoMessage)\n    ) {\n      // Allow download of diagnostics file only when\n      // it succeded fetching all the results and info is not empty.\n      setDownloadDisabled(false);\n    }\n    if (serverDiagnosticStatus === DiagStatInProgress) {\n      // Disable Start Diagnotic and Disable Download buttons\n      // if a Diagnosis is in progress.\n      setDownloadDisabled(true);\n    }\n    setStartDiagnostic(false);\n  }, [serverDiagnosticStatus, message]);\n\n  useEffect(() => {\n    if (startDiagnostic) {\n      dispatch(healthInfoResetMessage());\n      setDiagFileContent(\"\");\n      const url = new URL(window.location.toString());\n      const isDev = process.env.NODE_ENV === \"development\";\n      const port = isDev ? \"9090\" : url.port;\n\n      const wsProt = wsProtocol(url.protocol);\n\n      // check if we are using base path, if not this always is `/`\n      const baseLocation = new URL(document.baseURI);\n      const baseUrl = baseLocation.pathname;\n\n      const c = new W3CWebSocket(\n        `${wsProt}://${url.hostname}:${port}${baseUrl}ws/health-info?deadline=1h`\n      );\n\n      let interval: any | null = null;\n      if (c !== null) {\n        c.onopen = () => {\n          console.log(\"WebSocket Client Connected\");\n          c.send(\"ok\");\n          interval = setInterval(() => {\n            c.send(\"ok\");\n          }, 10 * 1000);\n          setDiagStarted(true);\n          setMessage(\n            \"Diagnostic started. Please do not refresh page during diagnosis.\"\n          );\n          dispatch(setServerDiagStat(DiagStatInProgress));\n        };\n        c.onmessage = (message: IMessageEvent) => {\n          let m: ReportMessage = JSON.parse(message.data.toString());\n          if (m.serverHealthInfo) {\n            m.serverHealthInfo.timestamp = new Date(\n              m.serverHealthInfo.timestamp.toString()\n            );\n            dispatch(healthInfoMessageReceived(m.serverHealthInfo));\n          }\n          if (m.encoded !== \"\") {\n            setDiagFileContent(m.encoded);\n          }\n        };\n        c.onerror = (error: Error) => {\n          console.log(\"error closing websocket:\", error.message);\n          c.close(1000);\n          clearInterval(interval);\n          dispatch(setServerDiagStat(DiagStatError));\n        };\n        c.onclose = (event: ICloseEvent) => {\n          clearInterval(interval);\n          if (\n            event.code === WSCloseInternalServerErr ||\n            event.code === WSClosePolicyViolation ||\n            event.code === WSCloseAbnormalClosure\n          ) {\n            // handle close with error\n            console.log(\"connection closed by server with code:\", event.code);\n            setMessage(\"An error occurred while getting Diagnostic file.\");\n            dispatch(setServerDiagStat(DiagStatError));\n          } else {\n            console.log(\"connection closed by server\");\n\n            setMessage(\"Diagnostic file is ready to be downloaded.\");\n            dispatch(setServerDiagStat(DiagStatSuccess));\n          }\n        };\n      }\n    } else {\n      // reset start status\n      setStartDiagnostic(false);\n    }\n  }, [startDiagnostic, dispatch]);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Health\" />\n      <PageLayout>\n        <Grid item xs={12} className={classes.boxy}>\n          <TestWrapper title={title} advancedVisible={false}>\n            <Grid container className={classes.buttons}>\n              {!diagStarted && (\n                <Grid\n                  key=\"start-diag\"\n                  item\n                  xs={12}\n                  className={classes.startDiagnostic}\n                >\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={startDiagnostic}\n                    onClick={() => setStartDiagnostic(true)}\n                  >\n                    Start Diagnostic\n                  </Button>\n                </Grid>\n              )}\n              {diagStarted && (\n                <Grid\n                  key=\"start-download\"\n                  item\n                  xs={12}\n                  className={classes.progressResult}\n                >\n                  <div className={classes.localMessage}>{localMessage}</div>\n                  {serverDiagnosticStatus === DiagStatInProgress ? (\n                    <div className={classes.loading}>\n                      <Loader style={{ width: 25, height: 25 }} />\n                    </div>\n                  ) : (\n                    <Fragment>\n                      {serverDiagnosticStatus !== DiagStatError && (\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => download()}\n                          disabled={downloadDisabled}\n                        >\n                          Download\n                        </Button>\n                      )}\n                      <Grid item xs={12} className={classes.diagNew}>\n                        <Button\n                          id=\"start-new-diagnostic\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={startDiagnostic}\n                          onClick={() => setStartDiagnostic(true)}\n                        >\n                          Start New Diagnostic\n                        </Button>\n                      </Grid>\n                    </Fragment>\n                  )}\n                </Grid>\n              )}\n            </Grid>\n          </TestWrapper>\n        </Grid>\n        {!diagStarted && (\n          <Fragment>\n            <br />\n            <HelpBox\n              title={\n                \"During the health diagnostics run all production traffic will be suspended.\"\n              }\n              iconComponent={<WarnIcon />}\n              help={<Fragment />}\n            />\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(HealthInfo);\n","// This file is part of GuinsooLab Console Server\n// Copyright (c) 2020-2022 GuinsooLab, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// Close codes for websockets defined in RFC 6455\nexport const WSCloseNormalClosure = 1000;\nexport const WSCloseCloseGoingAway = 1001;\nexport const WSCloseAbnormalClosure = 1006;\nexport const WSClosePolicyViolation = 1008;\nexport const WSCloseInternalServerErr = 1011;\n\nexport const wsProtocol = (protocol: string): string => {\n  let wsProtocol = \"ws\";\n  if (protocol === \"https:\") {\n    wsProtocol = \"wss\";\n  }\n  return wsProtocol;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["withStyles","theme","createStyles","root","border","borderRadius","backgroundColor","paddingLeft","paddingTop","paddingBottom","paddingRight","leftItems","fontSize","fontWeight","marginBottom","display","alignItems","marginRight","height","width","helpText","classes","iconComponent","title","help","className","container","item","xs","DiagStatError","DiagStatSuccess","DiagStatInProgress","titleBar","borderBottom","padding","color","divisorContainer","serversData","minioVersionContainer","justifyContent","alignSelf","versionIcon","loaderAlign","textAlign","advancedContainer","optionsContainer","advancedConfiguration","textDecoration","cursor","marginLeft","advancedOpen","transform","advancedClosed","advancedContent","maxHeight","transitionDuration","overflow","children","advancedVisible","useState","version","setVersion","totalNodes","setTotalNodes","totalDrives","setTotalDrives","loading","setLoading","setAdvancedOpen","useEffect","api","then","res","totalServers","servers","length","reduce","prevTotal","currentElement","drives","catch","err","Grid","Fragment","Loader","style","md","onClick","ArrowForwardIos","buttons","gap","localMessage","startDiagnostic","progressResult","diagNew","margin","actionsTray","containerForHeader","spacing","dispatch","useAppDispatch","message","useSelector","state","healthInfo","serverDiagnosticStatus","system","setStartDiagnostic","diagStarted","setDiagStarted","downloadDisabled","setDownloadDisabled","setMessage","setTitle","diagFileContent","setDiagFileContent","healthInfoResetMessage","url","URL","window","location","toString","port","wsProt","wsProtocol","protocol","baseUrl","document","baseURI","pathname","c","W3CWebSocket","hostname","interval","onopen","console","log","send","setInterval","setServerDiagStat","onmessage","m","JSON","parse","data","serverHealthInfo","timestamp","Date","healthInfoMessageReceived","encoded","onerror","error","close","clearInterval","onclose","event","code","WSCloseInternalServerErr","WSClosePolicyViolation","WSCloseAbnormalClosure","PageHeader","label","PageLayout","boxy","Button","type","variant","disabled","element","createElement","setAttribute","body","appendChild","click","removeChild","download","id","HelpBox","WarnIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","naiveFallback","self","Error","module","this","globalThis","Object","defineProperty","prototype","get","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","forEach","prop"],"sourceRoot":""}