{"version":3,"file":"static/js/5171.e8fc646a.chunk.js","mappings":"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","sources":["../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}"],"names":["componentWillMount","state","this","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","key","value","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","i","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","Object","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","TypeError","create","configurable"],"sourceRoot":""}